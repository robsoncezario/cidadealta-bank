{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `align=\"nowrap\"`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = React.forwardRef(function Typography(props, ref) {\n  var _clsx;\n\n  var align = props.align,\n      classes = props.classes,\n      className = props.className,\n      color = props.color,\n      component = props.component,\n      display = props.display,\n      gutterBottom = props.gutterBottom,\n      noWrap = props.noWrap,\n      paragraph = props.paragraph,\n      theme = props.theme,\n      variant = props.variant,\n      variantMapping = props.variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"theme\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, (_clsx = {}, _defineProperty(_clsx, classes[variant], variant !== 'inherit'), _defineProperty(_clsx, classes[\"color\".concat(capitalize(color))], color !== 'initial'), _defineProperty(_clsx, classes.noWrap, noWrap), _defineProperty(_clsx, classes.gutterBottom, gutterBottom), _defineProperty(_clsx, classes.paragraph, paragraph), _defineProperty(_clsx, classes[\"align\".concat(capitalize(align))], align !== 'inherit'), _defineProperty(_clsx, classes[\"display\".concat(capitalize(display))], display !== 'initial'), _clsx), className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * By default, it maps the variant to a good default headline component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with an ellipsis.\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  theme: PropTypes.object.isRequired,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * We are empirically mapping the variant property to a range of different DOM element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` property.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nTypography.defaultProps = {\n  align: 'inherit',\n  color: 'initial',\n  display: 'initial',\n  gutterBottom: false,\n  noWrap: false,\n  paragraph: false,\n  variant: 'body1',\n  variantMapping: defaultVariantMapping\n};\nexport default withStyles(styles, {\n  name: 'MuiTypography',\n  withTheme: true\n})(Typography);","map":{"version":3,"sources":["C:/Users/robson/Desktop/cidadealta/cidadealta-app/node_modules/@material-ui/core/esm/Typography/Typography.js"],"names":["_extends","_defineProperty","_objectWithoutProperties","React","PropTypes","clsx","withStyles","capitalize","styles","theme","root","margin","body2","typography","body1","caption","button","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","overline","srOnly","position","height","width","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","noWrap","textOverflow","whiteSpace","gutterBottom","marginBottom","paragraph","colorInherit","color","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","display","displayBlock","defaultVariantMapping","Typography","forwardRef","props","ref","_clsx","align","classes","className","component","variant","variantMapping","other","Component","createElement","concat","process","env","NODE_ENV","propTypes","oneOf","children","node","object","isRequired","string","elementType","bool","defaultProps","name","withTheme"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `align=\"nowrap\"`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = React.forwardRef(function Typography(props, ref) {\n  var _clsx;\n\n  var align = props.align,\n      classes = props.classes,\n      className = props.className,\n      color = props.color,\n      component = props.component,\n      display = props.display,\n      gutterBottom = props.gutterBottom,\n      noWrap = props.noWrap,\n      paragraph = props.paragraph,\n      theme = props.theme,\n      variant = props.variant,\n      variantMapping = props.variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"theme\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, (_clsx = {}, _defineProperty(_clsx, classes[variant], variant !== 'inherit'), _defineProperty(_clsx, classes[\"color\".concat(capitalize(color))], color !== 'initial'), _defineProperty(_clsx, classes.noWrap, noWrap), _defineProperty(_clsx, classes.gutterBottom, gutterBottom), _defineProperty(_clsx, classes.paragraph, paragraph), _defineProperty(_clsx, classes[\"align\".concat(capitalize(align))], align !== 'inherit'), _defineProperty(_clsx, classes[\"display\".concat(capitalize(display))], display !== 'initial'), _clsx), className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * By default, it maps the variant to a good default headline component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with an ellipsis.\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  theme: PropTypes.object.isRequired,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * We are empirically mapping the variant property to a range of different DOM element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` property.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nTypography.defaultProps = {\n  align: 'inherit',\n  color: 'initial',\n  display: 'initial',\n  gutterBottom: false,\n  noWrap: false,\n  paragraph: false,\n  variant: 'body1',\n  variantMapping: defaultVariantMapping\n};\nexport default withStyles(styles, {\n  name: 'MuiTypography',\n  withTheme: true\n})(Typography);"]},"metadata":{},"sourceType":"module"}