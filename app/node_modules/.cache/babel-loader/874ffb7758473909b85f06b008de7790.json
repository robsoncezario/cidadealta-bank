{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport _objectWithoutProperties from '@babel/runtime/helpers/esm/objectWithoutProperties';\nimport { useRef, useCallback, useState, useMemo, useEffect, createElement, useReducer, cloneElement, Fragment, forwardRef, useContext } from 'react';\nimport { oneOfType, object, string, number, instanceOf, oneOf, node } from 'prop-types';\nimport { u as useUtils, a as useNow, V as VIEW_HEIGHT, D as DIALOG_WIDTH } from './dimensions-91c32fe6.js';\nimport clsx from 'clsx';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport { createSvgIcon } from '@material-ui/core/utils';\nimport { C as ClockView } from './ClockView-1da258a1.js';\nimport { C as CalendarIcon, A as ArrowSwitcher } from './ArrowSwitcher-81199363.js';\nimport { styled, makeStyles, fade, useTheme } from '@material-ui/core/styles';\nimport _slicedToArray from '@babel/runtime/helpers/esm/slicedToArray';\nimport { a as arrayIncludes, c as createDelegatedEventHandler, o as onSpaceOrEnter } from './utils-ef34bcd7.js';\nimport { W as WrapperVariantContext, I as IsStaticVariantContext } from './WrapperVariantContext-a0f5915b.js';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { useRifm } from 'rifm';\nimport { u as useIsomorphicEffect, a as useGlobalKeyDown, k as keycode } from './useKeyDown-9f8b37a0.js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { Calendar } from './Calendar.js';\nimport Fade from '@material-ui/core/Fade';\n\nvar findClosestEnabledDate = function findClosestEnabledDate(_ref) {\n  var date = _ref.date,\n      utils = _ref.utils,\n      minDate = _ref.minDate,\n      maxDate = _ref.maxDate,\n      disableFuture = _ref.disableFuture,\n      disablePast = _ref.disablePast,\n      shouldDisableDate = _ref.shouldDisableDate;\n  var today = utils.startOfDay(utils.date());\n\n  if (disablePast && utils.isBefore(minDate, today)) {\n    minDate = today;\n  }\n\n  if (disableFuture && utils.isAfter(maxDate, today)) {\n    maxDate = today;\n  }\n\n  var forward = date;\n  var backward = date;\n\n  if (utils.isBefore(date, minDate)) {\n    forward = utils.date(minDate);\n    backward = null;\n  }\n\n  if (utils.isAfter(date, maxDate)) {\n    if (backward) {\n      backward = utils.date(maxDate);\n    }\n\n    forward = null;\n  }\n\n  while (forward || backward) {\n    if (forward && utils.isAfter(forward, maxDate)) {\n      forward = null;\n    }\n\n    if (backward && utils.isBefore(backward, minDate)) {\n      backward = null;\n    }\n\n    if (forward) {\n      if (!shouldDisableDate(forward)) {\n        return forward;\n      }\n\n      forward = utils.addDays(forward, 1);\n    }\n\n    if (backward) {\n      if (!shouldDisableDate(backward)) {\n        return backward;\n      }\n\n      backward = utils.addDays(backward, -1);\n    }\n  } // fallback to today if no enabled days\n\n\n  return utils.date();\n};\n\nvar isYearOnlyView = function isYearOnlyView(views) {\n  return views.length === 1 && views[0] === 'year';\n};\n\nvar isYearAndMonthViews = function isYearAndMonthViews(views) {\n  return views.length === 2 && arrayIncludes(views, 'month') && arrayIncludes(views, 'year');\n};\n\nvar getFormatByViews = function getFormatByViews(views, utils) {\n  if (isYearOnlyView(views)) {\n    return utils.formats.year;\n  }\n\n  if (isYearAndMonthViews(views)) {\n    return utils.formats.monthAndYear;\n  }\n\n  return utils.formats.keyboardDate;\n};\n\nfunction parsePickerInputValue(now, utils, _ref2) {\n  var value = _ref2.value,\n      defaultHighlight = _ref2.defaultHighlight;\n  var parsedValue = utils.date(value || defaultHighlight || now);\n  return parsedValue && utils.isValid(parsedValue) ? parsedValue : now;\n}\n\nfunction parseRangeInputValue(now, utils, _ref3) {\n  var _ref3$value = _ref3.value,\n      value = _ref3$value === void 0 ? [null, null] : _ref3$value;\n  return value.map(function (date) {\n    return !utils.isValid(date) || date === null ? null : utils.startOfDay(utils.date(date));\n  });\n}\n\nvar isRangeValid = function isRangeValid(utils, range) {\n  return Boolean(range && range[0] && range[1] && utils.isBefore(range[0], range[1]));\n};\n\nvar isWithinRange = function isWithinRange(utils, day, range) {\n  return isRangeValid(utils, range) && utils.isWithinRange(day, range);\n};\n\nvar isStartOfRange = function isStartOfRange(utils, day, range) {\n  return isRangeValid(utils, range) && utils.isSameDay(day, range[0]);\n};\n\nvar isEndOfRange = function isEndOfRange(utils, day, range) {\n  return isRangeValid(utils, range) && utils.isSameDay(day, range[1]);\n};\n\nvar validateDate = function validateDate(utils, value, _ref4) {\n  var minDate = _ref4.minDate,\n      maxDate = _ref4.maxDate,\n      disableFuture = _ref4.disableFuture,\n      shouldDisableDate = _ref4.shouldDisableDate,\n      disablePast = _ref4.disablePast;\n  var now = utils.date();\n  var date = utils.date(value);\n\n  if (value === null) {\n    return null;\n  }\n\n  switch (true) {\n    case !utils.isValid(value):\n      return 'invalidDate';\n\n    case Boolean(shouldDisableDate && shouldDisableDate(date)):\n      return 'shouldDisableDate';\n\n    case Boolean(disableFuture && utils.isAfterDay(date, now)):\n      return 'disableFuture';\n\n    case Boolean(disablePast && utils.isBeforeDay(date, now)):\n      return 'disablePast';\n\n    case Boolean(minDate && utils.isBeforeDay(date, minDate)):\n      return 'minDate';\n\n    case Boolean(maxDate && utils.isAfterDay(date, maxDate)):\n      return 'maxDate';\n\n    default:\n      return null;\n  }\n};\n\nvar validateDateRange = function validateDateRange(utils, value, dateValidationProps) {\n  var _value = _slicedToArray(value, 2),\n      start = _value[0],\n      end = _value[1]; // for partial input\n\n\n  if (start === null || end === null) {\n    return [null, null];\n  }\n\n  var dateValidations = [validateDate(utils, start, dateValidationProps), validateDate(utils, end, dateValidationProps)];\n\n  if (dateValidations[0] || dateValidations[1]) {\n    return dateValidations;\n  }\n\n  if (!isRangeValid(utils, [utils.date(start), utils.date(end)])) {\n    return ['invalidRange', 'invalidRange'];\n  }\n\n  return [null, null];\n};\n\nfunction getTextFieldAriaText(rawValue, utils) {\n  return rawValue && utils.isValid(utils.date(rawValue)) ? \"Choose date, selected date is \".concat(utils.format(utils.date(rawValue), 'fullDate')) : 'Choose date';\n}\n\nvar getDisplayDate = function getDisplayDate(utils, value, inputFormat) {\n  var date = utils.date(value);\n  var isEmpty = value === null;\n\n  if (isEmpty) {\n    return '';\n  }\n\n  return utils.isValid(date) ? utils.formatByString(date, inputFormat) : '';\n};\n\nfunction pick12hOr24hFormat(userFormat, ampm, formats) {\n  if (userFormat) {\n    return userFormat;\n  }\n\n  if (typeof ampm === 'undefined') {\n    return formats.localized;\n  }\n\n  return ampm ? formats['12h'] : formats['24h'];\n}\n\nvar MASK_USER_INPUT_SYMBOL = '_';\nvar staticDateWith2DigitTokens = new Date('2019-11-21T22:30:00.000');\nvar staticDateWith1DigitTokens = new Date('2019-01-01T09:00:00.000');\n\nfunction checkMaskIsValidForCurrentFormat(mask, format, acceptRegex, utils) {\n  var formattedDateWith1Digit = utils.formatByString(utils.date(staticDateWith1DigitTokens), format);\n  var inferredFormatPatternWith1Digits = formattedDateWith1Digit.replace(acceptRegex, MASK_USER_INPUT_SYMBOL);\n  var inferredFormatPatternWith2Digits = utils.formatByString(utils.date(staticDateWith2DigitTokens), format).replace(acceptRegex, '_');\n  var isMaskValid = inferredFormatPatternWith2Digits === mask && inferredFormatPatternWith1Digits === mask; // @ts-ignore\n\n  if (!isMaskValid && process.env.NODE_ENV !== 'production') {\n    console.warn(\"The mask \\\"\".concat(mask, \"\\\" you passed is not valid for the format used \").concat(format, \". Falling down to uncontrolled not-masked input.\"));\n  }\n\n  return isMaskValid;\n}\n\nvar maskedDateFormatter = function maskedDateFormatter(mask, acceptRegexp) {\n  return function (value) {\n    return value.split('').map(function (_char, i) {\n      acceptRegexp.lastIndex = 0;\n\n      if (i > mask.length - 1) {\n        return '';\n      }\n\n      var maskChar = mask[i];\n      var nextMaskChar = mask[i + 1];\n      var acceptedChar = acceptRegexp.test(_char) ? _char : '';\n      var formattedChar = maskChar === MASK_USER_INPUT_SYMBOL ? acceptedChar : maskChar + acceptedChar;\n\n      if (i === value.length - 1 && nextMaskChar && nextMaskChar !== MASK_USER_INPUT_SYMBOL) {\n        // when cursor at the end of mask part (e.g. month) prerender next symbol \"21\" -> \"21/\"\n        return formattedChar ? formattedChar + nextMaskChar : '';\n      } else {\n        return formattedChar;\n      }\n    }).join('');\n  };\n};\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction useMaskedInput(_ref) {\n  var disableMaskedInput = _ref.disableMaskedInput,\n      rawValue = _ref.rawValue,\n      validationError = _ref.validationError,\n      onChange = _ref.onChange,\n      mask = _ref.mask,\n      _ref$acceptRegex = _ref.acceptRegex,\n      acceptRegex = _ref$acceptRegex === void 0 ? /[\\d]/gi : _ref$acceptRegex,\n      inputFormat = _ref.inputFormat,\n      disabled = _ref.disabled,\n      rifmFormatter = _ref.rifmFormatter,\n      ignoreInvalidInputs = _ref.ignoreInvalidInputs,\n      readOnly = _ref.readOnly,\n      TextFieldProps = _ref.TextFieldProps,\n      label = _ref.label;\n  var utils = useUtils();\n  var isFocusedRef = useRef(false);\n  var getInputValue = useCallback(function () {\n    return getDisplayDate(utils, rawValue, inputFormat);\n  }, [inputFormat, rawValue, utils]);\n  var formatHelperText = utils.getFormatHelperText(inputFormat);\n\n  var _React$useState = useState(getInputValue()),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      innerInputValue = _React$useState2[0],\n      setInnerInputValue = _React$useState2[1];\n\n  var shouldUseMaskedInput = useMemo(function () {\n    // formatting of dates is a quite slow thing, so do not make useless .format calls\n    if (!mask || disableMaskedInput) {\n      return false;\n    }\n\n    return checkMaskIsValidForCurrentFormat(mask, inputFormat, acceptRegex, utils);\n  }, [acceptRegex, disableMaskedInput, inputFormat, mask, utils]);\n  var formatter = useMemo(function () {\n    return shouldUseMaskedInput && mask ? maskedDateFormatter(mask, acceptRegex) : function (st) {\n      return st;\n    };\n  }, [acceptRegex, mask, shouldUseMaskedInput]);\n  useEffect(function () {\n    // We do not need to update the input value on keystroke\n    // Because library formatters can change inputs from 12/12/2 to 12/12/0002\n    if ((rawValue === null || utils.isValid(rawValue)) && !isFocusedRef.current) {\n      setInnerInputValue(getInputValue());\n    }\n  }, [utils, getInputValue, rawValue]);\n\n  var handleChange = function handleChange(text) {\n    var finalString = text === '' || text === mask ? '' : text;\n    setInnerInputValue(finalString);\n    var date = finalString === null ? null : utils.parse(finalString, inputFormat);\n\n    if (ignoreInvalidInputs && !utils.isValid(date)) {\n      return;\n    }\n\n    onChange(date, finalString || undefined);\n  };\n\n  var rifmProps = useRifm({\n    value: innerInputValue,\n    onChange: handleChange,\n    format: rifmFormatter || formatter\n  });\n  var inputStateArgs = shouldUseMaskedInput ? rifmProps : {\n    value: innerInputValue,\n    onChange: function onChange(e) {\n      return handleChange(e.currentTarget.value);\n    }\n  };\n  return _objectSpread({}, inputStateArgs, {\n    label: label,\n    disabled: disabled,\n    placeholder: formatHelperText,\n    error: validationError,\n    helperText: formatHelperText,\n    // @ts-ignore ??? fix typings for textfield finally\n    'data-mui-test': 'keyboard-date-input',\n    inputProps: {\n      readOnly: readOnly,\n      type: shouldUseMaskedInput ? 'tel' : 'text'\n    }\n  }, TextFieldProps, {\n    onFocus: createDelegatedEventHandler(function () {\n      return isFocusedRef.current = true;\n    }, TextFieldProps === null || TextFieldProps === void 0 ? void 0 : TextFieldProps.onFocus),\n    onBlur: createDelegatedEventHandler(function () {\n      return isFocusedRef.current = false;\n    }, TextFieldProps === null || TextFieldProps === void 0 ? void 0 : TextFieldProps.onBlur)\n  });\n}\n\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys$1(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$1(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar KeyboardDateInput = function KeyboardDateInput(_ref) {\n  var renderInput = _ref.renderInput,\n      onOpen = _ref.openPicker,\n      InputProps = _ref.InputProps,\n      InputAdornmentProps = _ref.InputAdornmentProps,\n      _ref$openPickerIcon = _ref.openPickerIcon,\n      openPickerIcon = _ref$openPickerIcon === void 0 ? createElement(CalendarIcon, null) : _ref$openPickerIcon,\n      OpenPickerButtonProps = _ref.OpenPickerButtonProps,\n      hideOpenPickerButton = _ref.disableOpenPicker,\n      _ref$getOpenDialogAri = _ref.getOpenDialogAriaText,\n      getOpenDialogAriaText = _ref$getOpenDialogAri === void 0 ? getTextFieldAriaText : _ref$getOpenDialogAri,\n      containerRef = _ref.containerRef,\n      forwardedRef = _ref.forwardedRef,\n      other = _objectWithoutProperties(_ref, [\"renderInput\", \"openPicker\", \"InputProps\", \"InputAdornmentProps\", \"openPickerIcon\", \"OpenPickerButtonProps\", \"disableOpenPicker\", \"getOpenDialogAriaText\", \"containerRef\", \"forwardedRef\"]);\n\n  var utils = useUtils();\n  var textFieldProps = useMaskedInput(other);\n  var adornmentPosition = (InputAdornmentProps === null || InputAdornmentProps === void 0 ? void 0 : InputAdornmentProps.position) || 'end';\n  return renderInput(_objectSpread$1({\n    ref: containerRef,\n    inputRef: forwardedRef\n  }, textFieldProps, {\n    InputProps: _objectSpread$1({}, InputProps, _defineProperty({}, \"\".concat(adornmentPosition, \"Adornment\"), hideOpenPickerButton ? undefined : createElement(InputAdornment, _extends({\n      position: adornmentPosition\n    }, InputAdornmentProps), createElement(IconButton, _extends({\n      edge: adornmentPosition,\n      \"data-mui-test\": \"open-picker-from-keyboard\",\n      disabled: other.disabled,\n      \"aria-label\": getOpenDialogAriaText(other.rawValue, utils)\n    }, OpenPickerButtonProps, {\n      onClick: onOpen\n    }), openPickerIcon))))\n  }));\n};\n\nfunction useParsedDate(possiblyUnparsedValue) {\n  var utils = useUtils();\n  return useMemo(function () {\n    return typeof possiblyUnparsedValue === 'undefined' ? undefined : utils.date(possiblyUnparsedValue);\n  }, [possiblyUnparsedValue, utils]);\n}\n\nfunction useNextMonthDisabled(month, _ref) {\n  var disableFuture = _ref.disableFuture,\n      maxDate = _ref.maxDate;\n  var utils = useUtils();\n  return useMemo(function () {\n    var now = utils.date();\n    var lastEnabledMonth = utils.startOfMonth(disableFuture && utils.isBefore(now, maxDate) ? now : maxDate);\n    return !utils.isAfter(lastEnabledMonth, month);\n  }, [disableFuture, maxDate, month, utils]);\n}\n\nfunction usePreviousMonthDisabled(month, _ref2) {\n  var disablePast = _ref2.disablePast,\n      minDate = _ref2.minDate;\n  var utils = useUtils();\n  return useMemo(function () {\n    var now = utils.date();\n    var firstEnabledMonth = utils.startOfMonth(disablePast && utils.isAfter(now, minDate) ? now : minDate);\n    return !utils.isBefore(firstEnabledMonth, month);\n  }, [disablePast, minDate, month, utils]);\n}\n\nvar date = oneOfType([object, string, number, instanceOf(Date)]);\nvar datePickerView = oneOf(['year', 'month', 'day']);\nvar defaultMinDate = new Date('1900-01-01');\nvar defaultMaxDate = new Date('2100-01-01');\n\nfunction useViews(_ref) {\n  var views = _ref.views,\n      openTo = _ref.openTo,\n      onChange = _ref.onChange,\n      isMobileKeyboardViewOpen = _ref.isMobileKeyboardViewOpen,\n      toggleMobileKeyboardView = _ref.toggleMobileKeyboardView;\n\n  var _React$useState = useState(openTo && arrayIncludes(views, openTo) ? openTo : views[0]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      openView = _React$useState2[0],\n      _setOpenView = _React$useState2[1];\n\n  var setOpenView = useCallback(function () {\n    if (isMobileKeyboardViewOpen) {\n      toggleMobileKeyboardView();\n    }\n\n    _setOpenView.apply(void 0, arguments);\n  }, [isMobileKeyboardViewOpen, toggleMobileKeyboardView]);\n  var previousView = views[views.indexOf(openView) - 1];\n  var nextView = views[views.indexOf(openView) + 1];\n  var openNext = useCallback(function () {\n    if (nextView) {\n      setOpenView(nextView);\n    }\n  }, [nextView, setOpenView]);\n  var handleChangeAndOpenNext = useCallback(function (date, isFinishedSelectionInCurrentView) {\n    onChange(date, Boolean(nextView) ? false : isFinishedSelectionInCurrentView);\n\n    if (isFinishedSelectionInCurrentView) {\n      openNext();\n    }\n  }, [nextView, onChange, openNext]);\n  return {\n    nextView: nextView,\n    previousView: previousView,\n    openNext: openNext,\n    handleChangeAndOpenNext: handleChangeAndOpenNext,\n    openView: openView,\n    setOpenView: setOpenView\n  };\n}\n\nvar getOrientation = function getOrientation() {\n  if (typeof window === 'undefined') {\n    return 'portrait';\n  }\n\n  if (window.screen && window.screen.orientation && window.screen.orientation.angle) {\n    return Math.abs(window.screen.orientation.angle) === 90 ? 'landscape' : 'portrait';\n  } // Support IOS safari\n\n\n  if (window.orientation) {\n    return Math.abs(Number(window.orientation)) === 90 ? 'landscape' : 'portrait';\n  }\n\n  return 'portrait';\n};\n\nfunction useIsLandscape(views, customOrientation) {\n  var _React$useState = useState(getOrientation()),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      orientation = _React$useState2[0],\n      setOrientation = _React$useState2[1];\n\n  var eventHandler = useCallback(function () {\n    return setOrientation(getOrientation());\n  }, []);\n  useIsomorphicEffect(function () {\n    window.addEventListener('orientationchange', eventHandler);\n    return function () {\n      return window.removeEventListener('orientationchange', eventHandler);\n    };\n  }, [eventHandler]);\n\n  if (arrayIncludes(views, ['hours', 'minutes', 'seconds'])) {\n    // could not display 13:34:44 in landscape mode\n    return false;\n  }\n\n  var orientationToUse = customOrientation || orientation;\n  return orientationToUse === 'landscape';\n}\n\nvar MobileKeyboardInputView = styled('div')({\n  padding: '16px 24px'\n});\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flex: '1 0 33.33%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      cursor: 'pointer',\n      outline: 'none',\n      height: 64,\n      transition: theme.transitions.create('font-size', {\n        duration: '100ms'\n      }),\n      '&:focus': {\n        color: theme.palette.primary.main,\n        fontWeight: theme.typography.fontWeightMedium\n      }\n    },\n    monthSelected: {\n      color: theme.palette.primary.main,\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    monthDisabled: {\n      pointerEvents: 'none',\n      color: theme.palette.text.hint\n    }\n  };\n}, {\n  name: 'MuiPickersMonth'\n});\n\nvar Month = function Month(_ref) {\n  var selected = _ref.selected,\n      onSelect = _ref.onSelect,\n      disabled = _ref.disabled,\n      value = _ref.value,\n      children = _ref.children,\n      other = _objectWithoutProperties(_ref, [\"selected\", \"onSelect\", \"disabled\", \"value\", \"children\"]);\n\n  var classes = useStyles();\n  var handleSelection = useCallback(function () {\n    onSelect(value);\n  }, [onSelect, value]);\n  return createElement(Typography, _extends({\n    \"data-mui-test\": \"month\",\n    role: \"button\",\n    component: \"div\",\n    className: clsx(classes.root, selected && classes.monthSelected, disabled && classes.monthDisabled),\n    tabIndex: disabled ? -1 : 0,\n    onClick: handleSelection,\n    onKeyDown: onSpaceOrEnter(handleSelection),\n    color: selected ? 'primary' : undefined,\n    variant: selected ? 'h5' : 'subtitle1',\n    children: children\n  }, other));\n};\n\nMonth.displayName = 'Month';\nvar useStyles$1 = makeStyles({\n  container: {\n    width: 310,\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignContent: 'stretch'\n  }\n}, {\n  name: 'MuiPickersMonthSelection'\n});\n\nvar MonthSelection = function MonthSelection(_ref) {\n  var disablePast = _ref.disablePast,\n      disableFuture = _ref.disableFuture,\n      minDate = _ref.minDate,\n      maxDate = _ref.maxDate,\n      date = _ref.date,\n      onMonthChange = _ref.onMonthChange,\n      onChange = _ref.onChange;\n  var utils = useUtils();\n  var classes = useStyles$1();\n  var currentMonth = utils.getMonth(date);\n\n  var shouldDisableMonth = function shouldDisableMonth(month) {\n    var now = utils.date();\n    var utilMinDate = utils.date(minDate);\n    var utilMaxDate = utils.date(maxDate);\n    var firstEnabledMonth = utils.startOfMonth(disablePast && utils.isAfter(now, utilMinDate) ? now : utilMinDate);\n    var lastEnabledMonth = utils.startOfMonth(disableFuture && utils.isBefore(now, utilMaxDate) ? now : utilMaxDate);\n    var isBeforeFirstEnabled = utils.isBefore(month, firstEnabledMonth);\n    var isAfterLastEnabled = utils.isAfter(month, lastEnabledMonth);\n    return isBeforeFirstEnabled || isAfterLastEnabled;\n  };\n\n  var onMonthSelect = useCallback(function (month) {\n    var newDate = utils.setMonth(date, month);\n    onChange(newDate, true);\n\n    if (onMonthChange) {\n      onMonthChange(newDate);\n    }\n  }, [date, onChange, onMonthChange, utils]);\n  return createElement(\"div\", {\n    className: classes.container\n  }, utils.getMonthArray(date).map(function (month) {\n    var monthNumber = utils.getMonth(month);\n    var monthText = utils.format(month, 'monthShort');\n    return createElement(Month, {\n      key: monthText,\n      value: monthNumber,\n      selected: monthNumber === currentMonth,\n      onSelect: onMonthSelect,\n      disabled: shouldDisableMonth(month)\n    }, monthText);\n  }));\n};\n\nfunction ownKeys$2(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys$2(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$2(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar createCalendarStateReducer = function createCalendarStateReducer(reduceAnimations, disableSwitchToMonthOnDayFocus, utils) {\n  return function (state, action) {\n    switch (action.type) {\n      case 'changeMonthLoading':\n        {\n          return _objectSpread$2({}, state, {\n            loadingQueue: state.loadingQueue + 1,\n            slideDirection: action.direction,\n            currentMonth: action.newMonth,\n            isMonthSwitchingAnimating: !reduceAnimations\n          });\n        }\n\n      case 'changeMonth':\n        {\n          return _objectSpread$2({}, state, {\n            slideDirection: action.direction,\n            currentMonth: action.newMonth,\n            isMonthSwitchingAnimating: !reduceAnimations\n          });\n        }\n\n      case 'popLoadingQueue':\n        {\n          return _objectSpread$2({}, state, {\n            loadingQueue: state.loadingQueue <= 0 ? 0 : state.loadingQueue - 1\n          });\n        }\n\n      case 'finishMonthSwitchingAnimation':\n        {\n          return _objectSpread$2({}, state, {\n            isMonthSwitchingAnimating: false\n          });\n        }\n\n      case 'changeFocusedDay':\n        {\n          var needMonthSwitch = !disableSwitchToMonthOnDayFocus && !utils.isSameMonth(state.currentMonth, action.focusedDay);\n          return _objectSpread$2({}, state, {\n            focusedDay: action.focusedDay,\n            isMonthSwitchingAnimating: needMonthSwitch && !reduceAnimations,\n            currentMonth: needMonthSwitch ? utils.startOfMonth(action.focusedDay) : state.currentMonth,\n            slideDirection: utils.isAfterDay(action.focusedDay, state.currentMonth) ? 'left' : 'right'\n          });\n        }\n    }\n  };\n};\n\nfunction useCalendarState(_ref) {\n  var date = _ref.date,\n      reduceAnimations = _ref.reduceAnimations,\n      onMonthChange = _ref.onMonthChange,\n      disablePast = _ref.disablePast,\n      disableFuture = _ref.disableFuture,\n      minDate = _ref.minDate,\n      maxDate = _ref.maxDate,\n      shouldDisableDate = _ref.shouldDisableDate,\n      _ref$disableSwitchToM = _ref.disableSwitchToMonthOnDayFocus,\n      disableSwitchToMonthOnDayFocus = _ref$disableSwitchToM === void 0 ? false : _ref$disableSwitchToM;\n  var utils = useUtils();\n  var reducerFn = useRef(createCalendarStateReducer(Boolean(reduceAnimations), disableSwitchToMonthOnDayFocus, utils));\n\n  var _React$useReducer = useReducer(reducerFn.current, {\n    isMonthSwitchingAnimating: false,\n    loadingQueue: 0,\n    focusedDay: date,\n    currentMonth: utils.startOfMonth(date),\n    slideDirection: 'left'\n  }),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      _React$useReducer2$ = _React$useReducer2[0],\n      loadingQueue = _React$useReducer2$.loadingQueue,\n      calendarState = _objectWithoutProperties(_React$useReducer2$, [\"loadingQueue\"]),\n      dispatch = _React$useReducer2[1];\n\n  var handleChangeMonth = useCallback(function (payload) {\n    var returnedPromise = onMonthChange && onMonthChange(payload.newMonth);\n\n    if (returnedPromise) {\n      dispatch(_objectSpread$2({\n        type: 'changeMonthLoading'\n      }, payload));\n      returnedPromise.then(function () {\n        return dispatch({\n          type: 'popLoadingQueue'\n        });\n      });\n    } else {\n      dispatch(_objectSpread$2({\n        type: 'changeMonth'\n      }, payload));\n    }\n  }, [onMonthChange]);\n  var changeMonth = useCallback(function (date) {\n    if (utils.isSameMonth(date, calendarState.currentMonth)) {\n      return;\n    }\n\n    handleChangeMonth({\n      newMonth: utils.startOfMonth(date),\n      direction: utils.isAfterDay(date, calendarState.currentMonth) ? 'left' : 'right'\n    });\n  }, [calendarState.currentMonth, handleChangeMonth, utils]);\n  var isDateDisabled = useCallback(function (day) {\n    return validateDate(utils, day, {\n      disablePast: disablePast,\n      disableFuture: disableFuture,\n      minDate: minDate,\n      maxDate: maxDate,\n      shouldDisableDate: shouldDisableDate\n    }) !== null;\n  }, [disableFuture, disablePast, maxDate, minDate, shouldDisableDate, utils]);\n  var onMonthSwitchingAnimationEnd = useCallback(function () {\n    dispatch({\n      type: 'finishMonthSwitchingAnimation'\n    });\n  }, []);\n  var changeFocusedDay = useCallback(function (newFocusedDate) {\n    if (!isDateDisabled(newFocusedDate)) {\n      dispatch({\n        type: 'changeFocusedDay',\n        focusedDay: newFocusedDate\n      });\n    }\n  }, [isDateDisabled]);\n  return {\n    loadingQueue: loadingQueue,\n    calendarState: calendarState,\n    changeMonth: changeMonth,\n    changeFocusedDay: changeFocusedDay,\n    isDateDisabled: isDateDisabled,\n    onMonthSwitchingAnimationEnd: onMonthSwitchingAnimationEnd,\n    handleChangeMonth: handleChangeMonth\n  };\n}\n\nvar animationDuration = 500;\nvar useStyles$2 = makeStyles(function (theme) {\n  return {\n    transitionContainer: {\n      display: 'block',\n      position: 'relative'\n    },\n    fadeEnter: {\n      willChange: 'transform',\n      opacity: 0\n    },\n    fadeEnterActive: {\n      opacity: 1,\n      transition: theme.transitions.create('opacity', {\n        duration: animationDuration\n      })\n    },\n    fadeExit: {\n      opacity: 1\n    },\n    fadeExitActive: {\n      opacity: 0,\n      transition: theme.transitions.create('opacity', {\n        duration: animationDuration / 2\n      })\n    }\n  };\n}, {\n  name: 'MuiPickersFadeTransition'\n});\n\nvar FadeTransitionGroup = function FadeTransitionGroup(_ref) {\n  var children = _ref.children,\n      transKey = _ref.transKey,\n      reduceAnimations = _ref.reduceAnimations,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? null : _ref$className;\n  var classes = useStyles$2();\n\n  if (reduceAnimations) {\n    return children;\n  }\n\n  var transitionClasses = {\n    exit: classes.fadeExit,\n    enterActive: classes.fadeEnterActive,\n    enter: classes.fadeEnter,\n    exitActive: classes.fadeExitActive\n  };\n  return createElement(TransitionGroup, {\n    className: clsx(classes.transitionContainer, className),\n    childFactory: function childFactory(element) {\n      return cloneElement(element, {\n        classNames: transitionClasses\n      });\n    }\n  }, createElement(CSSTransition, {\n    mountOnEnter: true,\n    unmountOnExit: true,\n    key: transKey,\n    timeout: {\n      appear: animationDuration,\n      enter: animationDuration / 2,\n      exit: 0\n    },\n    classNames: transitionClasses,\n    children: children\n  }));\n};\n/**\n * @ignore - internal component.\n */\n\n\nvar ArrowDropDownIcon = createSvgIcon(createElement(\"path\", {\n  d: \"M7 10l5 5 5-5z\"\n}), 'ArrowDropDown');\nvar useStyles$3 = makeStyles(function (theme) {\n  return {\n    switchHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      marginTop: 16,\n      marginBottom: 8,\n      paddingLeft: 24,\n      paddingRight: 12,\n      // prevent jumping in safari\n      maxHeight: 30,\n      minHeight: 30\n    },\n    yearSelectionSwitcher: {\n      marginRight: 'auto'\n    },\n    previousMonthButton: {\n      marginRight: 24\n    },\n    switchViewDropdown: {\n      willChange: 'transform',\n      transition: theme.transitions.create('transform'),\n      transform: 'rotate(0deg)'\n    },\n    switchViewDropdownDown: {\n      transform: 'rotate(180deg)'\n    },\n    monthTitleContainer: {\n      display: 'flex',\n      maxHeight: 30,\n      overflow: 'hidden',\n      cursor: 'pointer',\n      marginRight: 'auto'\n    },\n    monthText: {\n      marginRight: 4\n    }\n  };\n}, {\n  name: 'MuiPickersCalendarHeader'\n});\n\nfunction getSwitchingViewAriaText(view) {\n  return view === 'year' ? 'year view is open, switch to calendar view' : 'calendar view is open, switch to year view';\n}\n\nvar CalendarHeader = function CalendarHeader(_ref) {\n  var currentView = _ref.view,\n      views = _ref.views,\n      month = _ref.currentMonth,\n      changeView = _ref.changeView,\n      minDate = _ref.minDate,\n      maxDate = _ref.maxDate,\n      disablePast = _ref.disablePast,\n      disableFuture = _ref.disableFuture,\n      onMonthChange = _ref.onMonthChange,\n      reduceAnimations = _ref.reduceAnimations,\n      leftArrowButtonProps = _ref.leftArrowButtonProps,\n      rightArrowButtonProps = _ref.rightArrowButtonProps,\n      leftArrowIcon = _ref.leftArrowIcon,\n      rightArrowIcon = _ref.rightArrowIcon,\n      _ref$leftArrowButtonT = _ref.leftArrowButtonText,\n      leftArrowButtonText = _ref$leftArrowButtonT === void 0 ? 'previous month' : _ref$leftArrowButtonT,\n      _ref$rightArrowButton = _ref.rightArrowButtonText,\n      rightArrowButtonText = _ref$rightArrowButton === void 0 ? 'next month' : _ref$rightArrowButton,\n      _ref$getViewSwitching = _ref.getViewSwitchingButtonText,\n      getViewSwitchingButtonText = _ref$getViewSwitching === void 0 ? getSwitchingViewAriaText : _ref$getViewSwitching;\n  var utils = useUtils();\n  var classes = useStyles$3();\n\n  var selectNextMonth = function selectNextMonth() {\n    return onMonthChange(utils.getNextMonth(month), 'left');\n  };\n\n  var selectPreviousMonth = function selectPreviousMonth() {\n    return onMonthChange(utils.getPreviousMonth(month), 'right');\n  };\n\n  var isNextMonthDisabled = useNextMonthDisabled(month, {\n    disableFuture: disableFuture,\n    maxDate: maxDate\n  });\n  var isPreviousMonthDisabled = usePreviousMonthDisabled(month, {\n    disablePast: disablePast,\n    minDate: minDate\n  });\n\n  var toggleView = function toggleView() {\n    if (views.length === 1) {\n      return;\n    }\n\n    if (views.length === 2) {\n      changeView(views.find(function (view) {\n        return view !== currentView;\n      }) || views[0]);\n    } else {\n      // switching only between first 2\n      var nextIndexToOpen = views.indexOf(currentView) !== 0 ? 0 : 1;\n      changeView(views[nextIndexToOpen]);\n    }\n  };\n\n  return createElement(Fragment, null, createElement(\"div\", {\n    className: classes.switchHeader\n  }, createElement(\"div\", {\n    className: classes.monthTitleContainer,\n    onClick: toggleView\n  }, createElement(FadeTransitionGroup, {\n    reduceAnimations: reduceAnimations,\n    transKey: utils.format(month, 'month')\n  }, createElement(Typography, {\n    \"aria-live\": \"polite\",\n    \"data-mui-test\": \"calendar-month-text\",\n    align: \"center\",\n    variant: \"subtitle1\",\n    className: classes.monthText,\n    children: utils.format(month, 'month')\n  })), createElement(FadeTransitionGroup, {\n    reduceAnimations: reduceAnimations,\n    transKey: utils.format(month, 'year')\n  }, createElement(Typography, {\n    \"aria-live\": \"polite\",\n    \"data-mui-test\": \"calendar-year-text\",\n    align: \"center\",\n    variant: \"subtitle1\",\n    children: utils.format(month, 'year')\n  })), views.length > 1 && createElement(IconButton, {\n    size: \"small\",\n    \"data-mui-test\": \"calendar-view-switcher\",\n    onClick: toggleView,\n    className: classes.yearSelectionSwitcher,\n    \"aria-label\": getViewSwitchingButtonText(currentView)\n  }, createElement(ArrowDropDownIcon, {\n    className: clsx(classes.switchViewDropdown, currentView === 'year' && classes.switchViewDropdownDown)\n  }))), createElement(Fade, {\n    \"in\": currentView === 'date'\n  }, createElement(ArrowSwitcher, {\n    leftArrowButtonProps: leftArrowButtonProps,\n    rightArrowButtonProps: rightArrowButtonProps,\n    leftArrowButtonText: leftArrowButtonText,\n    rightArrowButtonText: rightArrowButtonText,\n    leftArrowIcon: leftArrowIcon,\n    rightArrowIcon: rightArrowIcon,\n    onLeftClick: selectPreviousMonth,\n    onRightClick: selectNextMonth,\n    isLeftDisabled: isPreviousMonthDisabled,\n    isRightDisabled: isNextMonthDisabled\n  }))));\n};\n\nCalendarHeader.displayName = 'CalendarHeader';\nprocess.env.NODE_ENV !== \"production\" ? CalendarHeader.propTypes = {\n  leftArrowIcon: node,\n  rightArrowIcon: node,\n  leftArrowButtonText: string,\n  rightArrowButtonText: string\n} : void 0;\nvar useStyles$4 = makeStyles(function (theme) {\n  return {\n    yearButtonContainer: {\n      color: 'unset',\n      backgroundColor: 'transparent',\n      border: 'none',\n      outline: 0,\n      flexBasis: '33.3%',\n      display: 'flex',\n      justifyContent: 'center',\n      padding: '8px 0'\n    },\n    yearButtonContainerDesktop: {\n      flexBasis: '25%'\n    },\n    yearButton: {\n      height: 36,\n      width: 72,\n      borderRadius: 16,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      cursor: 'pointer',\n      outline: 'none',\n      '&:focus, &:hover': {\n        backgroundColor: fade(theme.palette.action.active, theme.palette.action.hoverOpacity)\n      }\n    },\n    yearSelected: {\n      color: theme.palette.getContrastText(theme.palette.primary.main),\n      backgroundColor: theme.palette.primary.main,\n      '&:focus, &:hover': {\n        backgroundColor: theme.palette.primary.dark\n      }\n    },\n    yearDisabled: {\n      pointerEvents: 'none',\n      color: theme.palette.text.hint\n    }\n  };\n}, {\n  name: 'MuiPickersYear'\n});\n\nvar Year = function Year(_ref) {\n  var onSelect = _ref.onSelect,\n      forwardedRef = _ref.forwardedRef,\n      value = _ref.value,\n      selected = _ref.selected,\n      disabled = _ref.disabled,\n      children = _ref.children,\n      focused = _ref.focused,\n      allowKeyboardControl = _ref.allowKeyboardControl,\n      other = _objectWithoutProperties(_ref, [\"onSelect\", \"forwardedRef\", \"value\", \"selected\", \"disabled\", \"children\", \"focused\", \"allowKeyboardControl\"]);\n\n  var classes = useStyles$4();\n  var ref = useRef(null);\n  var wrapperVariant = useContext(WrapperVariantContext);\n  useEffect(function () {\n    if (focused && ref.current && !disabled && allowKeyboardControl) {\n      ref.current.focus();\n    }\n  }, [allowKeyboardControl, disabled, focused]);\n  return createElement(\"button\", {\n    ref: forwardedRef,\n    disabled: disabled,\n    \"data-mui-test\": \"year\",\n    onClick: function onClick() {\n      return onSelect(value);\n    },\n    className: clsx(classes.yearButtonContainer, wrapperVariant === 'desktop' && classes.yearButtonContainerDesktop)\n  }, createElement(Typography, _extends({\n    ref: ref,\n    variant: \"subtitle1\",\n    \"data-mui-test\": \"year-\".concat(children),\n    tabIndex: selected ? 0 : -1,\n    color: selected ? 'primary' : undefined,\n    onKeyDown: onSpaceOrEnter(function () {\n      return onSelect(value);\n    }),\n    className: clsx(classes.yearButton, selected && classes.yearSelected, disabled && classes.yearDisabled)\n  }, other), children));\n};\n\nvar Year$1 = forwardRef(function (props, ref) {\n  return createElement(Year, _extends({}, props, {\n    forwardedRef: ref\n  }));\n});\nvar useStyles$5 = makeStyles({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    overflowY: 'auto',\n    height: '100%'\n  }\n}, {\n  name: 'MuiPickersYearSelection'\n});\n\nvar YearSelection = function YearSelection(_ref) {\n  var _useGlobalKeyDown;\n\n  var date = _ref.date,\n      onChange = _ref.onChange,\n      onYearChange = _ref.onYearChange,\n      minDate = _ref.minDate,\n      maxDate = _ref.maxDate,\n      disablePast = _ref.disablePast,\n      disableFuture = _ref.disableFuture,\n      isDateDisabled = _ref.isDateDisabled,\n      shouldDisableYear = _ref.shouldDisableYear,\n      allowKeyboardControl = _ref.allowKeyboardControl;\n  var now = useNow();\n  var theme = useTheme();\n  var utils = useUtils();\n  var classes = useStyles$5();\n  var currentYear = utils.getYear(date);\n  var wrapperVariant = useContext(WrapperVariantContext);\n  var selectedYearRef = useRef(null);\n\n  var _React$useState = useState(currentYear),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      focusedYear = _React$useState2[0],\n      setFocusedYear = _React$useState2[1];\n\n  useEffect(function () {\n    if (allowKeyboardControl && selectedYearRef.current && selectedYearRef.current.scrollIntoView) {\n      try {\n        selectedYearRef.current.scrollIntoView({\n          block: wrapperVariant === 'static' ? 'nearest' : 'center'\n        });\n      } catch (e) {\n        // call without arguments in case when scrollIntoView works improperly (e.g. Firefox 52-57)\n        selectedYearRef.current.scrollIntoView();\n      }\n    }\n  }, []); // eslint-disable-line\n\n  var handleYearSelection = useCallback(function (year) {\n    var isFinish = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var newDate = utils.setYear(date, year);\n\n    if (isDateDisabled(newDate)) {\n      return;\n    }\n\n    if (onYearChange) {\n      onYearChange(newDate);\n    }\n\n    onChange(newDate, isFinish);\n  }, [date, isDateDisabled, onChange, onYearChange, utils]);\n  var focusYear = useCallback(function (year) {\n    if (!isDateDisabled(utils.setYear(date, year))) {\n      setFocusedYear(year);\n    }\n  }, [date, isDateDisabled, utils]);\n  var yearsInRow = wrapperVariant === 'desktop' ? 4 : 3;\n  var nowFocusedYear = focusedYear || currentYear;\n  useGlobalKeyDown(Boolean(allowKeyboardControl), (_useGlobalKeyDown = {}, _defineProperty(_useGlobalKeyDown, keycode.ArrowUp, function () {\n    return focusYear(nowFocusedYear - yearsInRow);\n  }), _defineProperty(_useGlobalKeyDown, keycode.ArrowDown, function () {\n    return focusYear(nowFocusedYear + yearsInRow);\n  }), _defineProperty(_useGlobalKeyDown, keycode.ArrowLeft, function () {\n    return focusYear(nowFocusedYear + (theme.direction === 'ltr' ? -1 : 1));\n  }), _defineProperty(_useGlobalKeyDown, keycode.ArrowRight, function () {\n    return focusYear(nowFocusedYear + (theme.direction === 'ltr' ? 1 : -1));\n  }), _useGlobalKeyDown));\n  return createElement(\"div\", null, createElement(\"div\", {\n    className: classes.container\n  }, utils.getYearRange(minDate, maxDate).map(function (year) {\n    var yearNumber = utils.getYear(year);\n    var selected = yearNumber === currentYear;\n    return createElement(Year$1, {\n      key: utils.format(year, 'year'),\n      selected: selected,\n      value: yearNumber,\n      onSelect: handleYearSelection,\n      allowKeyboardControl: allowKeyboardControl,\n      focused: yearNumber === focusedYear,\n      ref: selected ? selectedYearRef : undefined,\n      disabled: Boolean(disablePast && utils.isBeforeYear(year, now) || disableFuture && utils.isAfterYear(year, now) || shouldDisableYear && shouldDisableYear(year))\n    }, utils.format(year, 'year'));\n  })));\n};\n\nvar useStyles$6 = makeStyles({\n  viewTransitionContainer: {\n    overflowY: 'auto'\n  },\n  gridFullHeight: {\n    flex: 1,\n    minHeight: VIEW_HEIGHT - 60,\n    height: '100%'\n  }\n}, {\n  name: 'MuiPickersCalendarView'\n});\nvar defaultReduceAnimations = typeof navigator !== 'undefined' && /(android)/i.test(navigator.userAgent);\n\nvar CalendarView = function CalendarView(_ref) {\n  var date = _ref.date,\n      view = _ref.view,\n      onChange = _ref.onChange,\n      changeView = _ref.changeView,\n      onMonthChange = _ref.onMonthChange,\n      __minDate = _ref.minDate,\n      __maxDate = _ref.maxDate,\n      _ref$reduceAnimations = _ref.reduceAnimations,\n      reduceAnimations = _ref$reduceAnimations === void 0 ? defaultReduceAnimations : _ref$reduceAnimations,\n      _ref$loadingIndicator = _ref.loadingIndicator,\n      loadingIndicator = _ref$loadingIndicator === void 0 ? createElement(CircularProgress, {\n    \"data-mui-test\": \"loading-progress\"\n  }) : _ref$loadingIndicator,\n      shouldDisableDate = _ref.shouldDisableDate,\n      __allowKeyboardControlProp = _ref.allowKeyboardControl,\n      disablePast = _ref.disablePast,\n      disableFuture = _ref.disableFuture,\n      shouldDisableYear = _ref.shouldDisableYear,\n      other = _objectWithoutProperties(_ref, [\"date\", \"view\", \"onChange\", \"changeView\", \"onMonthChange\", \"minDate\", \"maxDate\", \"reduceAnimations\", \"loadingIndicator\", \"shouldDisableDate\", \"allowKeyboardControl\", \"disablePast\", \"disableFuture\", \"shouldDisableYear\"]);\n\n  var utils = useUtils();\n  var classes = useStyles$6();\n  var isStatic = useContext(IsStaticVariantContext);\n  var allowKeyboardControl = __allowKeyboardControlProp !== null && __allowKeyboardControlProp !== void 0 ? __allowKeyboardControlProp : !isStatic;\n\n  var minDate = __minDate || utils.date(defaultMinDate);\n\n  var maxDate = __maxDate || utils.date(defaultMaxDate);\n\n  var _useCalendarState = useCalendarState({\n    date: date,\n    reduceAnimations: reduceAnimations,\n    onMonthChange: onMonthChange,\n    minDate: minDate,\n    maxDate: maxDate,\n    shouldDisableDate: shouldDisableDate,\n    disablePast: disablePast,\n    disableFuture: disableFuture\n  }),\n      loadingQueue = _useCalendarState.loadingQueue,\n      calendarState = _useCalendarState.calendarState,\n      changeFocusedDay = _useCalendarState.changeFocusedDay,\n      changeMonth = _useCalendarState.changeMonth,\n      isDateDisabled = _useCalendarState.isDateDisabled,\n      handleChangeMonth = _useCalendarState.handleChangeMonth,\n      onMonthSwitchingAnimationEnd = _useCalendarState.onMonthSwitchingAnimationEnd;\n\n  useEffect(function () {\n    if (date && isDateDisabled(date)) {\n      var closestEnabledDate = findClosestEnabledDate({\n        utils: utils,\n        date: date,\n        minDate: utils.date(minDate),\n        maxDate: utils.date(maxDate),\n        disablePast: Boolean(disablePast),\n        disableFuture: Boolean(disableFuture),\n        shouldDisableDate: isDateDisabled\n      });\n      onChange(closestEnabledDate, false);\n    } // This call is too expensive to run it on each prop change.\n    // So just ensure that we are not rendering disabled as selected on mount.\n\n  }, []); // eslint-disable-line\n\n  useEffect(function () {\n    changeMonth(date);\n  }, [date]); // eslint-disable-line\n\n  useEffect(function () {\n    if (view === 'date') {\n      changeFocusedDay(date);\n    }\n  }, [view]); // eslint-disable-line\n\n  return createElement(Fragment, null, createElement(CalendarHeader, _extends({}, other, {\n    view: view,\n    currentMonth: calendarState.currentMonth,\n    changeView: changeView,\n    onMonthChange: function onMonthChange(newMonth, direction) {\n      return handleChangeMonth({\n        newMonth: newMonth,\n        direction: direction\n      });\n    },\n    minDate: minDate,\n    maxDate: maxDate,\n    disablePast: disablePast,\n    disableFuture: disableFuture,\n    reduceAnimations: reduceAnimations\n  })), createElement(FadeTransitionGroup, {\n    reduceAnimations: reduceAnimations,\n    className: classes.viewTransitionContainer,\n    transKey: view\n  }, createElement(\"div\", null, view === 'year' && createElement(YearSelection, _extends({}, other, {\n    date: date,\n    onChange: onChange,\n    minDate: minDate,\n    maxDate: maxDate,\n    disableFuture: disableFuture,\n    disablePast: disablePast,\n    isDateDisabled: isDateDisabled,\n    allowKeyboardControl: allowKeyboardControl,\n    shouldDisableYear: shouldDisableYear\n  })), view === 'month' && createElement(MonthSelection, _extends({}, other, {\n    date: date,\n    onChange: onChange,\n    minDate: minDate,\n    maxDate: maxDate,\n    onMonthChange: onMonthChange\n  })), view === 'date' && (loadingQueue > 0 ? createElement(Grid, {\n    className: classes.gridFullHeight,\n    container: true,\n    alignItems: \"center\",\n    justify: \"center\"\n  }, loadingIndicator) : createElement(Calendar, _extends({}, other, calendarState, {\n    onMonthSwitchingAnimationEnd: onMonthSwitchingAnimationEnd,\n    changeFocusedDay: changeFocusedDay,\n    reduceAnimations: reduceAnimations,\n    date: date,\n    onChange: onChange,\n    isDateDisabled: isDateDisabled,\n    allowKeyboardControl: allowKeyboardControl\n  }))))));\n};\n\nvar useStyles$7 = makeStyles({\n  container: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  containerLandscape: {\n    flexDirection: 'row'\n  },\n  pickerView: {\n    overflowX: 'hidden',\n    width: DIALOG_WIDTH,\n    maxHeight: VIEW_HEIGHT,\n    display: 'flex',\n    flexDirection: 'column',\n    margin: '0 auto'\n  },\n  pickerViewLandscape: {\n    padding: '0 8px'\n  }\n}, {\n  name: 'MuiPickersBasePicker'\n});\nvar MobileKeyboardTextFieldProps = {\n  fullWidth: true\n};\n\nvar isTimePickerByViews = function isTimePickerByViews(views) {\n  return !views.some(function (view) {\n    return view === 'year' || view === 'month' || view === 'date';\n  });\n};\n\nfunction Picker(_ref) {\n  var date = _ref.date,\n      _ref$openTo = _ref.openTo,\n      openTo = _ref$openTo === void 0 ? 'date' : _ref$openTo,\n      _ref$views = _ref.views,\n      views = _ref$views === void 0 ? ['year', 'month', 'date', 'hours', 'minutes', 'seconds'] : _ref$views,\n      toolbarTitle = _ref.toolbarTitle,\n      showToolbar = _ref.showToolbar,\n      onDateChange = _ref.onDateChange,\n      _ref$ToolbarComponent = _ref.ToolbarComponent,\n      ToolbarComponent = _ref$ToolbarComponent === void 0 ? function () {\n    return null;\n  } : _ref$ToolbarComponent,\n      orientation = _ref.orientation,\n      DateInputProps = _ref.DateInputProps,\n      isMobileKeyboardViewOpen = _ref.isMobileKeyboardViewOpen,\n      toggleMobileKeyboardView = _ref.toggleMobileKeyboardView,\n      toolbarFormat = _ref.toolbarFormat,\n      className = _ref.className,\n      other = _objectWithoutProperties(_ref, [\"date\", \"openTo\", \"views\", \"toolbarTitle\", \"showToolbar\", \"onDateChange\", \"ToolbarComponent\", \"orientation\", \"DateInputProps\", \"isMobileKeyboardViewOpen\", \"toggleMobileKeyboardView\", \"toolbarFormat\", \"className\"]);\n\n  var classes = useStyles$7();\n  var isLandscape = useIsLandscape(views, orientation);\n  var wrapperVariant = useContext(WrapperVariantContext);\n  var handleDateChange = useCallback(function (date, isFinish) {\n    onDateChange(date, wrapperVariant, isFinish);\n  }, [onDateChange, wrapperVariant]);\n  var toShowToolbar = typeof showToolbar === 'undefined' ? wrapperVariant !== 'desktop' : showToolbar;\n\n  var _useViews = useViews({\n    views: views,\n    openTo: openTo,\n    onChange: handleDateChange,\n    isMobileKeyboardViewOpen: isMobileKeyboardViewOpen,\n    toggleMobileKeyboardView: toggleMobileKeyboardView\n  }),\n      openView = _useViews.openView,\n      nextView = _useViews.nextView,\n      previousView = _useViews.previousView,\n      setOpenView = _useViews.setOpenView,\n      handleChangeAndOpenNext = _useViews.handleChangeAndOpenNext;\n\n  return createElement(\"div\", {\n    className: clsx(classes.container, className, isLandscape && classes.containerLandscape)\n  }, toShowToolbar && createElement(ToolbarComponent, _extends({}, other, {\n    views: views,\n    isLandscape: isLandscape,\n    date: date,\n    onChange: handleDateChange,\n    setOpenView: setOpenView,\n    openView: openView,\n    toolbarTitle: toolbarTitle,\n    toolbarFormat: toolbarFormat,\n    isMobileKeyboardViewOpen: isMobileKeyboardViewOpen,\n    toggleMobileKeyboardView: toggleMobileKeyboardView\n  })), createElement(\"div\", {\n    className: clsx(classes.pickerView, isLandscape && classes.pickerViewLandscape)\n  }, isMobileKeyboardViewOpen ? createElement(MobileKeyboardInputView, null, createElement(KeyboardDateInput, _extends({}, DateInputProps, {\n    ignoreInvalidInputs: true,\n    disableOpenPicker: true,\n    TextFieldProps: MobileKeyboardTextFieldProps\n  }))) : createElement(Fragment, null, (openView === 'year' || openView === 'month' || openView === 'date') && createElement(CalendarView, _extends({\n    date: date,\n    changeView: setOpenView // @ts-ignore\n    ,\n    views: views,\n    onChange: handleChangeAndOpenNext,\n    view: openView\n  }, other)), (openView === 'hours' || openView === 'minutes' || openView === 'seconds') && createElement(ClockView, _extends({}, other, {\n    date: date,\n    type: openView,\n    onDateChange: handleDateChange,\n    onChange: handleChangeAndOpenNext,\n    openNextView: function openNextView() {\n      return setOpenView(nextView);\n    },\n    openPreviousView: function openPreviousView() {\n      return setOpenView(previousView);\n    },\n    nextViewAvailable: !Boolean(nextView),\n    previousViewAvailable: !Boolean(previousView),\n    showViewSwitcher: isTimePickerByViews(views) && wrapperVariant === 'desktop'\n  })))));\n}\n\nPicker.displayName = 'Picker';\nexport { CalendarHeader as C, KeyboardDateInput as K, MobileKeyboardInputView as M, Picker as P, isYearAndMonthViews as a, useParsedDate as b, defaultMinDate as c, defaultMaxDate as d, getDisplayDate as e, getTextFieldAriaText as f, getFormatByViews as g, KeyboardDateInput as h, isYearOnlyView as i, pick12hOr24hFormat as j, isWithinRange as k, isStartOfRange as l, isEndOfRange as m, useMaskedInput as n, useNextMonthDisabled as o, parsePickerInputValue as p, usePreviousMonthDisabled as q, useCalendarState as r, isRangeValid as s, defaultReduceAnimations as t, useStyles$7 as u, validateDate as v, validateDateRange as w, parseRangeInputValue as x, useStyles$6 as y, CalendarView as z };","map":{"version":3,"sources":["../src/_helpers/date-utils.ts","../src/_helpers/text-field-helper.ts","../src/_shared/hooks/useMaskedInput.tsx","../src/_shared/KeyboardDateInput.tsx","../src/_shared/hooks/date-helpers-hooks.tsx","../src/constants/prop-types.ts","../src/_shared/hooks/useViews.tsx","../src/_shared/hooks/useIsLandscape.tsx","../src/views/MobileKeyboardInputView.tsx","../src/views/Calendar/Month.tsx","../src/views/Calendar/MonthSelection.tsx","../src/views/Calendar/useCalendarState.tsx","../src/views/Calendar/FadeTransitionGroup.tsx","../src/_shared/icons/ArrowDropDownIcon.tsx","../src/views/Calendar/CalendarHeader.tsx","../src/views/Calendar/Year.tsx","../src/views/Calendar/YearSelection.tsx","../src/views/Calendar/CalendarView.tsx","../src/Picker/Picker.tsx"],"names":["findClosestEnabledDate","date","utils","minDate","maxDate","disableFuture","disablePast","shouldDisableDate","today","forward","backward","isYearOnlyView","views","isYearAndMonthViews","arrayIncludes","getFormatByViews","value","defaultHighlight","parsedValue","isRangeValid","Boolean","range","isWithinRange","isStartOfRange","isEndOfRange","validateDate","now","validateDateRange","start","end","dateValidations","rawValue","getDisplayDate","isEmpty","formats","ampm","MASK_USER_INPUT_SYMBOL","staticDateWith2DigitTokens","staticDateWith1DigitTokens","formattedDateWith1Digit","inferredFormatPatternWith1Digits","inferredFormatPatternWith2Digits","isMaskValid","process","console","maskedDateFormatter","acceptRegexp","i","mask","maskChar","nextMaskChar","acceptedChar","formattedChar","disableMaskedInput","validationError","onChange","acceptRegex","inputFormat","disabled","rifmFormatter","ignoreInvalidInputs","readOnly","TextFieldProps","label","useUtils","isFocusedRef","React","getInputValue","formatHelperText","innerInputValue","setInnerInputValue","shouldUseMaskedInput","checkMaskIsValidForCurrentFormat","formatter","handleChange","finalString","text","rifmProps","useRifm","format","inputStateArgs","e","placeholder","error","helperText","inputProps","type","onFocus","createDelegatedEventHandler","onBlur","KeyboardDateInput","renderInput","openPicker","onOpen","InputProps","InputAdornmentProps","openPickerIcon","React.createElement","OpenPickerButtonProps","disableOpenPicker","hideOpenPickerButton","getOpenDialogAriaText","getTextFieldAriaText","containerRef","forwardedRef","other","textFieldProps","useMaskedInput","adornmentPosition","ref","inputRef","lastEnabledMonth","firstEnabledMonth","PropTypes","datePickerView","defaultMinDate","defaultMaxDate","openTo","isMobileKeyboardViewOpen","toggleMobileKeyboardView","openView","_setOpenView","setOpenView","previousView","nextView","openNext","handleChangeAndOpenNext","getOrientation","window","Math","Number","orientation","setOrientation","eventHandler","useIsomorphicEffect","orientationToUse","customOrientation","MobileKeyboardInputView","padding","useStyles","makeStyles","root","flex","display","alignItems","justifyContent","cursor","outline","height","transition","duration","color","theme","fontWeight","fontWeightMedium","monthSelected","monthDisabled","pointerEvents","hint","name","Month","selected","onSelect","children","classes","handleSelection","clsx","onSpaceOrEnter","container","width","flexWrap","alignContent","MonthSelection","onMonthChange","currentMonth","shouldDisableMonth","utilMinDate","utilMaxDate","isBeforeFirstEnabled","isAfterLastEnabled","onMonthSelect","newDate","monthNumber","monthText","createCalendarStateReducer","action","loadingQueue","state","slideDirection","isMonthSwitchingAnimating","reduceAnimations","needMonthSwitch","focusedDay","disableSwitchToMonthOnDayFocus","reducerFn","calendarState","dispatch","handleChangeMonth","returnedPromise","payload","changeMonth","newMonth","direction","isDateDisabled","onMonthSwitchingAnimationEnd","changeFocusedDay","newFocusedDate","animationDuration","transitionContainer","position","fadeEnter","willChange","opacity","fadeEnterActive","fadeExit","fadeExitActive","FadeTransitionGroup","transKey","className","transitionClasses","exit","enterActive","enter","exitActive","classNames","appear","ArrowDropDownIcon","createSvgIcon","switchHeader","marginTop","marginBottom","paddingLeft","paddingRight","maxHeight","minHeight","yearSelectionSwitcher","marginRight","previousMonthButton","switchViewDropdown","transform","switchViewDropdownDown","monthTitleContainer","overflow","view","CalendarHeader","currentView","month","changeView","leftArrowButtonProps","rightArrowButtonProps","leftArrowIcon","rightArrowIcon","leftArrowButtonText","rightArrowButtonText","getViewSwitchingButtonText","getSwitchingViewAriaText","selectNextMonth","selectPreviousMonth","isNextMonthDisabled","useNextMonthDisabled","isPreviousMonthDisabled","usePreviousMonthDisabled","toggleView","nextIndexToOpen","yearButtonContainer","backgroundColor","border","flexBasis","yearButtonContainerDesktop","yearButton","borderRadius","fade","yearSelected","dark","yearDisabled","Year","focused","allowKeyboardControl","wrapperVariant","flexDirection","overflowY","YearSelection","onYearChange","shouldDisableYear","useNow","useTheme","currentYear","selectedYearRef","focusedYear","setFocusedYear","block","handleYearSelection","isFinish","focusYear","yearsInRow","nowFocusedYear","useGlobalKeyDown","keys","yearNumber","viewTransitionContainer","gridFullHeight","VIEW_HEIGHT","defaultReduceAnimations","navigator","CalendarView","__minDate","__maxDate","loadingIndicator","__allowKeyboardControlProp","isStatic","useCalendarState","closestEnabledDate","containerLandscape","pickerView","overflowX","margin","pickerViewLandscape","MobileKeyboardTextFieldProps","fullWidth","isTimePickerByViews","toolbarTitle","showToolbar","onDateChange","ToolbarComponent","DateInputProps","toolbarFormat","isLandscape","useIsLandscape","handleDateChange","toShowToolbar","useViews","Picker"],"mappings":"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","sourcesContent":["import { arrayIncludes } from './utils';\nimport { IUtils } from '@date-io/core/IUtils';\nimport { ParsableDate } from '../constants/prop-types';\nimport { MaterialUiPickersDate } from '../typings/date';\nimport { BasePickerProps } from '../typings/BasePicker';\nimport { DatePickerView } from '../DatePicker/DatePicker';\nimport { MuiPickersAdapter } from '../_shared/hooks/useUtils';\nimport { DateRange, RangeInput } from '../DateRangePicker/RangeTypes';\n\ninterface FindClosestDateParams {\n  date: MaterialUiPickersDate;\n  utils: IUtils<MaterialUiPickersDate>;\n  minDate: MaterialUiPickersDate;\n  maxDate: MaterialUiPickersDate;\n  disableFuture: boolean;\n  disablePast: boolean;\n  shouldDisableDate: (date: MaterialUiPickersDate) => boolean;\n}\n\nexport const findClosestEnabledDate = ({\n  date,\n  utils,\n  minDate,\n  maxDate,\n  disableFuture,\n  disablePast,\n  shouldDisableDate,\n}: FindClosestDateParams) => {\n  const today = utils.startOfDay(utils.date());\n\n  if (disablePast && utils.isBefore(minDate!, today)) {\n    minDate = today;\n  }\n\n  if (disableFuture && utils.isAfter(maxDate, today)) {\n    maxDate = today;\n  }\n\n  let forward = date;\n  let backward = date;\n  if (utils.isBefore(date, minDate)) {\n    forward = utils.date(minDate);\n    backward = null;\n  }\n\n  if (utils.isAfter(date, maxDate)) {\n    if (backward) {\n      backward = utils.date(maxDate);\n    }\n\n    forward = null;\n  }\n\n  while (forward || backward) {\n    if (forward && utils.isAfter(forward, maxDate)) {\n      forward = null;\n    }\n    if (backward && utils.isBefore(backward, minDate)) {\n      backward = null;\n    }\n\n    if (forward) {\n      if (!shouldDisableDate(forward)) {\n        return forward;\n      }\n      forward = utils.addDays(forward, 1);\n    }\n\n    if (backward) {\n      if (!shouldDisableDate(backward)) {\n        return backward;\n      }\n      backward = utils.addDays(backward, -1);\n    }\n  }\n\n  // fallback to today if no enabled days\n  return utils.date();\n};\n\nexport const isYearOnlyView = (views: readonly DatePickerView[]) =>\n  views.length === 1 && views[0] === 'year';\n\nexport const isYearAndMonthViews = (views: readonly DatePickerView[]) =>\n  views.length === 2 && arrayIncludes(views, 'month') && arrayIncludes(views, 'year');\n\nexport const getFormatByViews = (\n  views: readonly DatePickerView[],\n  utils: IUtils<MaterialUiPickersDate>\n) => {\n  if (isYearOnlyView(views)) {\n    return utils.formats.year;\n  }\n\n  if (isYearAndMonthViews(views)) {\n    return utils.formats.monthAndYear;\n  }\n\n  return utils.formats.keyboardDate;\n};\n\nexport function parsePickerInputValue(\n  now: MaterialUiPickersDate,\n  utils: MuiPickersAdapter,\n  { value, defaultHighlight }: Pick<BasePickerProps, 'value' | 'defaultHighlight'>\n): MaterialUiPickersDate | null {\n  const parsedValue = utils.date(value || defaultHighlight || now);\n\n  return parsedValue && utils.isValid(parsedValue) ? parsedValue : now;\n}\n\nexport function parseRangeInputValue(\n  now: MaterialUiPickersDate,\n  utils: MuiPickersAdapter,\n  { value = [null, null] }: BasePickerProps<RangeInput, DateRange>\n) {\n  return value.map(date =>\n    !utils.isValid(date) || date === null ? null : utils.startOfDay(utils.date(date))\n  ) as DateRange;\n}\n\nexport const isRangeValid = (\n  utils: MuiPickersAdapter,\n  range: DateRange | null\n): range is DateRange => {\n  return Boolean(range && range[0] && range[1] && utils.isBefore(range[0], range[1]));\n};\n\nexport const isWithinRange = (\n  utils: MuiPickersAdapter,\n  day: MaterialUiPickersDate,\n  range: DateRange | null\n) => {\n  return isRangeValid(utils, range) && utils.isWithinRange(day, range);\n};\n\nexport const isStartOfRange = (\n  utils: MuiPickersAdapter,\n  day: MaterialUiPickersDate,\n  range: DateRange | null\n) => {\n  return isRangeValid(utils, range) && utils.isSameDay(day, range[0]);\n};\n\nexport const isEndOfRange = (\n  utils: MuiPickersAdapter,\n  day: MaterialUiPickersDate,\n  range: DateRange | null\n) => {\n  return isRangeValid(utils, range) && utils.isSameDay(day, range[1]);\n};\n\nexport interface DateValidationProps {\n  /**\n   * Min selectable date\n   * @default Date(1900-01-01)\n   */\n  minDate?: MaterialUiPickersDate;\n  /**\n   * Max selectable date\n   * @default Date(2100-01-01)\n   */\n  maxDate?: MaterialUiPickersDate;\n  /** Disable specific date @DateIOType */\n  shouldDisableDate?: (day: MaterialUiPickersDate) => boolean;\n  /**\n   * Disable past dates\n   * @default false\n   */\n  disablePast?: boolean;\n  /**\n   * Disable future dates\n   * @default false\n   */\n  disableFuture?: boolean;\n}\n\nexport const validateDate = (\n  utils: MuiPickersAdapter,\n  value: MaterialUiPickersDate | ParsableDate,\n  { minDate, maxDate, disableFuture, shouldDisableDate, disablePast }: DateValidationProps\n) => {\n  const now = utils.date();\n  const date = utils.date(value);\n\n  if (value === null) {\n    return null;\n  }\n\n  switch (true) {\n    case !utils.isValid(value):\n      return 'invalidDate';\n\n    case Boolean(shouldDisableDate && shouldDisableDate(date)):\n      return 'shouldDisableDate';\n\n    case Boolean(disableFuture && utils.isAfterDay(date, now)):\n      return 'disableFuture';\n\n    case Boolean(disablePast && utils.isBeforeDay(date, now)):\n      return 'disablePast';\n\n    case Boolean(minDate && utils.isBeforeDay(date, minDate)):\n      return 'minDate';\n\n    case Boolean(maxDate && utils.isAfterDay(date, maxDate)):\n      return 'maxDate';\n\n    default:\n      return null;\n  }\n};\n\nexport type DateValidationError = ReturnType<typeof validateDate>;\n\ntype DateRangeValidationErrorValue = DateValidationError | 'invalidRange' | null;\n\nexport type DateRangeValidationError = [\n  DateRangeValidationErrorValue,\n  DateRangeValidationErrorValue\n];\n\nexport const validateDateRange = (\n  utils: MuiPickersAdapter,\n  value: RangeInput,\n  dateValidationProps: DateValidationProps\n): [DateRangeValidationErrorValue, DateRangeValidationErrorValue] => {\n  const [start, end] = value;\n\n  // for partial input\n  if (start === null || end === null) {\n    return [null, null];\n  }\n\n  const dateValidations = [\n    validateDate(utils, start, dateValidationProps),\n    validateDate(utils, end, dateValidationProps),\n  ] as [DateRangeValidationErrorValue, DateRangeValidationErrorValue];\n\n  if (dateValidations[0] || dateValidations[1]) {\n    return dateValidations;\n  }\n\n  if (!isRangeValid(utils, [utils.date(start), utils.date(end)])) {\n    return ['invalidRange', 'invalidRange'];\n  }\n\n  return [null, null];\n};\n","import { ParsableDate } from '../constants/prop-types';\nimport { MuiPickersAdapter } from '../_shared/hooks/useUtils';\n\nexport function getTextFieldAriaText(rawValue: ParsableDate, utils: MuiPickersAdapter) {\n  return rawValue && utils.isValid(utils.date(rawValue))\n    ? `Choose date, selected date is ${utils.format(utils.date(rawValue), 'fullDate')}`\n    : 'Choose date';\n}\n\nexport const getDisplayDate = (\n  utils: MuiPickersAdapter,\n  value: ParsableDate,\n  inputFormat: string\n) => {\n  const date = utils.date(value);\n  const isEmpty = value === null;\n\n  if (isEmpty) {\n    return '';\n  }\n\n  return utils.isValid(date) ? utils.formatByString(date, inputFormat) : '';\n};\n\nexport function pick12hOr24hFormat(\n  userFormat: string | undefined,\n  ampm: boolean | undefined,\n  formats: { localized: string; '12h': string; '24h': string }\n) {\n  if (userFormat) {\n    return userFormat;\n  }\n\n  if (typeof ampm === 'undefined') {\n    return formats.localized;\n  }\n\n  return ampm ? formats['12h'] : formats['24h'];\n}\n\nconst MASK_USER_INPUT_SYMBOL = '_';\nexport const staticDateWith2DigitTokens = new Date('2019-11-21T22:30:00.000');\nexport const staticDateWith1DigitTokens = new Date('2019-01-01T09:00:00.000');\n\nexport function checkMaskIsValidForCurrentFormat(\n  mask: string,\n  format: string,\n  acceptRegex: RegExp,\n  utils: MuiPickersAdapter\n) {\n  const formattedDateWith1Digit = utils.formatByString(\n    utils.date(staticDateWith1DigitTokens),\n    format\n  );\n  const inferredFormatPatternWith1Digits = formattedDateWith1Digit.replace(\n    acceptRegex,\n    MASK_USER_INPUT_SYMBOL\n  );\n\n  const inferredFormatPatternWith2Digits = utils\n    .formatByString(utils.date(staticDateWith2DigitTokens), format)\n    .replace(acceptRegex, '_');\n\n  const isMaskValid =\n    inferredFormatPatternWith2Digits === mask && inferredFormatPatternWith1Digits === mask;\n\n  // @ts-ignore\n  if (!isMaskValid && process.env.NODE_ENV !== 'production') {\n    console.warn(\n      `The mask \"${mask}\" you passed is not valid for the format used ${format}. Falling down to uncontrolled not-masked input.`\n    );\n  }\n\n  return isMaskValid;\n}\n\nexport const maskedDateFormatter = (mask: string, acceptRegexp: RegExp) => (value: string) => {\n  return value\n    .split('')\n    .map((char, i) => {\n      acceptRegexp.lastIndex = 0;\n\n      if (i > mask.length - 1) {\n        return '';\n      }\n\n      const maskChar = mask[i];\n      const nextMaskChar = mask[i + 1];\n\n      const acceptedChar = acceptRegexp.test(char) ? char : '';\n      const formattedChar =\n        maskChar === MASK_USER_INPUT_SYMBOL ? acceptedChar : maskChar + acceptedChar;\n\n      if (i === value.length - 1 && nextMaskChar && nextMaskChar !== MASK_USER_INPUT_SYMBOL) {\n        // when cursor at the end of mask part (e.g. month) prerender next symbol \"21\" -> \"21/\"\n        return formattedChar ? formattedChar + nextMaskChar : '';\n      } else {\n        return formattedChar;\n      }\n    })\n    .join('');\n};\n","import * as React from 'react';\nimport { useRifm } from 'rifm';\nimport { useUtils } from './useUtils';\nimport { createDelegatedEventHandler } from '../../_helpers/utils';\nimport { DateInputProps, MuiTextFieldProps } from '../PureDateInput';\nimport {\n  maskedDateFormatter,\n  getDisplayDate,\n  checkMaskIsValidForCurrentFormat,\n} from '../../_helpers/text-field-helper';\n\ntype MaskedInputProps = Omit<\n  DateInputProps,\n  | 'open'\n  | 'adornmentPosition'\n  | 'renderInput'\n  | 'openPicker'\n  | 'InputProps'\n  | 'InputAdornmentProps'\n  | 'openPickerIcon'\n  | 'disableOpenPicker'\n  | 'getOpenDialogAriaText'\n  | 'OpenPickerButtonProps'\n>;\n\nexport function useMaskedInput({\n  disableMaskedInput,\n  rawValue,\n  validationError,\n  onChange,\n  mask,\n  acceptRegex = /[\\d]/gi,\n  inputFormat,\n  disabled,\n  rifmFormatter,\n  ignoreInvalidInputs,\n  readOnly,\n  TextFieldProps,\n  label,\n}: MaskedInputProps): MuiTextFieldProps {\n  const utils = useUtils();\n  const isFocusedRef = React.useRef(false);\n\n  const getInputValue = React.useCallback(() => getDisplayDate(utils, rawValue, inputFormat), [\n    inputFormat,\n    rawValue,\n    utils,\n  ]);\n\n  const formatHelperText = utils.getFormatHelperText(inputFormat);\n  const [innerInputValue, setInnerInputValue] = React.useState<string>(getInputValue());\n\n  const shouldUseMaskedInput = React.useMemo(() => {\n    // formatting of dates is a quite slow thing, so do not make useless .format calls\n    if (!mask || disableMaskedInput) {\n      return false;\n    }\n\n    return checkMaskIsValidForCurrentFormat(mask, inputFormat, acceptRegex, utils);\n  }, [acceptRegex, disableMaskedInput, inputFormat, mask, utils]);\n\n  const formatter = React.useMemo(\n    () =>\n      shouldUseMaskedInput && mask ? maskedDateFormatter(mask, acceptRegex) : (st: string) => st,\n    [acceptRegex, mask, shouldUseMaskedInput]\n  );\n\n  React.useEffect(() => {\n    // We do not need to update the input value on keystroke\n    // Because library formatters can change inputs from 12/12/2 to 12/12/0002\n    if ((rawValue === null || utils.isValid(rawValue)) && !isFocusedRef.current) {\n      setInnerInputValue(getInputValue());\n    }\n  }, [utils, getInputValue, rawValue]);\n\n  const handleChange = (text: string) => {\n    const finalString = text === '' || text === mask ? '' : text;\n    setInnerInputValue(finalString);\n\n    const date = finalString === null ? null : utils.parse(finalString, inputFormat);\n    if (ignoreInvalidInputs && !utils.isValid(date)) {\n      return;\n    }\n\n    onChange(date, finalString || undefined);\n  };\n\n  const rifmProps = useRifm({\n    value: innerInputValue,\n    onChange: handleChange,\n    format: rifmFormatter || formatter,\n  });\n\n  const inputStateArgs = shouldUseMaskedInput\n    ? rifmProps\n    : {\n        value: innerInputValue,\n        onChange: (e: React.ChangeEvent<HTMLInputElement>) => handleChange(e.currentTarget.value),\n      };\n\n  return {\n    ...inputStateArgs,\n    label,\n    disabled,\n    placeholder: formatHelperText,\n    error: validationError,\n    helperText: formatHelperText,\n    // @ts-ignore ??? fix typings for textfield finally\n    'data-mui-test': 'keyboard-date-input',\n    inputProps: { readOnly, type: shouldUseMaskedInput ? 'tel' : 'text' },\n    ...TextFieldProps,\n    onFocus: createDelegatedEventHandler(\n      () => (isFocusedRef.current = true),\n      TextFieldProps?.onFocus\n    ),\n    onBlur: createDelegatedEventHandler(\n      () => (isFocusedRef.current = false),\n      TextFieldProps?.onBlur\n    ),\n  };\n}\n","import * as React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { useUtils } from './hooks/useUtils';\nimport { CalendarIcon } from './icons/CalendarIcon';\nimport { useMaskedInput } from './hooks/useMaskedInput';\nimport { DateInputProps, DateInputRefs } from './PureDateInput';\nimport { getTextFieldAriaText } from '../_helpers/text-field-helper';\n\nexport const KeyboardDateInput: React.FC<DateInputProps & DateInputRefs> = ({\n  renderInput,\n  openPicker: onOpen,\n  InputProps,\n  InputAdornmentProps,\n  openPickerIcon = <CalendarIcon />,\n  OpenPickerButtonProps,\n  disableOpenPicker: hideOpenPickerButton,\n  getOpenDialogAriaText = getTextFieldAriaText,\n  containerRef,\n  forwardedRef,\n  ...other\n}) => {\n  const utils = useUtils();\n  const textFieldProps = useMaskedInput(other);\n  const adornmentPosition = InputAdornmentProps?.position || 'end';\n\n  return renderInput({\n    ref: containerRef,\n    inputRef: forwardedRef,\n    ...textFieldProps,\n    InputProps: {\n      ...InputProps,\n      [`${adornmentPosition}Adornment`]: hideOpenPickerButton ? (\n        undefined\n      ) : (\n        <InputAdornment position={adornmentPosition} {...InputAdornmentProps}>\n          <IconButton\n            edge={adornmentPosition}\n            data-mui-test=\"open-picker-from-keyboard\"\n            disabled={other.disabled}\n            aria-label={getOpenDialogAriaText(other.rawValue, utils)}\n            {...OpenPickerButtonProps}\n            onClick={onOpen}\n          >\n            {openPickerIcon}\n          </IconButton>\n        </InputAdornment>\n      ),\n    },\n  });\n};\n\nexport default KeyboardDateInput;\n","import * as React from 'react';\nimport { useUtils } from './useUtils';\nimport { MaterialUiPickersDate } from '../../typings/date';\n\nexport function useParsedDate(possiblyUnparsedValue: any): MaterialUiPickersDate | undefined {\n  const utils = useUtils();\n  return React.useMemo(\n    () =>\n      typeof possiblyUnparsedValue === 'undefined' ? undefined : utils.date(possiblyUnparsedValue)!,\n    [possiblyUnparsedValue, utils]\n  );\n}\n\ninterface MonthValidationOptions {\n  disablePast?: boolean;\n  disableFuture?: boolean;\n  minDate: MaterialUiPickersDate;\n  maxDate: MaterialUiPickersDate;\n}\n\nexport function useNextMonthDisabled(\n  month: MaterialUiPickersDate,\n  { disableFuture, maxDate }: Pick<MonthValidationOptions, 'disableFuture' | 'maxDate'>\n) {\n  const utils = useUtils();\n  return React.useMemo(() => {\n    const now = utils.date();\n    const lastEnabledMonth = utils.startOfMonth(\n      disableFuture && utils.isBefore(now, maxDate) ? now : maxDate\n    );\n    return !utils.isAfter(lastEnabledMonth, month);\n  }, [disableFuture, maxDate, month, utils]);\n}\n\nexport function usePreviousMonthDisabled(\n  month: MaterialUiPickersDate,\n  { disablePast, minDate }: Pick<MonthValidationOptions, 'disablePast' | 'minDate'>\n) {\n  const utils = useUtils();\n\n  return React.useMemo(() => {\n    const now = utils.date();\n    const firstEnabledMonth = utils.startOfMonth(\n      disablePast && utils.isAfter(now, minDate) ? now : minDate\n    );\n    return !utils.isBefore(firstEnabledMonth, month);\n  }, [disablePast, minDate, month, utils]);\n}\n","import * as PropTypes from 'prop-types';\nimport { MaterialUiPickersDate } from '../typings/date';\n\nconst date = PropTypes.oneOfType([\n  PropTypes.object,\n  PropTypes.string,\n  PropTypes.number,\n  PropTypes.instanceOf(Date),\n]);\n\nconst datePickerView = PropTypes.oneOf(['year', 'month', 'day']);\n\nexport type ParsableDate = string | number | Date | null | undefined | MaterialUiPickersDate;\n\nexport const DomainPropTypes = { date, datePickerView };\n\nexport const defaultMinDate = new Date('1900-01-01');\n\nexport const defaultMaxDate = new Date('2100-01-01');\n","import * as React from 'react';\nimport { arrayIncludes } from '../../_helpers/utils';\nimport { MaterialUiPickersDate } from '../../typings/date';\nimport { AnyPickerView } from '../../Picker/SharedPickerProps';\n\nexport type PickerOnChangeFn = (date: MaterialUiPickersDate, isFinish?: boolean | symbol) => void;\n\nexport function useViews({\n  views,\n  openTo,\n  onChange,\n  isMobileKeyboardViewOpen,\n  toggleMobileKeyboardView,\n}: {\n  views: AnyPickerView[];\n  openTo: AnyPickerView;\n  onChange: PickerOnChangeFn;\n  isMobileKeyboardViewOpen: boolean;\n  toggleMobileKeyboardView: () => void;\n}) {\n  const [openView, _setOpenView] = React.useState(\n    openTo && arrayIncludes(views, openTo) ? openTo : views[0]\n  );\n\n  const setOpenView = React.useCallback(\n    (...args: Parameters<typeof _setOpenView>) => {\n      if (isMobileKeyboardViewOpen) {\n        toggleMobileKeyboardView();\n      }\n\n      _setOpenView(...args);\n    },\n    [isMobileKeyboardViewOpen, toggleMobileKeyboardView]\n  );\n\n  const previousView = views[views.indexOf(openView!) - 1];\n  const nextView = views[views.indexOf(openView!) + 1];\n  const openNext = React.useCallback(() => {\n    if (nextView) {\n      setOpenView(nextView);\n    }\n  }, [nextView, setOpenView]);\n\n  const handleChangeAndOpenNext = React.useCallback(\n    (date: MaterialUiPickersDate, isFinishedSelectionInCurrentView?: boolean | symbol) => {\n      onChange(date, Boolean(nextView) ? false : isFinishedSelectionInCurrentView);\n\n      if (isFinishedSelectionInCurrentView) {\n        openNext();\n      }\n    },\n    [nextView, onChange, openNext]\n  );\n\n  return {\n    nextView,\n    previousView,\n    openNext,\n    handleChangeAndOpenNext,\n    openView,\n    setOpenView,\n  };\n}\n","import * as React from 'react';\nimport { useIsomorphicEffect } from './useKeyDown';\nimport { arrayIncludes } from '../../_helpers/utils';\nimport { DateTimePickerView } from '../../DateTimePicker';\nimport { BasePickerProps } from '../../typings/BasePicker';\n\nconst getOrientation = () => {\n  if (typeof window === 'undefined') {\n    return 'portrait';\n  }\n\n  if (window.screen && window.screen.orientation && window.screen.orientation.angle) {\n    return Math.abs(window.screen.orientation.angle) === 90 ? 'landscape' : 'portrait';\n  }\n\n  // Support IOS safari\n  if (window.orientation) {\n    return Math.abs(Number(window.orientation)) === 90 ? 'landscape' : 'portrait';\n  }\n\n  return 'portrait';\n};\n\nexport function useIsLandscape(\n  views: DateTimePickerView[],\n  customOrientation?: BasePickerProps['orientation']\n): boolean {\n  const [orientation, setOrientation] = React.useState<BasePickerProps['orientation']>(\n    getOrientation()\n  );\n\n  const eventHandler = React.useCallback(() => setOrientation(getOrientation()), []);\n\n  useIsomorphicEffect(() => {\n    window.addEventListener('orientationchange', eventHandler);\n    return () => window.removeEventListener('orientationchange', eventHandler);\n  }, [eventHandler]);\n\n  if (arrayIncludes(views, ['hours', 'minutes', 'seconds'])) {\n    // could not display 13:34:44 in landscape mode\n    return false;\n  }\n\n  const orientationToUse = customOrientation || orientation;\n  return orientationToUse === 'landscape';\n}\n","import { styled } from '@material-ui/core/styles';\n\nexport const MobileKeyboardInputView = styled('div')({\n  padding: '16px 24px',\n});\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { onSpaceOrEnter } from '../../_helpers/utils';\n\nexport interface MonthProps {\n  children: React.ReactNode;\n  disabled?: boolean;\n  onSelect: (value: any) => void;\n  selected?: boolean;\n  value: any;\n}\n\nexport const useStyles = makeStyles(\n  theme => ({\n    root: {\n      flex: '1 0 33.33%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      cursor: 'pointer',\n      outline: 'none',\n      height: 64,\n      transition: theme.transitions.create('font-size', { duration: '100ms' }),\n      '&:focus': {\n        color: theme.palette.primary.main,\n        fontWeight: theme.typography.fontWeightMedium,\n      },\n    },\n    monthSelected: {\n      color: theme.palette.primary.main,\n      fontWeight: theme.typography.fontWeightMedium,\n    },\n    monthDisabled: {\n      pointerEvents: 'none',\n      color: theme.palette.text.hint,\n    },\n  }),\n  { name: 'MuiPickersMonth' }\n);\n\nexport const Month: React.FC<MonthProps> = ({\n  selected,\n  onSelect,\n  disabled,\n  value,\n  children,\n  ...other\n}) => {\n  const classes = useStyles();\n  const handleSelection = React.useCallback(() => {\n    onSelect(value);\n  }, [onSelect, value]);\n\n  return (\n    <Typography\n      data-mui-test=\"month\"\n      role=\"button\"\n      component=\"div\"\n      className={clsx(classes.root, {\n        [classes.monthSelected]: selected,\n        [classes.monthDisabled]: disabled,\n      })}\n      tabIndex={disabled ? -1 : 0}\n      onClick={handleSelection}\n      onKeyDown={onSpaceOrEnter(handleSelection)}\n      color={selected ? 'primary' : undefined}\n      variant={selected ? 'h5' : 'subtitle1'}\n      children={children}\n      {...other}\n    />\n  );\n};\n\nMonth.displayName = 'Month';\n\nexport default Month;\n","import * as React from 'react';\nimport Month from './Month';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useUtils } from '../../_shared/hooks/useUtils';\nimport { ParsableDate } from '../../constants/prop-types';\nimport { MaterialUiPickersDate } from '../../typings/date';\n\nexport interface MonthSelectionProps {\n  date: MaterialUiPickersDate;\n  minDate?: ParsableDate;\n  maxDate?: ParsableDate;\n  onChange: (date: MaterialUiPickersDate, isFinish: boolean) => void;\n  disablePast?: boolean | null | undefined;\n  disableFuture?: boolean | null | undefined;\n  onMonthChange?: (date: MaterialUiPickersDate) => void | Promise<void>;\n}\n\nexport const useStyles = makeStyles(\n  {\n    container: {\n      width: 310,\n      display: 'flex',\n      flexWrap: 'wrap',\n      alignContent: 'stretch',\n    },\n  },\n  { name: 'MuiPickersMonthSelection' }\n);\n\nexport const MonthSelection: React.FC<MonthSelectionProps> = ({\n  disablePast,\n  disableFuture,\n  minDate,\n  maxDate,\n  date,\n  onMonthChange,\n  onChange,\n}) => {\n  const utils = useUtils();\n  const classes = useStyles();\n  const currentMonth = utils.getMonth(date);\n\n  const shouldDisableMonth = (month: MaterialUiPickersDate) => {\n    const now = utils.date();\n    const utilMinDate = utils.date(minDate);\n    const utilMaxDate = utils.date(maxDate);\n\n    const firstEnabledMonth = utils.startOfMonth(\n      disablePast && utils.isAfter(now, utilMinDate) ? now : utilMinDate\n    );\n\n    const lastEnabledMonth = utils.startOfMonth(\n      disableFuture && utils.isBefore(now, utilMaxDate) ? now : utilMaxDate\n    );\n\n    const isBeforeFirstEnabled = utils.isBefore(month, firstEnabledMonth);\n    const isAfterLastEnabled = utils.isAfter(month, lastEnabledMonth);\n\n    return isBeforeFirstEnabled || isAfterLastEnabled;\n  };\n\n  const onMonthSelect = React.useCallback(\n    (month: number) => {\n      const newDate = utils.setMonth(date, month);\n\n      onChange(newDate, true);\n      if (onMonthChange) {\n        onMonthChange(newDate);\n      }\n    },\n    [date, onChange, onMonthChange, utils]\n  );\n\n  return (\n    <div className={classes.container}>\n      {utils.getMonthArray(date).map(month => {\n        const monthNumber = utils.getMonth(month);\n        const monthText = utils.format(month, 'monthShort');\n\n        return (\n          <Month\n            key={monthText}\n            value={monthNumber}\n            selected={monthNumber === currentMonth}\n            onSelect={onMonthSelect}\n            disabled={shouldDisableMonth(month)}\n          >\n            {monthText}\n          </Month>\n        );\n      })}\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { CalendarViewProps } from './CalendarView';\nimport { SlideDirection } from './SlideTransition';\nimport { validateDate } from '../../_helpers/date-utils';\nimport { MaterialUiPickersDate } from '../../typings/date';\nimport { MuiPickersAdapter, useUtils } from '../../_shared/hooks/useUtils';\n\ninterface State {\n  isMonthSwitchingAnimating: boolean;\n  loadingQueue: number;\n  currentMonth: MaterialUiPickersDate;\n  focusedDay: MaterialUiPickersDate | null;\n  slideDirection: SlideDirection;\n}\n\ntype ReducerAction<TType, TAdditional = {}> = { type: TType } & TAdditional;\n\ninterface ChangeMonthPayload {\n  direction: SlideDirection;\n  newMonth: MaterialUiPickersDate;\n}\n\nexport const createCalendarStateReducer = (\n  reduceAnimations: boolean,\n  disableSwitchToMonthOnDayFocus: boolean,\n  utils: MuiPickersAdapter\n) => (\n  state: State,\n  action:\n    | ReducerAction<'popLoadingQueue'>\n    | ReducerAction<'finishMonthSwitchingAnimation'>\n    | ReducerAction<'changeMonth', ChangeMonthPayload>\n    | ReducerAction<'changeMonthLoading', ChangeMonthPayload>\n    | ReducerAction<'changeFocusedDay', { focusedDay: MaterialUiPickersDate }>\n): State => {\n  switch (action.type) {\n    case 'changeMonthLoading': {\n      return {\n        ...state,\n        loadingQueue: state.loadingQueue + 1,\n        slideDirection: action.direction,\n        currentMonth: action.newMonth,\n        isMonthSwitchingAnimating: !reduceAnimations,\n      };\n    }\n    case 'changeMonth': {\n      return {\n        ...state,\n        slideDirection: action.direction,\n        currentMonth: action.newMonth,\n        isMonthSwitchingAnimating: !reduceAnimations,\n      };\n    }\n    case 'popLoadingQueue': {\n      return {\n        ...state,\n        loadingQueue: state.loadingQueue <= 0 ? 0 : state.loadingQueue - 1,\n      };\n    }\n    case 'finishMonthSwitchingAnimation': {\n      return {\n        ...state,\n        isMonthSwitchingAnimating: false,\n      };\n    }\n    case 'changeFocusedDay': {\n      const needMonthSwitch =\n        !disableSwitchToMonthOnDayFocus &&\n        !utils.isSameMonth(state.currentMonth, action.focusedDay);\n      return {\n        ...state,\n        focusedDay: action.focusedDay,\n        isMonthSwitchingAnimating: needMonthSwitch && !reduceAnimations,\n        currentMonth: needMonthSwitch ? utils.startOfMonth(action.focusedDay) : state.currentMonth,\n        slideDirection: utils.isAfterDay(action.focusedDay, state.currentMonth) ? 'left' : 'right',\n      };\n    }\n  }\n};\n\ntype CalendarStateInput = Pick<\n  CalendarViewProps,\n  | 'disableFuture'\n  | 'disablePast'\n  | 'shouldDisableDate'\n  | 'date'\n  | 'reduceAnimations'\n  | 'onMonthChange'\n> & {\n  minDate: MaterialUiPickersDate;\n  maxDate: MaterialUiPickersDate;\n  disableSwitchToMonthOnDayFocus?: boolean;\n};\n\nexport function useCalendarState({\n  date,\n  reduceAnimations,\n  onMonthChange,\n  disablePast,\n  disableFuture,\n  minDate,\n  maxDate,\n  shouldDisableDate,\n  disableSwitchToMonthOnDayFocus = false,\n}: CalendarStateInput) {\n  const utils = useUtils();\n  const reducerFn = React.useRef(\n    createCalendarStateReducer(Boolean(reduceAnimations), disableSwitchToMonthOnDayFocus, utils)\n  );\n\n  const [{ loadingQueue, ...calendarState }, dispatch] = React.useReducer(reducerFn.current, {\n    isMonthSwitchingAnimating: false,\n    loadingQueue: 0,\n    focusedDay: date,\n    currentMonth: utils.startOfMonth(date),\n    slideDirection: 'left',\n  });\n\n  const handleChangeMonth = React.useCallback(\n    (payload: ChangeMonthPayload) => {\n      const returnedPromise = onMonthChange && onMonthChange(payload.newMonth);\n\n      if (returnedPromise) {\n        dispatch({\n          type: 'changeMonthLoading',\n          ...payload,\n        });\n\n        returnedPromise.then(() => dispatch({ type: 'popLoadingQueue' }));\n      } else {\n        dispatch({\n          type: 'changeMonth',\n          ...payload,\n        });\n      }\n    },\n    [onMonthChange]\n  );\n\n  const changeMonth = React.useCallback(\n    (date: MaterialUiPickersDate) => {\n      if (utils.isSameMonth(date, calendarState.currentMonth)) {\n        return;\n      }\n\n      handleChangeMonth({\n        newMonth: utils.startOfMonth(date),\n        direction: utils.isAfterDay(date, calendarState.currentMonth) ? 'left' : 'right',\n      });\n    },\n    [calendarState.currentMonth, handleChangeMonth, utils]\n  );\n\n  const isDateDisabled = React.useCallback(\n    (day: MaterialUiPickersDate) => {\n      return (\n        validateDate(utils, day, {\n          disablePast,\n          disableFuture,\n          minDate,\n          maxDate,\n          shouldDisableDate,\n        }) !== null\n      );\n    },\n    [disableFuture, disablePast, maxDate, minDate, shouldDisableDate, utils]\n  );\n\n  const onMonthSwitchingAnimationEnd = React.useCallback(() => {\n    dispatch({ type: 'finishMonthSwitchingAnimation' });\n  }, []);\n\n  const changeFocusedDay = React.useCallback(\n    (newFocusedDate: MaterialUiPickersDate) => {\n      if (!isDateDisabled(newFocusedDate)) {\n        dispatch({ type: 'changeFocusedDay', focusedDay: newFocusedDate });\n      }\n    },\n    [isDateDisabled]\n  );\n\n  return {\n    loadingQueue,\n    calendarState,\n    changeMonth,\n    changeFocusedDay,\n    isDateDisabled,\n    onMonthSwitchingAnimationEnd,\n    handleChangeMonth,\n  };\n}\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\ninterface FadeTransitionProps {\n  transKey: React.Key;\n  className?: string;\n  reduceAnimations: boolean;\n  children: React.ReactElement;\n}\n\nconst animationDuration = 500;\nexport const useStyles = makeStyles(\n  theme => {\n    return {\n      transitionContainer: {\n        display: 'block',\n        position: 'relative',\n      },\n      fadeEnter: {\n        willChange: 'transform',\n        opacity: 0,\n      },\n      fadeEnterActive: {\n        opacity: 1,\n        transition: theme.transitions.create('opacity', {\n          duration: animationDuration,\n        }),\n      },\n      fadeExit: {\n        opacity: 1,\n      },\n      fadeExitActive: {\n        opacity: 0,\n        transition: theme.transitions.create('opacity', {\n          duration: animationDuration / 2,\n        }),\n      },\n    };\n  },\n  { name: 'MuiPickersFadeTransition' }\n);\n\nexport const FadeTransitionGroup: React.FC<FadeTransitionProps> = ({\n  children,\n  transKey,\n  reduceAnimations,\n  className = null,\n}) => {\n  const classes = useStyles();\n  if (reduceAnimations) {\n    return children;\n  }\n\n  const transitionClasses = {\n    exit: classes.fadeExit,\n    enterActive: classes.fadeEnterActive,\n    enter: classes.fadeEnter,\n    exitActive: classes.fadeExitActive,\n  };\n\n  return (\n    <TransitionGroup\n      className={clsx(classes.transitionContainer, className)}\n      childFactory={element =>\n        React.cloneElement(element, {\n          classNames: transitionClasses,\n        })\n      }\n    >\n      <CSSTransition\n        mountOnEnter\n        unmountOnExit\n        key={transKey}\n        timeout={{ appear: animationDuration, enter: animationDuration / 2, exit: 0 }}\n        classNames={transitionClasses}\n        children={children}\n      />\n    </TransitionGroup>\n  );\n};\n","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n\n/**\n * @ignore - internal component.\n */\nexport const ArrowDropDownIcon = createSvgIcon(<path d=\"M7 10l5 5 5-5z\" />, 'ArrowDropDown');\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Fade from '@material-ui/core/Fade';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport { DatePickerView } from '../../DatePicker';\nimport { SlideDirection } from './SlideTransition';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useUtils } from '../../_shared/hooks/useUtils';\nimport { MaterialUiPickersDate } from '../../typings/date';\nimport { FadeTransitionGroup } from './FadeTransitionGroup';\nimport { DateValidationProps } from '../../_helpers/date-utils';\nimport { ArrowDropDownIcon } from '../../_shared/icons/ArrowDropDownIcon';\nimport { ArrowSwitcher, ExportedArrowSwitcherProps } from '../../_shared/ArrowSwitcher';\nimport {\n  usePreviousMonthDisabled,\n  useNextMonthDisabled,\n} from '../../_shared/hooks/date-helpers-hooks';\n\nexport interface CalendarHeaderProps\n  extends ExportedArrowSwitcherProps,\n    Omit<DateValidationProps, 'shouldDisableDate'> {\n  view: DatePickerView;\n  views: DatePickerView[];\n  currentMonth: MaterialUiPickersDate;\n  /** Get aria-label text for switching between views button */\n  getViewSwitchingButtonText?: (currentView: DatePickerView) => string;\n  reduceAnimations: boolean;\n  changeView: (view: DatePickerView) => void;\n  minDate: MaterialUiPickersDate;\n  maxDate: MaterialUiPickersDate;\n  onMonthChange: (date: MaterialUiPickersDate, slideDirection: SlideDirection) => void;\n}\n\nexport const useStyles = makeStyles(\n  theme => ({\n    switchHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      marginTop: 16,\n      marginBottom: 8,\n      paddingLeft: 24,\n      paddingRight: 12,\n      // prevent jumping in safari\n      maxHeight: 30,\n      minHeight: 30,\n    },\n    yearSelectionSwitcher: {\n      marginRight: 'auto',\n    },\n    previousMonthButton: {\n      marginRight: 24,\n    },\n    switchViewDropdown: {\n      willChange: 'transform',\n      transition: theme.transitions.create('transform'),\n      transform: 'rotate(0deg)',\n    },\n    switchViewDropdownDown: {\n      transform: 'rotate(180deg)',\n    },\n    monthTitleContainer: {\n      display: 'flex',\n      maxHeight: 30,\n      overflow: 'hidden',\n      cursor: 'pointer',\n      marginRight: 'auto',\n    },\n    monthText: {\n      marginRight: 4,\n    },\n  }),\n  { name: 'MuiPickersCalendarHeader' }\n);\n\nfunction getSwitchingViewAriaText(view: DatePickerView) {\n  return view === 'year'\n    ? 'year view is open, switch to calendar view'\n    : 'calendar view is open, switch to year view';\n}\n\nexport const CalendarHeader: React.SFC<CalendarHeaderProps> = ({\n  view: currentView,\n  views,\n  currentMonth: month,\n  changeView,\n  minDate,\n  maxDate,\n  disablePast,\n  disableFuture,\n  onMonthChange,\n  reduceAnimations,\n  leftArrowButtonProps,\n  rightArrowButtonProps,\n  leftArrowIcon,\n  rightArrowIcon,\n  leftArrowButtonText = 'previous month',\n  rightArrowButtonText = 'next month',\n  getViewSwitchingButtonText = getSwitchingViewAriaText,\n}) => {\n  const utils = useUtils();\n  const classes = useStyles();\n\n  const selectNextMonth = () => onMonthChange(utils.getNextMonth(month), 'left');\n  const selectPreviousMonth = () => onMonthChange(utils.getPreviousMonth(month), 'right');\n\n  const isNextMonthDisabled = useNextMonthDisabled(month, { disableFuture, maxDate });\n  const isPreviousMonthDisabled = usePreviousMonthDisabled(month, { disablePast, minDate });\n\n  const toggleView = () => {\n    if (views.length === 1) {\n      return;\n    }\n\n    if (views.length === 2) {\n      changeView(views.find(view => view !== currentView) || views[0]);\n    } else {\n      // switching only between first 2\n      const nextIndexToOpen = views.indexOf(currentView) !== 0 ? 0 : 1;\n      changeView(views[nextIndexToOpen]);\n    }\n  };\n\n  return (\n    <>\n      <div className={classes.switchHeader}>\n        <div className={classes.monthTitleContainer} onClick={toggleView}>\n          <FadeTransitionGroup\n            reduceAnimations={reduceAnimations}\n            transKey={utils.format(month, 'month')}\n          >\n            <Typography\n              aria-live=\"polite\"\n              data-mui-test=\"calendar-month-text\"\n              align=\"center\"\n              variant=\"subtitle1\"\n              className={classes.monthText}\n              children={utils.format(month, 'month')}\n            />\n          </FadeTransitionGroup>\n          <FadeTransitionGroup\n            reduceAnimations={reduceAnimations}\n            transKey={utils.format(month, 'year')}\n          >\n            <Typography\n              aria-live=\"polite\"\n              data-mui-test=\"calendar-year-text\"\n              align=\"center\"\n              variant=\"subtitle1\"\n              children={utils.format(month, 'year')}\n            />\n          </FadeTransitionGroup>\n\n          {views.length > 1 && (\n            <IconButton\n              size=\"small\"\n              data-mui-test=\"calendar-view-switcher\"\n              onClick={toggleView}\n              className={classes.yearSelectionSwitcher}\n              aria-label={getViewSwitchingButtonText(currentView)}\n            >\n              <ArrowDropDownIcon\n                className={clsx(classes.switchViewDropdown, {\n                  [classes.switchViewDropdownDown]: currentView === 'year',\n                })}\n              />\n            </IconButton>\n          )}\n        </div>\n\n        <Fade in={currentView === 'date'}>\n          <ArrowSwitcher\n            leftArrowButtonProps={leftArrowButtonProps}\n            rightArrowButtonProps={rightArrowButtonProps}\n            leftArrowButtonText={leftArrowButtonText}\n            rightArrowButtonText={rightArrowButtonText}\n            leftArrowIcon={leftArrowIcon}\n            rightArrowIcon={rightArrowIcon}\n            onLeftClick={selectPreviousMonth}\n            onRightClick={selectNextMonth}\n            isLeftDisabled={isPreviousMonthDisabled}\n            isRightDisabled={isNextMonthDisabled}\n          />\n        </Fade>\n      </div>\n    </>\n  );\n};\n\nCalendarHeader.displayName = 'CalendarHeader';\n\nCalendarHeader.propTypes = {\n  leftArrowIcon: PropTypes.node,\n  rightArrowIcon: PropTypes.node,\n  leftArrowButtonText: PropTypes.string,\n  rightArrowButtonText: PropTypes.string,\n};\n\nexport default CalendarHeader;\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport Typography from '@material-ui/core/Typography';\nimport { onSpaceOrEnter } from '../../_helpers/utils';\nimport { makeStyles, fade } from '@material-ui/core/styles';\nimport { WrapperVariantContext } from '../../wrappers/WrapperVariantContext';\n\nexport interface YearProps {\n  children: React.ReactNode;\n  disabled?: boolean;\n  onSelect: (value: any) => void;\n  selected: boolean;\n  focused: boolean;\n  value: any;\n  allowKeyboardControl?: boolean;\n  forwardedRef?: React.Ref<HTMLButtonElement>;\n}\n\nexport const useStyles = makeStyles(\n  theme => ({\n    yearButtonContainer: {\n      color: 'unset',\n      backgroundColor: 'transparent',\n      border: 'none',\n      outline: 0,\n      flexBasis: '33.3%',\n      display: 'flex',\n      justifyContent: 'center',\n      padding: '8px 0',\n    },\n    yearButtonContainerDesktop: {\n      flexBasis: '25%',\n    },\n    yearButton: {\n      height: 36,\n      width: 72,\n      borderRadius: 16,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      cursor: 'pointer',\n      outline: 'none',\n      '&:focus, &:hover': {\n        backgroundColor: fade(theme.palette.action.active, theme.palette.action.hoverOpacity),\n      },\n    },\n    yearSelected: {\n      color: theme.palette.getContrastText(theme.palette.primary.main),\n      backgroundColor: theme.palette.primary.main,\n      '&:focus, &:hover': {\n        backgroundColor: theme.palette.primary.dark,\n      },\n    },\n    yearDisabled: {\n      pointerEvents: 'none',\n      color: theme.palette.text.hint,\n    },\n  }),\n  { name: 'MuiPickersYear' }\n);\n\nexport const Year: React.FC<YearProps> = ({\n  onSelect,\n  forwardedRef,\n  value,\n  selected,\n  disabled,\n  children,\n  focused,\n  allowKeyboardControl,\n  ...other\n}) => {\n  const classes = useStyles();\n  const ref = React.useRef<HTMLSpanElement>(null);\n  const wrapperVariant = React.useContext(WrapperVariantContext);\n\n  React.useEffect(() => {\n    if (focused && ref.current && !disabled && allowKeyboardControl) {\n      ref.current.focus();\n    }\n  }, [allowKeyboardControl, disabled, focused]);\n\n  return (\n    <button\n      ref={forwardedRef}\n      disabled={disabled}\n      data-mui-test=\"year\"\n      onClick={() => onSelect(value)}\n      className={clsx(classes.yearButtonContainer, {\n        [classes.yearButtonContainerDesktop]: wrapperVariant === 'desktop',\n      })}\n    >\n      <Typography\n        ref={ref}\n        variant=\"subtitle1\"\n        data-mui-test={`year-${children}`}\n        tabIndex={selected ? 0 : -1}\n        color={selected ? 'primary' : undefined}\n        onKeyDown={onSpaceOrEnter(() => onSelect(value))}\n        className={clsx(classes.yearButton, {\n          [classes.yearSelected]: selected,\n          [classes.yearDisabled]: disabled,\n        })}\n        {...other}\n      >\n        {children}\n      </Typography>\n    </button>\n  );\n};\n\nexport default React.forwardRef<HTMLButtonElement, YearProps>((props, ref) => (\n  <Year {...props} forwardedRef={ref} />\n));\n","import * as React from 'react';\nimport Year from './Year';\nimport { MaterialUiPickersDate } from '../../typings/date';\nimport { useUtils, useNow } from '../../_shared/hooks/useUtils';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { WrapperVariantContext } from '../../wrappers/WrapperVariantContext';\nimport { useGlobalKeyDown, keycode as keys } from '../../_shared/hooks/useKeyDown';\n\nexport interface ExportedYearSelectionProps {\n  /** Callback firing on year change @DateIOType */\n  onYearChange?: (date: MaterialUiPickersDate) => void;\n  /** Disable specific years dynamically. Works like `shouldDisableDate` but for year selection view. @DateIOType */\n  shouldDisableYear?: (day: MaterialUiPickersDate) => boolean;\n}\n\nexport interface YearSelectionProps extends ExportedYearSelectionProps {\n  date: MaterialUiPickersDate;\n  minDate: MaterialUiPickersDate;\n  maxDate: MaterialUiPickersDate;\n  onChange: (date: MaterialUiPickersDate, isFinish: boolean) => void;\n  disablePast?: boolean | null | undefined;\n  disableFuture?: boolean | null | undefined;\n  allowKeyboardControl?: boolean;\n  isDateDisabled: (day: MaterialUiPickersDate) => boolean;\n}\n\nexport const useStyles = makeStyles(\n  {\n    container: {\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      overflowY: 'auto',\n      height: '100%',\n    },\n  },\n  { name: 'MuiPickersYearSelection' }\n);\n\nexport const YearSelection: React.FC<YearSelectionProps> = ({\n  date,\n  onChange,\n  onYearChange,\n  minDate,\n  maxDate,\n  disablePast,\n  disableFuture,\n  isDateDisabled,\n  shouldDisableYear,\n  allowKeyboardControl,\n}) => {\n  const now = useNow();\n  const theme = useTheme();\n  const utils = useUtils();\n  const classes = useStyles();\n  const currentYear = utils.getYear(date);\n  const wrapperVariant = React.useContext(WrapperVariantContext);\n  const selectedYearRef = React.useRef<HTMLButtonElement>(null);\n  const [focusedYear, setFocusedYear] = React.useState<number | null>(currentYear);\n\n  React.useEffect(() => {\n    if (allowKeyboardControl && selectedYearRef.current && selectedYearRef.current.scrollIntoView) {\n      try {\n        selectedYearRef.current.scrollIntoView({\n          block: wrapperVariant === 'static' ? 'nearest' : 'center',\n        });\n      } catch (e) {\n        // call without arguments in case when scrollIntoView works improperly (e.g. Firefox 52-57)\n        selectedYearRef.current.scrollIntoView();\n      }\n    }\n  }, []); // eslint-disable-line\n\n  const handleYearSelection = React.useCallback(\n    (year: number, isFinish = true) => {\n      const newDate = utils.setYear(date, year);\n      if (isDateDisabled(newDate)) {\n        return;\n      }\n\n      if (onYearChange) {\n        onYearChange(newDate);\n      }\n\n      onChange(newDate, isFinish);\n    },\n    [date, isDateDisabled, onChange, onYearChange, utils]\n  );\n\n  const focusYear = React.useCallback(\n    (year: number) => {\n      if (!isDateDisabled(utils.setYear(date, year))) {\n        setFocusedYear(year);\n      }\n    },\n    [date, isDateDisabled, utils]\n  );\n\n  const yearsInRow = wrapperVariant === 'desktop' ? 4 : 3;\n  const nowFocusedYear = focusedYear || currentYear;\n  useGlobalKeyDown(Boolean(allowKeyboardControl), {\n    [keys.ArrowUp]: () => focusYear(nowFocusedYear - yearsInRow),\n    [keys.ArrowDown]: () => focusYear(nowFocusedYear + yearsInRow),\n    [keys.ArrowLeft]: () => focusYear(nowFocusedYear + (theme.direction === 'ltr' ? -1 : 1)),\n    [keys.ArrowRight]: () => focusYear(nowFocusedYear + (theme.direction === 'ltr' ? 1 : -1)),\n  });\n\n  return (\n    <div>\n      <div className={classes.container}>\n        {utils.getYearRange(minDate, maxDate).map(year => {\n          const yearNumber = utils.getYear(year);\n          const selected = yearNumber === currentYear;\n\n          return (\n            <Year\n              key={utils.format(year, 'year')}\n              selected={selected}\n              value={yearNumber}\n              onSelect={handleYearSelection}\n              allowKeyboardControl={allowKeyboardControl}\n              focused={yearNumber === focusedYear}\n              ref={selected ? selectedYearRef : undefined}\n              disabled={Boolean(\n                (disablePast && utils.isBeforeYear(year, now)) ||\n                  (disableFuture && utils.isAfterYear(year, now)) ||\n                  (shouldDisableYear && shouldDisableYear(year))\n              )}\n            >\n              {utils.format(year, 'year')}\n            </Year>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { MonthSelection } from './MonthSelection';\nimport { DatePickerView } from '../../DatePicker';\nimport { useCalendarState } from './useCalendarState';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useUtils } from '../../_shared/hooks/useUtils';\nimport { VIEW_HEIGHT } from '../../constants/dimensions';\nimport { MaterialUiPickersDate } from '../../typings/date';\nimport { FadeTransitionGroup } from './FadeTransitionGroup';\nimport { Calendar, ExportedCalendarProps } from './Calendar';\nimport { PickerOnChangeFn } from '../../_shared/hooks/useViews';\nimport { CalendarHeader, CalendarHeaderProps } from './CalendarHeader';\nimport { YearSelection, ExportedYearSelectionProps } from './YearSelection';\nimport { defaultMinDate, defaultMaxDate } from '../../constants/prop-types';\nimport { IsStaticVariantContext } from '../../wrappers/WrapperVariantContext';\nimport { DateValidationProps, findClosestEnabledDate } from '../../_helpers/date-utils';\n\ntype PublicCalendarHeaderProps = Pick<\n  CalendarHeaderProps,\n  | 'leftArrowIcon'\n  | 'rightArrowIcon'\n  | 'leftArrowButtonProps'\n  | 'rightArrowButtonProps'\n  | 'leftArrowButtonText'\n  | 'rightArrowButtonText'\n  | 'getViewSwitchingButtonText'\n>;\n\nexport interface CalendarViewProps\n  extends DateValidationProps,\n    ExportedCalendarProps,\n    ExportedYearSelectionProps,\n    PublicCalendarHeaderProps {\n  date: MaterialUiPickersDate;\n  view: DatePickerView;\n  views: DatePickerView[];\n  changeView: (view: DatePickerView) => void;\n  onChange: PickerOnChangeFn;\n  /** Disable heavy animations @default /(android)/i.test(window.navigator.userAgent) */\n  reduceAnimations?: boolean;\n  /** Callback firing on month change. Return promise to render spinner till it will not be resolved @DateIOType */\n  onMonthChange?: (date: MaterialUiPickersDate) => void | Promise<void>;\n}\n\nexport type ExportedCalendarViewProps = Omit<\n  CalendarViewProps,\n  'date' | 'view' | 'views' | 'onChange' | 'changeView' | 'slideDirection' | 'currentMonth'\n>;\n\nexport const useStyles = makeStyles(\n  {\n    viewTransitionContainer: {\n      overflowY: 'auto',\n    },\n    gridFullHeight: {\n      flex: 1,\n      minHeight: VIEW_HEIGHT - 60,\n      height: '100%',\n    },\n  },\n  { name: 'MuiPickersCalendarView' }\n);\n\nexport const defaultReduceAnimations =\n  typeof navigator !== 'undefined' && /(android)/i.test(navigator.userAgent);\n\nexport const CalendarView: React.FC<CalendarViewProps> = ({\n  date,\n  view,\n  onChange,\n  changeView,\n  onMonthChange,\n  minDate: __minDate,\n  maxDate: __maxDate,\n  reduceAnimations = defaultReduceAnimations,\n  loadingIndicator = <CircularProgress data-mui-test=\"loading-progress\" />,\n  shouldDisableDate,\n  allowKeyboardControl: __allowKeyboardControlProp,\n  disablePast,\n  disableFuture,\n  shouldDisableYear,\n  ...other\n}) => {\n  const utils = useUtils();\n  const classes = useStyles();\n  const isStatic = React.useContext(IsStaticVariantContext);\n  const allowKeyboardControl = __allowKeyboardControlProp ?? !isStatic;\n\n  const minDate = __minDate || utils.date(defaultMinDate);\n  const maxDate = __maxDate || utils.date(defaultMaxDate);\n\n  const {\n    loadingQueue,\n    calendarState,\n    changeFocusedDay,\n    changeMonth,\n    isDateDisabled,\n    handleChangeMonth,\n    onMonthSwitchingAnimationEnd,\n  } = useCalendarState({\n    date,\n    reduceAnimations,\n    onMonthChange,\n    minDate,\n    maxDate,\n    shouldDisableDate,\n    disablePast,\n    disableFuture,\n  });\n\n  React.useEffect(() => {\n    if (date && isDateDisabled(date)) {\n      const closestEnabledDate = findClosestEnabledDate({\n        utils,\n        date,\n        minDate: utils.date(minDate),\n        maxDate: utils.date(maxDate),\n        disablePast: Boolean(disablePast),\n        disableFuture: Boolean(disableFuture),\n        shouldDisableDate: isDateDisabled,\n      });\n\n      onChange(closestEnabledDate, false);\n    }\n    // This call is too expensive to run it on each prop change.\n    // So just ensure that we are not rendering disabled as selected on mount.\n  }, []); // eslint-disable-line\n\n  React.useEffect(() => {\n    changeMonth(date);\n  }, [date]); // eslint-disable-line\n\n  React.useEffect(() => {\n    if (view === 'date') {\n      changeFocusedDay(date);\n    }\n  }, [view]); // eslint-disable-line\n\n  return (\n    <>\n      <CalendarHeader\n        {...other}\n        view={view}\n        currentMonth={calendarState.currentMonth}\n        changeView={changeView}\n        onMonthChange={(newMonth, direction) => handleChangeMonth({ newMonth, direction })}\n        minDate={minDate}\n        maxDate={maxDate}\n        disablePast={disablePast}\n        disableFuture={disableFuture}\n        reduceAnimations={reduceAnimations}\n      />\n\n      <FadeTransitionGroup\n        reduceAnimations={reduceAnimations}\n        className={classes.viewTransitionContainer}\n        transKey={view}\n      >\n        <div>\n          {view === 'year' && (\n            <YearSelection\n              {...other}\n              date={date}\n              onChange={onChange}\n              minDate={minDate}\n              maxDate={maxDate}\n              disableFuture={disableFuture}\n              disablePast={disablePast}\n              isDateDisabled={isDateDisabled}\n              allowKeyboardControl={allowKeyboardControl}\n              shouldDisableYear={shouldDisableYear}\n            />\n          )}\n\n          {view === 'month' && (\n            <MonthSelection\n              {...other}\n              date={date}\n              onChange={onChange}\n              minDate={minDate}\n              maxDate={maxDate}\n              onMonthChange={onMonthChange}\n            />\n          )}\n\n          {view === 'date' &&\n            (loadingQueue > 0 ? (\n              <Grid\n                className={classes.gridFullHeight}\n                container\n                alignItems=\"center\"\n                justify=\"center\"\n              >\n                {loadingIndicator}\n              </Grid>\n            ) : (\n              <Calendar\n                {...other}\n                {...calendarState}\n                onMonthSwitchingAnimationEnd={onMonthSwitchingAnimationEnd}\n                changeFocusedDay={changeFocusedDay}\n                reduceAnimations={reduceAnimations}\n                date={date}\n                onChange={onChange}\n                isDateDisabled={isDateDisabled}\n                allowKeyboardControl={allowKeyboardControl}\n              />\n            ))}\n        </div>\n      </FadeTransitionGroup>\n    </>\n  );\n};\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport KeyboardDateInput from '../_shared/KeyboardDateInput';\nimport { useViews } from '../_shared/hooks/useViews';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DateTimePickerView } from '../DateTimePicker';\nimport { ParsableDate } from '../constants/prop-types';\nimport { BasePickerProps } from '../typings/BasePicker';\nimport { MaterialUiPickersDate } from '../typings/date';\nimport { DatePickerView } from '../DatePicker/DatePicker';\nimport { useIsLandscape } from '../_shared/hooks/useIsLandscape';\nimport { DIALOG_WIDTH, VIEW_HEIGHT } from '../constants/dimensions';\nimport { WrapperVariantContext } from '../wrappers/WrapperVariantContext';\nimport { MobileKeyboardInputView } from '../views/MobileKeyboardInputView';\nimport { ClockView, ExportedClockViewProps } from '../views/Clock/ClockView';\nimport { WithViewsProps, AnyPickerView, SharedPickerProps } from './SharedPickerProps';\nimport { CalendarView, ExportedCalendarViewProps } from '../views/Calendar/CalendarView';\n\ntype CalendarAndClockProps = ExportedCalendarViewProps & ExportedClockViewProps;\n\nexport type ToolbarComponentProps<\n  TDate = MaterialUiPickersDate,\n  TView extends AnyPickerView = AnyPickerView\n> = CalendarAndClockProps & {\n  views: TView[];\n  openView: TView;\n  date: TDate;\n  setOpenView: (view: TView) => void;\n  onChange: (date: TDate, isFinish?: boolean) => void;\n  toolbarTitle?: React.ReactNode;\n  toolbarFormat?: string;\n  // TODO move out, cause it is DateTimePickerOnly\n  hideTabs?: boolean;\n  dateRangeIcon?: React.ReactNode;\n  timeIcon?: React.ReactNode;\n  isLandscape: boolean;\n  ampmInClock?: boolean;\n  isMobileKeyboardViewOpen: boolean;\n  toggleMobileKeyboardView: () => void;\n  getMobileKeyboardInputViewButtonText?: () => string;\n};\n\nexport interface ExportedPickerProps<TView extends AnyPickerView>\n  extends Omit<BasePickerProps, 'value' | 'onChange'>,\n    CalendarAndClockProps,\n    WithViewsProps<TView> {\n  // TODO move out, cause it is DateTimePickerOnly\n  hideTabs?: boolean;\n  dateRangeIcon?: React.ReactNode;\n  timeIcon?: React.ReactNode;\n}\n\nexport type PickerProps<\n  TView extends AnyPickerView,\n  TInputValue = ParsableDate,\n  TDateValue = MaterialUiPickersDate\n> = ExportedPickerProps<TView> & SharedPickerProps<TInputValue, TDateValue>;\n\nexport const useStyles = makeStyles(\n  {\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    containerLandscape: {\n      flexDirection: 'row',\n    },\n    pickerView: {\n      overflowX: 'hidden',\n      width: DIALOG_WIDTH,\n      maxHeight: VIEW_HEIGHT,\n      display: 'flex',\n      flexDirection: 'column',\n      margin: '0 auto',\n    },\n    pickerViewLandscape: {\n      padding: '0 8px',\n    },\n  },\n  { name: 'MuiPickersBasePicker' }\n);\n\nconst MobileKeyboardTextFieldProps = { fullWidth: true };\n\nconst isTimePickerByViews = (views: DateTimePickerView[]) =>\n  !views.some(view => view === 'year' || view === 'month' || view === 'date');\n\nexport function Picker({\n  date,\n  openTo = 'date',\n  views = ['year', 'month', 'date', 'hours', 'minutes', 'seconds'],\n  toolbarTitle,\n  showToolbar,\n  onDateChange,\n  ToolbarComponent = () => null,\n  orientation,\n  DateInputProps,\n  isMobileKeyboardViewOpen,\n  toggleMobileKeyboardView,\n  toolbarFormat,\n  className,\n  ...other\n}: PickerProps<AnyPickerView>) {\n  const classes = useStyles();\n  const isLandscape = useIsLandscape(views, orientation);\n  const wrapperVariant = React.useContext(WrapperVariantContext);\n  const handleDateChange = React.useCallback(\n    (date: MaterialUiPickersDate, isFinish?: boolean | symbol) => {\n      onDateChange(date, wrapperVariant, isFinish);\n    },\n    [onDateChange, wrapperVariant]\n  );\n\n  const toShowToolbar =\n    typeof showToolbar === 'undefined' ? wrapperVariant !== 'desktop' : showToolbar;\n\n  const { openView, nextView, previousView, setOpenView, handleChangeAndOpenNext } = useViews({\n    views,\n    openTo,\n    onChange: handleDateChange,\n    isMobileKeyboardViewOpen,\n    toggleMobileKeyboardView,\n  });\n\n  return (\n    <div\n      className={clsx(classes.container, className, {\n        [classes.containerLandscape]: isLandscape,\n      })}\n    >\n      {toShowToolbar && (\n        <ToolbarComponent\n          {...other}\n          views={views}\n          isLandscape={isLandscape}\n          date={date}\n          onChange={handleDateChange}\n          setOpenView={setOpenView}\n          openView={openView}\n          toolbarTitle={toolbarTitle}\n          toolbarFormat={toolbarFormat}\n          isMobileKeyboardViewOpen={isMobileKeyboardViewOpen}\n          toggleMobileKeyboardView={toggleMobileKeyboardView}\n        />\n      )}\n\n      <div\n        className={clsx(classes.pickerView, {\n          [classes.pickerViewLandscape]: isLandscape,\n        })}\n      >\n        {isMobileKeyboardViewOpen ? (\n          <MobileKeyboardInputView>\n            <KeyboardDateInput\n              {...DateInputProps}\n              ignoreInvalidInputs\n              disableOpenPicker\n              TextFieldProps={MobileKeyboardTextFieldProps}\n            />\n          </MobileKeyboardInputView>\n        ) : (\n          <>\n            {(openView === 'year' || openView === 'month' || openView === 'date') && (\n              <CalendarView\n                date={date}\n                changeView={setOpenView}\n                // @ts-ignore\n                views={views}\n                onChange={handleChangeAndOpenNext}\n                view={openView as DatePickerView}\n                {...other}\n              />\n            )}\n\n            {(openView === 'hours' || openView === 'minutes' || openView === 'seconds') && (\n              <ClockView\n                {...other}\n                date={date}\n                type={openView as 'hours' | 'minutes' | 'seconds'}\n                onDateChange={handleDateChange}\n                onChange={handleChangeAndOpenNext}\n                openNextView={() => setOpenView(nextView)}\n                openPreviousView={() => setOpenView(previousView)}\n                nextViewAvailable={!Boolean(nextView)}\n                previousViewAvailable={!Boolean(previousView)}\n                showViewSwitcher={isTimePickerByViews(views) && wrapperVariant === 'desktop'}\n              />\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nPicker.displayName = 'Picker';\n"]},"metadata":{},"sourceType":"module"}