{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport _objectWithoutProperties from '@babel/runtime/helpers/esm/objectWithoutProperties';\nimport { createElement, memo, Fragment, useRef, useContext, useEffect, useCallback, useState, useMemo, forwardRef } from 'react';\nimport 'prop-types';\nimport { u as useUtils, d as DAY_MARGIN, a as useNow } from './dimensions-91c32fe6.js';\nexport { L as LocalizationProvider, M as MuiPickersContext, u as useUtils } from './dimensions-91c32fe6.js';\nimport clsx from 'clsx';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport '@material-ui/core/IconButton';\nimport '@material-ui/core/Toolbar';\nimport '@material-ui/core/utils';\nimport { P as PickerToolbar, d as ToolbarButton } from './ClockView-1da258a1.js';\nexport { C as ClockView, a as TimePickerView } from './ClockView-1da258a1.js';\nimport { A as ArrowSwitcher } from './ArrowSwitcher-81199363.js';\nimport { makeStyles, fade, styled } from '@material-ui/core/styles';\nimport _slicedToArray from '@babel/runtime/helpers/esm/slicedToArray';\nimport '@babel/runtime/helpers/esm/typeof';\nimport { e as executeInTheNextEventLoopTick, m as mergeRefs } from './utils-ef34bcd7.js';\nimport { c as defaultMinDate, d as defaultMaxDate, C as CalendarHeader, k as isWithinRange, l as isStartOfRange, m as isEndOfRange, n as useMaskedInput, o as useNextMonthDisabled, q as usePreviousMonthDisabled, b as useParsedDate, r as useCalendarState, s as isRangeValid, M as MobileKeyboardInputView, t as defaultReduceAnimations, w as validateDateRange, x as parseRangeInputValue } from './Picker-019ee379.js';\nexport { z as CalendarView, P as Picker, t as defaultReduceAnimations, y as useStyles } from './Picker-019ee379.js';\nexport { DatePicker, DesktopDatePicker, MobileDatePicker, StaticDatePicker } from './DatePicker.js';\nimport '@material-ui/core/useMediaQuery';\nimport '@material-ui/core/Button';\nimport '@material-ui/core/DialogActions';\nimport '@material-ui/core/DialogContent';\nimport '@material-ui/core/Dialog';\nimport { m as makeValidationHook, b as makeWrapperComponent, c as ResponsivePopperWrapper, d as DesktopPopperWrapper, M as MobileWrapper, S as StaticWrapper } from './makePickerWithState-00818f63.js';\nexport { a as makePickerWithState } from './makePickerWithState-00818f63.js';\nimport { W as WrapperVariantContext } from './WrapperVariantContext-a0f5915b.js';\nimport '@material-ui/core/InputAdornment';\nimport 'rifm';\nimport '@material-ui/core/Popover';\nimport '@material-ui/core/Grow';\nimport '@material-ui/core/Paper';\nimport '@material-ui/core/Modal/TrapFocus';\nimport '@material-ui/core/Popper';\nimport './useKeyDown-9f8b37a0.js';\nimport { F as FORCE_FINISH_PICKER, u as usePickerState } from './usePickerState-1c348703.js';\nexport { u as usePickerState } from './usePickerState-1c348703.js';\nimport '@babel/runtime/helpers/esm/classCallCheck';\nimport '@babel/runtime/helpers/esm/createClass';\nimport '@babel/runtime/helpers/esm/possibleConstructorReturn';\nimport '@babel/runtime/helpers/esm/getPrototypeOf';\nimport '@babel/runtime/helpers/esm/inherits';\nexport { C as Clock } from './Clock-72e0463b.js';\nimport '@material-ui/core/ButtonBase';\nimport '@material-ui/core/CircularProgress';\nimport 'react-transition-group';\nimport { areDayPropsEqual, Day } from './Day.js';\nexport { Day } from './Day.js';\nimport { Calendar } from './Calendar.js';\nexport { Calendar } from './Calendar.js';\nimport '@material-ui/core/Fade';\nexport { DesktopTimePicker, MobileTimePicker, StaticTimePicker, TimePicker, getTextFieldAriaText } from './TimePicker.js';\nimport '@material-ui/core/Tab';\nimport '@material-ui/core/Tabs';\nexport { DateTimePicker, DesktopDateTimePicker, MobileDateTimePicker, StaticDateTimePicker } from './DateTimePicker.js';\n\nfunction calculateRangeChange(_ref) {\n  var utils = _ref.utils,\n      range = _ref.range,\n      selectedDate = _ref.newDate,\n      currentlySelectingRangeEnd = _ref.currentlySelectingRangeEnd;\n\n  var _range = _slicedToArray(range, 2),\n      start = _range[0],\n      end = _range[1];\n\n  if (currentlySelectingRangeEnd === 'start') {\n    return Boolean(end) && utils.isAfter(selectedDate, end) ? {\n      nextSelection: 'end',\n      newRange: [selectedDate, null]\n    } : {\n      nextSelection: 'end',\n      newRange: [selectedDate, end]\n    };\n  } else {\n    return Boolean(start) && utils.isBefore(selectedDate, start) ? {\n      nextSelection: 'end',\n      newRange: [selectedDate, null]\n    } : {\n      nextSelection: 'start',\n      newRange: [start, selectedDate]\n    };\n  }\n}\n\nfunction calculateRangePreview(options) {\n  if (!options.newDate) {\n    return [null, null];\n  }\n\n  var _options$range = _slicedToArray(options.range, 2),\n      start = _options$range[0],\n      end = _options$range[1];\n\n  var _calculateRangeChange = calculateRangeChange(options),\n      newRange = _calculateRangeChange.newRange;\n\n  if (!start || !end) {\n    return newRange;\n  }\n\n  var _newRange = _slicedToArray(newRange, 2),\n      previewStart = _newRange[0],\n      previewEnd = _newRange[1]; // prettier-ignore\n\n\n  return options.currentlySelectingRangeEnd === 'end' ? [end, previewEnd] : [previewStart, start];\n}\n\nvar useStyles = makeStyles({\n  penIcon: {\n    position: 'relative',\n    top: 4\n  },\n  dateTextContainer: {\n    display: 'flex'\n  }\n}, {\n  name: 'MuiPickersDatePickerRoot'\n});\n\nvar DateRangePickerToolbar = function DateRangePickerToolbar(_ref) {\n  var _ref$date = _slicedToArray(_ref.date, 2),\n      start = _ref$date[0],\n      end = _ref$date[1],\n      toolbarFormat = _ref.toolbarFormat,\n      isMobileKeyboardViewOpen = _ref.isMobileKeyboardViewOpen,\n      toggleMobileKeyboardView = _ref.toggleMobileKeyboardView,\n      currentlySelectingRangeEnd = _ref.currentlySelectingRangeEnd,\n      setCurrentlySelectingRangeEnd = _ref.setCurrentlySelectingRangeEnd,\n      startText = _ref.startText,\n      endText = _ref.endText,\n      _ref$toolbarTitle = _ref.toolbarTitle,\n      toolbarTitle = _ref$toolbarTitle === void 0 ? 'SELECT DATE RANGE' : _ref$toolbarTitle;\n\n  var utils = useUtils();\n  var classes = useStyles();\n  var startDateValue = start ? utils.formatByString(start, toolbarFormat || utils.formats.shortDate) : startText;\n  var endDateValue = end ? utils.formatByString(end, toolbarFormat || utils.formats.shortDate) : endText;\n  return createElement(PickerToolbar, {\n    toolbarTitle: toolbarTitle,\n    isMobileKeyboardViewOpen: isMobileKeyboardViewOpen,\n    toggleMobileKeyboardView: toggleMobileKeyboardView,\n    isLandscape: false,\n    penIconClassName: classes.penIcon\n  }, createElement(\"div\", {\n    className: classes.dateTextContainer\n  }, createElement(ToolbarButton, {\n    variant: Boolean(start) ? 'h5' : 'h6',\n    value: startDateValue,\n    selected: currentlySelectingRangeEnd === 'start',\n    onClick: function onClick() {\n      return setCurrentlySelectingRangeEnd('start');\n    }\n  }), createElement(Typography, {\n    variant: \"h5\"\n  }, \"\\xA0\", 'â€“', \"\\xA0\"), createElement(ToolbarButton, {\n    variant: Boolean(end) ? 'h5' : 'h6',\n    value: endDateValue,\n    selected: currentlySelectingRangeEnd === 'end',\n    onClick: function onClick() {\n      return setCurrentlySelectingRangeEnd('end');\n    }\n  })));\n};\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar endBorderStyle = {\n  borderTopRightRadius: '50%',\n  borderBottomRightRadius: '50%'\n};\nvar startBorderStyle = {\n  borderTopLeftRadius: '50%',\n  borderBottomLeftRadius: '50%'\n};\nvar useStyles$1 = makeStyles(function (theme) {\n  return {\n    rangeIntervalDay: {\n      '&:first-child $rangeIntervalDayPreview': _objectSpread({}, startBorderStyle, {\n        borderLeftColor: theme.palette.divider\n      }),\n      '&:last-child $rangeIntervalDayPreview': _objectSpread({}, endBorderStyle, {\n        borderRightColor: theme.palette.divider\n      })\n    },\n    rangeIntervalDayHighlight: {\n      borderRadius: 0,\n      color: theme.palette.primary.contrastText,\n      backgroundColor: fade(theme.palette.primary.light, 0.6),\n      '&:first-child': startBorderStyle,\n      '&:last-child': endBorderStyle\n    },\n    rangeIntervalDayHighlightStart: _objectSpread({}, startBorderStyle, {\n      paddingLeft: 0,\n      marginLeft: DAY_MARGIN / 2\n    }),\n    rangeIntervalDayHighlightEnd: _objectSpread({}, endBorderStyle, {\n      paddingRight: 0,\n      marginRight: DAY_MARGIN / 2\n    }),\n    day: {\n      // Required to overlap preview border\n      transform: 'scale(1.1)',\n      '& > *': {\n        transform: 'scale(0.9)'\n      }\n    },\n    dayOutsideRangeInterval: {\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.grey[500])\n      }\n    },\n    dayInsideRangeInterval: {\n      color: theme.palette.getContrastText(fade(theme.palette.primary.light, 0.6))\n    },\n    notSelectedDate: {\n      backgroundColor: 'transparent'\n    },\n    rangeIntervalPreview: {\n      // replace default day component margin with transparent border to avoid jumping on preview\n      border: '2px solid transparent'\n    },\n    rangeIntervalDayPreview: {\n      borderRadius: 0,\n      border: \"2px dashed \".concat(theme.palette.divider),\n      borderLeftColor: 'transparent',\n      borderRightColor: 'transparent',\n      '&$rangeIntervalDayPreviewStart': _objectSpread({\n        borderLeftColor: theme.palette.divider\n      }, startBorderStyle),\n      '&$rangeIntervalDayPreviewEnd': _objectSpread({\n        borderRightColor: theme.palette.divider\n      }, endBorderStyle)\n    },\n    rangeIntervalDayPreviewStart: {},\n    rangeIntervalDayPreviewEnd: {}\n  };\n}, {\n  name: 'MuiPickersDateRangeDay'\n});\n\nvar PureDateRangeDay = function PureDateRangeDay(_ref) {\n  var day = _ref.day,\n      className = _ref.className,\n      selected = _ref.selected,\n      isPreviewing = _ref.isPreviewing,\n      isStartOfPreviewing = _ref.isStartOfPreviewing,\n      isEndOfPreviewing = _ref.isEndOfPreviewing,\n      isHighlighting = _ref.isHighlighting,\n      isEndOfHighlighting = _ref.isEndOfHighlighting,\n      isStartOfHighlighting = _ref.isStartOfHighlighting,\n      inCurrentMonth = _ref.inCurrentMonth,\n      other = _objectWithoutProperties(_ref, [\"day\", \"className\", \"selected\", \"isPreviewing\", \"isStartOfPreviewing\", \"isEndOfPreviewing\", \"isHighlighting\", \"isEndOfHighlighting\", \"isStartOfHighlighting\", \"inCurrentMonth\"]);\n\n  var utils = useUtils();\n  var classes = useStyles$1();\n  var isEndOfMonth = utils.isSameDay(day, utils.endOfMonth(day));\n  var isStartOfMonth = utils.isSameDay(day, utils.startOfMonth(day));\n  var shouldRenderHighlight = isHighlighting && inCurrentMonth;\n  var shouldRenderPreview = isPreviewing && inCurrentMonth;\n  return createElement(\"div\", {\n    \"data-mui-test\": shouldRenderHighlight ? 'DateRangeHighlight' : undefined,\n    className: clsx(classes.rangeIntervalDay, (isEndOfHighlighting || isEndOfMonth) && classes.rangeIntervalDayHighlightEnd, (isStartOfHighlighting || isStartOfMonth) && classes.rangeIntervalDayHighlightStart, shouldRenderHighlight && classes.rangeIntervalDayHighlight)\n  }, createElement(\"div\", {\n    \"data-mui-test\": shouldRenderPreview ? 'DateRangePreview' : undefined,\n    className: clsx(classes.rangeIntervalPreview, (isEndOfPreviewing || isEndOfMonth) && classes.rangeIntervalDayPreviewEnd, (isStartOfPreviewing || isStartOfMonth) && classes.rangeIntervalDayPreviewStart, shouldRenderPreview && classes.rangeIntervalDayPreview)\n  }, createElement(Day, _extends({\n    allowKeyboardControl: false,\n    disableMargin: true\n  }, other, {\n    day: day,\n    selected: selected,\n    inCurrentMonth: inCurrentMonth,\n    \"data-mui-test\": \"DateRangeDay\",\n    className: clsx(classes.day, className, !selected && [classes.notSelectedDate, isHighlighting && classes.dayInsideRangeInterval], !isHighlighting && classes.dayOutsideRangeInterval)\n  }))));\n};\n\nPureDateRangeDay.displayName = 'DateRangeDay';\nvar DateRangeDay = memo(PureDateRangeDay, function (prevProps, nextProps) {\n  return prevProps.isHighlighting === nextProps.isHighlighting && prevProps.isEndOfHighlighting === nextProps.isEndOfHighlighting && prevProps.isStartOfHighlighting === nextProps.isStartOfHighlighting && prevProps.isPreviewing === nextProps.isPreviewing && prevProps.isEndOfPreviewing === nextProps.isEndOfPreviewing && prevProps.isStartOfPreviewing === nextProps.isStartOfPreviewing && areDayPropsEqual(prevProps, nextProps);\n});\nvar onlyDateView = ['date'];\n\nvar DateRangePickerViewMobile = function DateRangePickerViewMobile(_ref) {\n  var date = _ref.date,\n      changeMonth = _ref.changeMonth,\n      leftArrowButtonProps = _ref.leftArrowButtonProps,\n      leftArrowButtonText = _ref.leftArrowButtonText,\n      leftArrowIcon = _ref.leftArrowIcon,\n      rightArrowButtonProps = _ref.rightArrowButtonProps,\n      rightArrowButtonText = _ref.rightArrowButtonText,\n      rightArrowIcon = _ref.rightArrowIcon,\n      onChange = _ref.onChange,\n      __minDate = _ref.minDate,\n      __maxDate = _ref.maxDate,\n      other = _objectWithoutProperties(_ref, [\"date\", \"changeMonth\", \"leftArrowButtonProps\", \"leftArrowButtonText\", \"leftArrowIcon\", \"rightArrowButtonProps\", \"rightArrowButtonText\", \"rightArrowIcon\", \"onChange\", \"minDate\", \"maxDate\"]);\n\n  var utils = useUtils();\n\n  var minDate = __minDate || utils.date(defaultMinDate);\n\n  var maxDate = __maxDate || utils.date(defaultMaxDate);\n\n  return createElement(Fragment, null, createElement(CalendarHeader, _extends({\n    view: \"date\",\n    views: onlyDateView,\n    changeView: function changeView() {\n      return {};\n    },\n    onMonthChange: changeMonth,\n    leftArrowButtonProps: leftArrowButtonProps,\n    leftArrowButtonText: leftArrowButtonText,\n    leftArrowIcon: leftArrowIcon,\n    rightArrowButtonProps: rightArrowButtonProps,\n    rightArrowButtonText: rightArrowButtonText,\n    rightArrowIcon: rightArrowIcon,\n    minDate: minDate,\n    maxDate: maxDate\n  }, other)), createElement(Calendar, _extends({}, other, {\n    date: date,\n    onChange: onChange,\n    renderDay: function renderDay(day, _, DayProps) {\n      return createElement(DateRangeDay, _extends({\n        isPreviewing: false,\n        isStartOfPreviewing: false,\n        isEndOfPreviewing: false,\n        isHighlighting: isWithinRange(utils, day, date),\n        isStartOfHighlighting: isStartOfRange(utils, day, date),\n        isEndOfHighlighting: isEndOfRange(utils, day, date)\n      }, DayProps));\n    }\n  })));\n};\n\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys$1(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$1(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar useStyles$2 = makeStyles(function (theme) {\n  return {\n    rangeInputsContainer: _defineProperty({\n      display: 'flex',\n      alignItems: 'baseline'\n    }, theme.breakpoints.down('xs'), {\n      flexDirection: 'column',\n      alignItems: 'center'\n    }),\n    toLabelDelimiter: _defineProperty({\n      margin: '8px 0'\n    }, theme.breakpoints.up('sm'), {\n      margin: '0 16px'\n    })\n  };\n}, {\n  name: 'MuiPickersDateRangePickerInput'\n});\n\nvar DateRangePickerInput = function DateRangePickerInput(_ref) {\n  var containerRef = _ref.containerRef,\n      currentlySelectingRangeEnd = _ref.currentlySelectingRangeEnd,\n      disableOpenPicker = _ref.disableOpenPicker,\n      endText = _ref.endText,\n      forwardedRef = _ref.forwardedRef,\n      onBlur = _ref.onBlur,\n      onChange = _ref.onChange,\n      open = _ref.open,\n      openPicker = _ref.openPicker,\n      rawValue = _ref.rawValue,\n      readOnly = _ref.readOnly,\n      renderInput = _ref.renderInput,\n      setCurrentlySelectingRangeEnd = _ref.setCurrentlySelectingRangeEnd,\n      startText = _ref.startText,\n      TextFieldProps = _ref.TextFieldProps,\n      _ref$rawValue = _slicedToArray(_ref.rawValue, 2),\n      start = _ref$rawValue[0],\n      end = _ref$rawValue[1],\n      _ref$validationError = _slicedToArray(_ref.validationError, 2),\n      startValidationError = _ref$validationError[0],\n      endValidationError = _ref$validationError[1],\n      other = _objectWithoutProperties(_ref, [\"containerRef\", \"currentlySelectingRangeEnd\", \"disableOpenPicker\", \"endText\", \"forwardedRef\", \"onBlur\", \"onChange\", \"open\", \"openPicker\", \"rawValue\", \"readOnly\", \"renderInput\", \"setCurrentlySelectingRangeEnd\", \"startText\", \"TextFieldProps\", \"rawValue\", \"validationError\"]);\n\n  var utils = useUtils();\n  var classes = useStyles$2();\n  var startRef = useRef(null);\n  var endRef = useRef(null);\n  var wrapperVariant = useContext(WrapperVariantContext);\n  useEffect(function () {\n    if (!open) {\n      return;\n    }\n\n    if (currentlySelectingRangeEnd === 'start') {\n      var _startRef$current;\n\n      (_startRef$current = startRef.current) === null || _startRef$current === void 0 ? void 0 : _startRef$current.focus();\n    } else if (currentlySelectingRangeEnd === 'end') {\n      var _endRef$current;\n\n      (_endRef$current = endRef.current) === null || _endRef$current === void 0 ? void 0 : _endRef$current.focus();\n    }\n  }, [currentlySelectingRangeEnd, open]); // TODO: rethink this approach. We do not need to wait for calendar to be updated to rerender input (looks like freezing)\n  // TODO: so simply break 1 react's commit phase in 2 (first for input and second for calendars) by executing onChange in the next tick\n\n  var lazyHandleChangeCallback = useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return executeInTheNextEventLoopTick(function () {\n      return onChange.apply(void 0, args);\n    });\n  }, [onChange]);\n\n  var handleStartChange = function handleStartChange(date, inputString) {\n    lazyHandleChangeCallback([date, utils.date(end)], inputString);\n  };\n\n  var handleEndChange = function handleEndChange(date, inputString) {\n    lazyHandleChangeCallback([utils.date(start), date], inputString);\n  };\n\n  var openRangeStartSelection = function openRangeStartSelection() {\n    if (setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('start');\n    }\n\n    if (!disableOpenPicker) {\n      openPicker();\n    }\n  };\n\n  var openRangeEndSelection = function openRangeEndSelection() {\n    if (setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('end');\n    }\n\n    if (!disableOpenPicker) {\n      openPicker();\n    }\n  };\n\n  var openOnFocus = wrapperVariant === 'desktop';\n  var startInputProps = useMaskedInput(_objectSpread$1({}, other, {\n    readOnly: readOnly,\n    rawValue: start,\n    onChange: handleStartChange,\n    label: startText,\n    validationError: startValidationError !== null,\n    TextFieldProps: _objectSpread$1({}, TextFieldProps, {\n      ref: startRef,\n      variant: 'outlined',\n      focused: open && currentlySelectingRangeEnd === 'start',\n      onClick: !openOnFocus ? openRangeStartSelection : undefined,\n      onFocus: openOnFocus ? openRangeStartSelection : undefined\n    })\n  }));\n  var endInputProps = useMaskedInput(_objectSpread$1({}, other, {\n    readOnly: readOnly,\n    label: endText,\n    rawValue: end,\n    onChange: handleEndChange,\n    validationError: endValidationError !== null,\n    TextFieldProps: _objectSpread$1({}, TextFieldProps, {\n      ref: endRef,\n      variant: 'outlined',\n      focused: open && currentlySelectingRangeEnd === 'end',\n      onClick: !openOnFocus ? openRangeEndSelection : undefined,\n      onFocus: openOnFocus ? openRangeEndSelection : undefined\n    })\n  }));\n  return createElement(\"div\", {\n    onBlur: onBlur,\n    className: classes.rangeInputsContainer,\n    ref: mergeRefs([containerRef, forwardedRef])\n  }, renderInput(startInputProps, endInputProps));\n};\n\nvar useStyles$3 = makeStyles(function (theme) {\n  return {\n    dateRangeContainer: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    rangeCalendarContainer: {\n      '&:not(:last-child)': {\n        borderRight: \"2px solid \".concat(theme.palette.divider)\n      }\n    },\n    calendar: {\n      minWidth: 312,\n      minHeight: 288\n    },\n    arrowSwitcher: {\n      padding: '16px 16px 8px 16px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    }\n  };\n}, {\n  name: 'MuiPickersDesktopDateRangeCalendar'\n});\n\nfunction getCalendarsArray(calendars) {\n  switch (calendars) {\n    case 1:\n      return [0];\n\n    case 2:\n      return [0, 0];\n\n    case 3:\n      return [0, 0, 0];\n    // this will not work in IE11, but allows to support any amount of calendars\n\n    default:\n      return new Array(calendars).fill(0);\n  }\n}\n\nvar DateRangePickerViewDesktop = function DateRangePickerViewDesktop(_ref) {\n  var date = _ref.date,\n      _ref$calendars = _ref.calendars,\n      calendars = _ref$calendars === void 0 ? 2 : _ref$calendars,\n      changeMonth = _ref.changeMonth,\n      leftArrowButtonProps = _ref.leftArrowButtonProps,\n      leftArrowButtonText = _ref.leftArrowButtonText,\n      leftArrowIcon = _ref.leftArrowIcon,\n      rightArrowButtonProps = _ref.rightArrowButtonProps,\n      rightArrowButtonText = _ref.rightArrowButtonText,\n      rightArrowIcon = _ref.rightArrowIcon,\n      onChange = _ref.onChange,\n      disableFuture = _ref.disableFuture,\n      disablePast = _ref.disablePast,\n      __minDate = _ref.minDate,\n      __maxDate = _ref.maxDate,\n      currentlySelectingRangeEnd = _ref.currentlySelectingRangeEnd,\n      currentMonth = _ref.currentMonth,\n      other = _objectWithoutProperties(_ref, [\"date\", \"calendars\", \"changeMonth\", \"leftArrowButtonProps\", \"leftArrowButtonText\", \"leftArrowIcon\", \"rightArrowButtonProps\", \"rightArrowButtonText\", \"rightArrowIcon\", \"onChange\", \"disableFuture\", \"disablePast\", \"minDate\", \"maxDate\", \"currentlySelectingRangeEnd\", \"currentMonth\"]);\n\n  var utils = useUtils();\n  var classes = useStyles$3();\n\n  var minDate = __minDate || utils.date(defaultMinDate);\n\n  var maxDate = __maxDate || utils.date(defaultMaxDate);\n\n  var _React$useState = useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      rangePreviewDay = _React$useState2[0],\n      setRangePreviewDay = _React$useState2[1];\n\n  var isNextMonthDisabled = useNextMonthDisabled(currentMonth, {\n    disableFuture: disableFuture,\n    maxDate: maxDate\n  });\n  var isPreviousMonthDisabled = usePreviousMonthDisabled(currentMonth, {\n    disablePast: disablePast,\n    minDate: minDate\n  });\n  var previewingRange = calculateRangePreview({\n    utils: utils,\n    range: date,\n    newDate: rangePreviewDay,\n    currentlySelectingRangeEnd: currentlySelectingRangeEnd\n  });\n  var handleDayChange = useCallback(function (day) {\n    setRangePreviewDay(null);\n    onChange(day);\n  }, [onChange]);\n\n  var handlePreviewDayChange = function handlePreviewDayChange(newPreviewRequest) {\n    if (!isWithinRange(utils, newPreviewRequest, date)) {\n      setRangePreviewDay(newPreviewRequest);\n    } else {\n      setRangePreviewDay(null);\n    }\n  };\n\n  var CalendarTransitionProps = useMemo(function () {\n    return {\n      onMouseLeave: function onMouseLeave() {\n        return setRangePreviewDay(null);\n      }\n    };\n  }, []);\n  var selectNextMonth = useCallback(function () {\n    changeMonth(utils.getNextMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n  var selectPreviousMonth = useCallback(function () {\n    changeMonth(utils.getPreviousMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n  return createElement(\"div\", {\n    className: classes.dateRangeContainer\n  }, getCalendarsArray(calendars).map(function (_, index) {\n    var monthOnIteration = utils.setMonth(currentMonth, utils.getMonth(currentMonth) + index);\n    return createElement(\"div\", {\n      key: index,\n      className: classes.rangeCalendarContainer\n    }, createElement(ArrowSwitcher, {\n      className: classes.arrowSwitcher,\n      onLeftClick: selectPreviousMonth,\n      onRightClick: selectNextMonth,\n      isLeftHidden: index !== 0,\n      isRightHidden: index !== calendars - 1,\n      isLeftDisabled: isPreviousMonthDisabled,\n      isRightDisabled: isNextMonthDisabled,\n      leftArrowButtonProps: leftArrowButtonProps,\n      leftArrowButtonText: leftArrowButtonText,\n      leftArrowIcon: leftArrowIcon,\n      rightArrowButtonProps: rightArrowButtonProps,\n      rightArrowButtonText: rightArrowButtonText,\n      rightArrowIcon: rightArrowIcon,\n      text: utils.format(monthOnIteration, 'monthAndYear')\n    }), createElement(Calendar, _extends({}, other, {\n      key: index,\n      date: date,\n      className: classes.calendar,\n      onChange: handleDayChange,\n      currentMonth: monthOnIteration,\n      TransitionProps: CalendarTransitionProps,\n      renderDay: function renderDay(day, _, DayProps) {\n        return createElement(DateRangeDay, _extends({\n          isPreviewing: isWithinRange(utils, day, previewingRange),\n          isStartOfPreviewing: isStartOfRange(utils, day, previewingRange),\n          isEndOfPreviewing: isEndOfRange(utils, day, previewingRange),\n          isHighlighting: isWithinRange(utils, day, date),\n          isStartOfHighlighting: isStartOfRange(utils, day, date),\n          isEndOfHighlighting: isEndOfRange(utils, day, date),\n          onMouseEnter: function onMouseEnter() {\n            return handlePreviewDayChange(day);\n          }\n        }, DayProps));\n      }\n    })));\n  }));\n};\n\nfunction ownKeys$2(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys$2(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$2(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar DateRangePickerView = function DateRangePickerView(_ref) {\n  var open = _ref.open,\n      _ref$calendars = _ref.calendars,\n      calendars = _ref$calendars === void 0 ? 2 : _ref$calendars,\n      currentlySelectingRangeEnd = _ref.currentlySelectingRangeEnd,\n      date = _ref.date,\n      _ref$disableAutoMonth = _ref.disableAutoMonthSwitching,\n      disableAutoMonthSwitching = _ref$disableAutoMonth === void 0 ? false : _ref$disableAutoMonth,\n      disableFuture = _ref.disableFuture,\n      disableHighlightToday = _ref.disableHighlightToday,\n      disablePast = _ref.disablePast,\n      _ref$maxDate = _ref.maxDate,\n      unparsedMaxDate = _ref$maxDate === void 0 ? new Date('2100-01-01') : _ref$maxDate,\n      _ref$minDate = _ref.minDate,\n      unparsedMinDate = _ref$minDate === void 0 ? new Date('1900-01-01') : _ref$minDate,\n      onDateChange = _ref.onDateChange,\n      onMonthChange = _ref.onMonthChange,\n      _ref$reduceAnimations = _ref.reduceAnimations,\n      reduceAnimations = _ref$reduceAnimations === void 0 ? defaultReduceAnimations : _ref$reduceAnimations,\n      setCurrentlySelectingRangeEnd = _ref.setCurrentlySelectingRangeEnd,\n      shouldDisableDate = _ref.shouldDisableDate,\n      toggleMobileKeyboardView = _ref.toggleMobileKeyboardView,\n      isMobileKeyboardViewOpen = _ref.isMobileKeyboardViewOpen,\n      showToolbar = _ref.showToolbar,\n      startText = _ref.startText,\n      endText = _ref.endText,\n      className = _ref.className,\n      DateInputProps = _ref.DateInputProps,\n      other = _objectWithoutProperties(_ref, [\"open\", \"calendars\", \"currentlySelectingRangeEnd\", \"date\", \"disableAutoMonthSwitching\", \"disableFuture\", \"disableHighlightToday\", \"disablePast\", \"maxDate\", \"minDate\", \"onDateChange\", \"onMonthChange\", \"reduceAnimations\", \"setCurrentlySelectingRangeEnd\", \"shouldDisableDate\", \"toggleMobileKeyboardView\", \"isMobileKeyboardViewOpen\", \"showToolbar\", \"startText\", \"endText\", \"className\", \"DateInputProps\"]);\n\n  var now = useNow();\n  var utils = useUtils();\n  var wrapperVariant = useContext(WrapperVariantContext);\n  var minDate = useParsedDate(unparsedMinDate);\n  var maxDate = useParsedDate(unparsedMaxDate);\n\n  var _date = _slicedToArray(date, 2),\n      start = _date[0],\n      end = _date[1];\n\n  var _useCalendarState = useCalendarState({\n    date: start || end || now,\n    minDate: minDate,\n    maxDate: maxDate,\n    reduceAnimations: reduceAnimations,\n    disablePast: disablePast,\n    disableFuture: disableFuture,\n    onMonthChange: onMonthChange,\n    shouldDisableDate: shouldDisableDate,\n    disableSwitchToMonthOnDayFocus: true\n  }),\n      changeMonth = _useCalendarState.changeMonth,\n      calendarState = _useCalendarState.calendarState,\n      isDateDisabled = _useCalendarState.isDateDisabled,\n      onMonthSwitchingAnimationEnd = _useCalendarState.onMonthSwitchingAnimationEnd,\n      changeFocusedDay = _useCalendarState.changeFocusedDay;\n\n  var toShowToolbar = showToolbar !== null && showToolbar !== void 0 ? showToolbar : wrapperVariant !== 'desktop';\n\n  var scrollToDayIfNeeded = function scrollToDayIfNeeded(day) {\n    if (!utils.isValid(day) || isDateDisabled(day)) {\n      return;\n    }\n\n    var displayingMonthRange = wrapperVariant === 'mobile' ? 0 : calendars - 1;\n    var currentMonthNumber = utils.getMonth(calendarState.currentMonth);\n    var requestedMonthNumber = utils.getMonth(day);\n\n    if (!utils.isSameYear(calendarState.currentMonth, day) || requestedMonthNumber < currentMonthNumber || requestedMonthNumber > currentMonthNumber + displayingMonthRange) {\n      var newMonth = currentlySelectingRangeEnd === 'start' ? start : // If need to focus end, scroll to the state when \"end\" is displaying in the last calendar\n      utils.addMonths(end, -displayingMonthRange);\n      changeMonth(newMonth);\n    }\n  };\n\n  useEffect(function () {\n    if (disableAutoMonthSwitching || !open) {\n      return;\n    }\n\n    if (currentlySelectingRangeEnd === 'start' && start === null || currentlySelectingRangeEnd === 'end' && end === null) {\n      return;\n    }\n\n    scrollToDayIfNeeded(currentlySelectingRangeEnd === 'start' ? start : end);\n  }, [currentlySelectingRangeEnd, date]); // eslint-disable-line\n\n  var handleChange = useCallback(function (newDate) {\n    var _calculateRangeChange = calculateRangeChange({\n      newDate: newDate,\n      utils: utils,\n      range: date,\n      currentlySelectingRangeEnd: currentlySelectingRangeEnd\n    }),\n        nextSelection = _calculateRangeChange.nextSelection,\n        newRange = _calculateRangeChange.newRange;\n\n    setCurrentlySelectingRangeEnd(nextSelection);\n    var isFullRangeSelected = currentlySelectingRangeEnd === 'end' && isRangeValid(utils, newRange);\n    onDateChange(newRange, wrapperVariant, isFullRangeSelected ? FORCE_FINISH_PICKER : true);\n  }, [currentlySelectingRangeEnd, date, onDateChange, setCurrentlySelectingRangeEnd, utils, wrapperVariant]);\n\n  var renderView = function renderView() {\n    var sharedCalendarProps = _objectSpread$2({\n      date: date,\n      isDateDisabled: isDateDisabled,\n      changeFocusedDay: changeFocusedDay,\n      onChange: handleChange,\n      reduceAnimations: reduceAnimations,\n      disableHighlightToday: disableHighlightToday,\n      onMonthSwitchingAnimationEnd: onMonthSwitchingAnimationEnd,\n      changeMonth: changeMonth,\n      currentlySelectingRangeEnd: currentlySelectingRangeEnd,\n      disableFuture: disableFuture,\n      disablePast: disablePast,\n      minDate: minDate,\n      maxDate: maxDate\n    }, calendarState, {}, other);\n\n    switch (wrapperVariant) {\n      case 'desktop':\n        {\n          return createElement(DateRangePickerViewDesktop, _extends({\n            calendars: calendars\n          }, sharedCalendarProps));\n        }\n\n      default:\n        {\n          return createElement(DateRangePickerViewMobile, sharedCalendarProps);\n        }\n    }\n  };\n\n  return createElement(\"div\", {\n    className: className\n  }, toShowToolbar && createElement(DateRangePickerToolbar, {\n    date: date,\n    isMobileKeyboardViewOpen: isMobileKeyboardViewOpen,\n    toggleMobileKeyboardView: toggleMobileKeyboardView,\n    currentlySelectingRangeEnd: currentlySelectingRangeEnd,\n    setCurrentlySelectingRangeEnd: setCurrentlySelectingRangeEnd,\n    startText: startText,\n    endText: endText\n  }), isMobileKeyboardViewOpen ? createElement(MobileKeyboardInputView, null, createElement(DateRangePickerInput, _extends({\n    disableOpenPicker: true,\n    ignoreInvalidInputs: true\n  }, DateInputProps))) : renderView());\n};\n\nvar DateRangeDelimiter = styled(Typography)({\n  margin: '0 16px'\n});\n\nfunction ownKeys$3(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$3(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys$3(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$3(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar useDateRangeValidation = makeValidationHook(validateDateRange, {\n  defaultValidationError: [null, null],\n  isSameError: function isSameError(a, b) {\n    return a[1] === b[1] && a[0] === b[0];\n  }\n});\n\nfunction makeRangePicker(Wrapper) {\n  var WrapperComponent = makeWrapperComponent(Wrapper, {\n    KeyboardDateInputComponent: DateRangePickerInput,\n    PureDateInputComponent: DateRangePickerInput\n  });\n\n  function RangePickerWithStateAndWrapper(_ref) {\n    var calendars = _ref.calendars,\n        value = _ref.value,\n        onChange = _ref.onChange,\n        _ref$mask = _ref.mask,\n        mask = _ref$mask === void 0 ? '__/__/____' : _ref$mask,\n        _ref$startText = _ref.startText,\n        startText = _ref$startText === void 0 ? 'Start' : _ref$startText,\n        _ref$endText = _ref.endText,\n        endText = _ref$endText === void 0 ? 'End' : _ref$endText,\n        passedInputFormat = _ref.inputFormat,\n        _ref$minDate = _ref.minDate,\n        __minDate = _ref$minDate === void 0 ? defaultMinDate : _ref$minDate,\n        _ref$maxDate = _ref.maxDate,\n        __maxDate = _ref$maxDate === void 0 ? defaultMaxDate : _ref$maxDate,\n        other = _objectWithoutProperties(_ref, [\"calendars\", \"value\", \"onChange\", \"mask\", \"startText\", \"endText\", \"inputFormat\", \"minDate\", \"maxDate\"]);\n\n    var utils = useUtils();\n    var minDate = useParsedDate(__minDate);\n    var maxDate = useParsedDate(__maxDate);\n\n    var _React$useState = useState('start'),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        currentlySelectingRangeEnd = _React$useState2[0],\n        setCurrentlySelectingRangeEnd = _React$useState2[1];\n\n    var pickerStateProps = _objectSpread$3({}, other, {\n      value: value,\n      onChange: onChange,\n      inputFormat: passedInputFormat || utils.formats.keyboardDate\n    });\n\n    var restProps = _objectSpread$3({}, other, {\n      minDate: minDate,\n      maxDate: maxDate\n    });\n\n    var _usePickerState = usePickerState(pickerStateProps, {\n      parseInput: parseRangeInputValue,\n      areValuesEqual: function areValuesEqual(a, b) {\n        return utils.isEqual(a[0], b[0]) && utils.isEqual(a[1], b[1]);\n      },\n      emptyValue: [null, null]\n    }),\n        pickerProps = _usePickerState.pickerProps,\n        inputProps = _usePickerState.inputProps,\n        wrapperProps = _usePickerState.wrapperProps;\n\n    var validationError = useDateRangeValidation(value, restProps);\n\n    var DateInputProps = _objectSpread$3({}, inputProps, {}, restProps, {\n      currentlySelectingRangeEnd: currentlySelectingRangeEnd,\n      setCurrentlySelectingRangeEnd: setCurrentlySelectingRangeEnd,\n      startText: startText,\n      endText: endText,\n      mask: mask,\n      validationError: validationError\n    });\n\n    return createElement(WrapperComponent, _extends({\n      wrapperProps: wrapperProps,\n      DateInputProps: DateInputProps\n    }, restProps), createElement(DateRangePickerView, _extends({\n      open: wrapperProps.open,\n      DateInputProps: DateInputProps,\n      calendars: calendars,\n      currentlySelectingRangeEnd: currentlySelectingRangeEnd,\n      setCurrentlySelectingRangeEnd: setCurrentlySelectingRangeEnd,\n      startText: startText,\n      endText: endText\n    }, pickerProps, restProps)));\n  }\n\n  return forwardRef(function (props, ref) {\n    return createElement(RangePickerWithStateAndWrapper, _extends({}, props, {\n      forwardedRef: ref\n    }));\n  });\n} // TODO replace with new export type syntax\n\n\nvar DateRangePicker = makeRangePicker(ResponsivePopperWrapper);\nvar DesktopDateRangePicker = makeRangePicker(DesktopPopperWrapper);\nvar MobileDateRangePicker = makeRangePicker(MobileWrapper);\nvar StaticDateRangePicker = makeRangePicker(StaticWrapper);\nexport { DateRangeDelimiter, DateRangePicker, DesktopDateRangePicker, MobileDateRangePicker, StaticDateRangePicker, makeRangePicker, useDateRangeValidation };","map":{"version":3,"sources":["../src/DateRangePicker/date-range-manager.ts","../src/DateRangePicker/DateRangePickerToolbar.tsx","../src/DateRangePicker/DateRangePickerDay.tsx","../src/DateRangePicker/DateRangePickerViewMobile.tsx","../src/DateRangePicker/DateRangePickerInput.tsx","../src/DateRangePicker/DateRangePickerViewDesktop.tsx","../src/DateRangePicker/DateRangePickerView.tsx","../src/DateRangePicker/DateRangeDelimiter.tsx","../src/DateRangePicker/DateRangePicker.tsx"],"names":["utils","range","newDate","selectedDate","currentlySelectingRangeEnd","start","end","nextSelection","newRange","options","calculateRangeChange","previewStart","previewEnd","useStyles","makeStyles","penIcon","position","top","dateTextContainer","display","name","DateRangePickerToolbar","date","toolbarFormat","isMobileKeyboardViewOpen","toggleMobileKeyboardView","setCurrentlySelectingRangeEnd","startText","endText","toolbarTitle","useUtils","classes","startDateValue","endDateValue","React.createElement","Boolean","endBorderStyle","borderTopRightRadius","borderBottomRightRadius","startBorderStyle","borderTopLeftRadius","borderBottomLeftRadius","rangeIntervalDay","borderLeftColor","theme","divider","borderRightColor","rangeIntervalDayHighlight","borderRadius","color","backgroundColor","fade","rangeIntervalDayHighlightStart","paddingLeft","marginLeft","DAY_MARGIN","rangeIntervalDayHighlightEnd","paddingRight","marginRight","day","transform","dayOutsideRangeInterval","border","dayInsideRangeInterval","notSelectedDate","rangeIntervalPreview","rangeIntervalDayPreview","rangeIntervalDayPreviewStart","rangeIntervalDayPreviewEnd","PureDateRangeDay","className","selected","isPreviewing","isStartOfPreviewing","isEndOfPreviewing","isHighlighting","isEndOfHighlighting","isStartOfHighlighting","inCurrentMonth","other","isEndOfMonth","isStartOfMonth","shouldRenderHighlight","shouldRenderPreview","clsx","DateRangeDay","prevProps","nextProps","areDayPropsEqual","onlyDateView","DateRangePickerViewMobile","changeMonth","leftArrowButtonProps","leftArrowButtonText","leftArrowIcon","rightArrowButtonProps","rightArrowButtonText","rightArrowIcon","onChange","minDate","__minDate","maxDate","__maxDate","isWithinRange","isStartOfRange","isEndOfRange","rangeInputsContainer","alignItems","flexDirection","toLabelDelimiter","margin","DateRangePickerInput","containerRef","disableOpenPicker","forwardedRef","onBlur","open","openPicker","rawValue","readOnly","renderInput","TextFieldProps","validationError","startValidationError","endValidationError","startRef","React","endRef","wrapperVariant","lazyHandleChangeCallback","args","executeInTheNextEventLoopTick","handleStartChange","handleEndChange","openRangeStartSelection","openRangeEndSelection","openOnFocus","startInputProps","useMaskedInput","label","ref","variant","focused","onClick","onFocus","undefined","endInputProps","mergeRefs","dateRangeContainer","rangeCalendarContainer","borderRight","calendar","minWidth","minHeight","arrowSwitcher","padding","justifyContent","DateRangePickerViewDesktop","calendars","disableFuture","disablePast","currentMonth","rangePreviewDay","setRangePreviewDay","isNextMonthDisabled","useNextMonthDisabled","isPreviousMonthDisabled","usePreviousMonthDisabled","previewingRange","calculateRangePreview","handleDayChange","handlePreviewDayChange","CalendarTransitionProps","onMouseLeave","selectNextMonth","selectPreviousMonth","monthOnIteration","index","DateRangePickerView","disableAutoMonthSwitching","disableHighlightToday","unparsedMaxDate","unparsedMinDate","onDateChange","onMonthChange","reduceAnimations","defaultReduceAnimations","shouldDisableDate","showToolbar","DateInputProps","now","useNow","useParsedDate","calendarState","isDateDisabled","onMonthSwitchingAnimationEnd","changeFocusedDay","useCalendarState","disableSwitchToMonthOnDayFocus","toShowToolbar","scrollToDayIfNeeded","displayingMonthRange","currentMonthNumber","requestedMonthNumber","newMonth","handleChange","isFullRangeSelected","isRangeValid","renderView","sharedCalendarProps","DateRangeDelimiter","useDateRangeValidation","makeValidationHook","defaultValidationError","isSameError","a","b","WrapperComponent","makeWrapperComponent","KeyboardDateInputComponent","PureDateInputComponent","value","mask","inputFormat","passedInputFormat","defaultMinDate","defaultMaxDate","pickerStateProps","keyboardDate","restProps","pickerProps","inputProps","wrapperProps","usePickerState","parseInput","areValuesEqual","emptyValue","DateRangePicker","makeRangePicker","DesktopDateRangePicker","MobileDateRangePicker","StaticDateRangePicker"],"mappings":"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","sourcesContent":["import { DateRange } from './DateRangePicker';\nimport { MaterialUiPickersDate } from '../typings/date';\nimport { MuiPickersAdapter } from '../_shared/hooks/useUtils';\n\ninterface CalculateRangeChangeOptions {\n  utils: MuiPickersAdapter;\n  range: DateRange;\n  newDate: MaterialUiPickersDate;\n  currentlySelectingRangeEnd: 'start' | 'end';\n}\n\nexport function calculateRangeChange({\n  utils,\n  range,\n  newDate: selectedDate,\n  currentlySelectingRangeEnd,\n}: CalculateRangeChangeOptions): { nextSelection: 'start' | 'end'; newRange: DateRange } {\n  const [start, end] = range;\n\n  if (currentlySelectingRangeEnd === 'start') {\n    return Boolean(end) && utils.isAfter(selectedDate, end)\n      ? { nextSelection: 'end', newRange: [selectedDate, null] }\n      : { nextSelection: 'end', newRange: [selectedDate, end] };\n  } else {\n    return Boolean(start) && utils.isBefore(selectedDate, start)\n      ? { nextSelection: 'end', newRange: [selectedDate, null] }\n      : { nextSelection: 'start', newRange: [start, selectedDate] };\n  }\n}\n\nexport function calculateRangePreview(options: CalculateRangeChangeOptions): DateRange {\n  if (!options.newDate) {\n    return [null, null];\n  }\n\n  const [start, end] = options.range;\n  const { newRange } = calculateRangeChange(options);\n\n  if (!start || !end) {\n    return newRange;\n  }\n\n  const [previewStart, previewEnd] = newRange;\n  // prettier-ignore\n  return options.currentlySelectingRangeEnd === 'end'\n    ? [end, previewEnd]\n    : [previewStart, start];\n}\n","import * as React from 'react';\nimport PickerToolbar from '../_shared/PickerToolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { useUtils } from '../_shared/hooks/useUtils';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ToolbarComponentProps } from '../Picker/Picker';\nimport { ToolbarButton } from '../_shared/ToolbarButton';\nimport { DateRange, CurrentlySelectingRangeEndProps } from './RangeTypes';\n\nexport const useStyles = makeStyles(\n  {\n    penIcon: {\n      position: 'relative',\n      top: 4,\n    },\n    dateTextContainer: {\n      display: 'flex',\n    },\n  },\n  { name: 'MuiPickersDatePickerRoot' }\n);\n\ninterface DateRangePickerToolbarProps\n  extends CurrentlySelectingRangeEndProps,\n    Pick<\n      ToolbarComponentProps,\n      'isMobileKeyboardViewOpen' | 'toggleMobileKeyboardView' | 'toolbarTitle' | 'toolbarFormat'\n    > {\n  date: DateRange;\n  startText: React.ReactNode;\n  endText: React.ReactNode;\n  currentlySelectingRangeEnd: 'start' | 'end';\n  setCurrentlySelectingRangeEnd: (newSelectingEnd: 'start' | 'end') => void;\n}\n\nexport const DateRangePickerToolbar: React.FC<DateRangePickerToolbarProps> = ({\n  date: [start, end],\n  toolbarFormat,\n  isMobileKeyboardViewOpen,\n  toggleMobileKeyboardView,\n  currentlySelectingRangeEnd,\n  setCurrentlySelectingRangeEnd,\n  startText,\n  endText,\n  toolbarTitle = 'SELECT DATE RANGE',\n}) => {\n  const utils = useUtils();\n  const classes = useStyles();\n\n  const startDateValue = start\n    ? utils.formatByString(start, toolbarFormat || utils.formats.shortDate)\n    : startText;\n\n  const endDateValue = end\n    ? utils.formatByString(end, toolbarFormat || utils.formats.shortDate)\n    : endText;\n\n  return (\n    <PickerToolbar\n      toolbarTitle={toolbarTitle}\n      isMobileKeyboardViewOpen={isMobileKeyboardViewOpen}\n      toggleMobileKeyboardView={toggleMobileKeyboardView}\n      isLandscape={false}\n      penIconClassName={classes.penIcon}\n    >\n      <div className={classes.dateTextContainer}>\n        <ToolbarButton\n          variant={Boolean(start) ? 'h5' : 'h6'}\n          value={startDateValue}\n          selected={currentlySelectingRangeEnd === 'start'}\n          onClick={() => setCurrentlySelectingRangeEnd('start')}\n        />\n        <Typography variant=\"h5\">&nbsp;{'â€“'}&nbsp;</Typography>\n        <ToolbarButton\n          variant={Boolean(end) ? 'h5' : 'h6'}\n          value={endDateValue}\n          selected={currentlySelectingRangeEnd === 'end'}\n          onClick={() => setCurrentlySelectingRangeEnd('end')}\n        />\n      </div>\n    </PickerToolbar>\n  );\n};\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport { DAY_MARGIN } from '../constants/dimensions';\nimport { useUtils } from '../_shared/hooks/useUtils';\nimport { makeStyles, fade } from '@material-ui/core/styles';\nimport { Day, DayProps, areDayPropsEqual } from '../views/Calendar/Day';\n\ninterface DateRangeDayProps extends DayProps {\n  isHighlighting: boolean;\n  isEndOfHighlighting: boolean;\n  isStartOfHighlighting: boolean;\n  isPreviewing: boolean;\n  isEndOfPreviewing: boolean;\n  isStartOfPreviewing: boolean;\n}\n\nconst endBorderStyle = {\n  borderTopRightRadius: '50%',\n  borderBottomRightRadius: '50%',\n};\n\nconst startBorderStyle = {\n  borderTopLeftRadius: '50%',\n  borderBottomLeftRadius: '50%',\n};\n\nconst useStyles = makeStyles(\n  theme => ({\n    rangeIntervalDay: {\n      '&:first-child $rangeIntervalDayPreview': {\n        ...startBorderStyle,\n        borderLeftColor: theme.palette.divider,\n      },\n      '&:last-child $rangeIntervalDayPreview': {\n        ...endBorderStyle,\n        borderRightColor: theme.palette.divider,\n      },\n    },\n    rangeIntervalDayHighlight: {\n      borderRadius: 0,\n      color: theme.palette.primary.contrastText,\n      backgroundColor: fade(theme.palette.primary.light, 0.6),\n      '&:first-child': startBorderStyle,\n      '&:last-child': endBorderStyle,\n    },\n    rangeIntervalDayHighlightStart: {\n      ...startBorderStyle,\n      paddingLeft: 0,\n      marginLeft: DAY_MARGIN / 2,\n    },\n    rangeIntervalDayHighlightEnd: {\n      ...endBorderStyle,\n      paddingRight: 0,\n      marginRight: DAY_MARGIN / 2,\n    },\n    day: {\n      // Required to overlap preview border\n      transform: 'scale(1.1)',\n      '& > *': {\n        transform: 'scale(0.9)',\n      },\n    },\n    dayOutsideRangeInterval: {\n      '&:hover': {\n        border: `1px solid ${theme.palette.grey[500]}`,\n      },\n    },\n    dayInsideRangeInterval: {\n      color: theme.palette.getContrastText(fade(theme.palette.primary.light, 0.6)),\n    },\n    notSelectedDate: {\n      backgroundColor: 'transparent',\n    },\n    rangeIntervalPreview: {\n      // replace default day component margin with transparent border to avoid jumping on preview\n      border: '2px solid transparent',\n    },\n    rangeIntervalDayPreview: {\n      borderRadius: 0,\n      border: `2px dashed ${theme.palette.divider}`,\n      borderLeftColor: 'transparent',\n      borderRightColor: 'transparent',\n\n      '&$rangeIntervalDayPreviewStart': {\n        borderLeftColor: theme.palette.divider,\n        ...startBorderStyle,\n      },\n      '&$rangeIntervalDayPreviewEnd': {\n        borderRightColor: theme.palette.divider,\n        ...endBorderStyle,\n      },\n    },\n    rangeIntervalDayPreviewStart: {},\n    rangeIntervalDayPreviewEnd: {},\n  }),\n  { name: 'MuiPickersDateRangeDay' }\n);\n\nexport const PureDateRangeDay = ({\n  day,\n  className,\n  selected,\n  isPreviewing,\n  isStartOfPreviewing,\n  isEndOfPreviewing,\n  isHighlighting,\n  isEndOfHighlighting,\n  isStartOfHighlighting,\n  inCurrentMonth,\n  ...other\n}: DateRangeDayProps) => {\n  const utils = useUtils();\n  const classes = useStyles();\n\n  const isEndOfMonth = utils.isSameDay(day, utils.endOfMonth(day));\n  const isStartOfMonth = utils.isSameDay(day, utils.startOfMonth(day));\n\n  const shouldRenderHighlight = isHighlighting && inCurrentMonth;\n  const shouldRenderPreview = isPreviewing && inCurrentMonth;\n\n  return (\n    <div\n      data-mui-test={shouldRenderHighlight ? 'DateRangeHighlight' : undefined}\n      className={clsx(classes.rangeIntervalDay, {\n        [classes.rangeIntervalDayHighlight]: shouldRenderHighlight,\n        [classes.rangeIntervalDayHighlightEnd]: isEndOfHighlighting || isEndOfMonth,\n        [classes.rangeIntervalDayHighlightStart]: isStartOfHighlighting || isStartOfMonth,\n      })}\n    >\n      <div\n        data-mui-test={shouldRenderPreview ? 'DateRangePreview' : undefined}\n        className={clsx(classes.rangeIntervalPreview, {\n          [classes.rangeIntervalDayPreview]: shouldRenderPreview,\n          [classes.rangeIntervalDayPreviewEnd]: isEndOfPreviewing || isEndOfMonth,\n          [classes.rangeIntervalDayPreviewStart]: isStartOfPreviewing || isStartOfMonth,\n        })}\n      >\n        <Day\n          allowKeyboardControl={false}\n          disableMargin\n          {...other}\n          day={day}\n          selected={selected}\n          inCurrentMonth={inCurrentMonth}\n          data-mui-test=\"DateRangeDay\"\n          className={clsx(\n            classes.day,\n            {\n              [classes.notSelectedDate]: !selected,\n              [classes.dayOutsideRangeInterval]: !isHighlighting,\n              [classes.dayInsideRangeInterval]: !selected && isHighlighting,\n            },\n            className\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n\nPureDateRangeDay.displayName = 'DateRangeDay';\n\nexport const DateRangeDay = React.memo(PureDateRangeDay, (prevProps, nextProps) => {\n  return (\n    prevProps.isHighlighting === nextProps.isHighlighting &&\n    prevProps.isEndOfHighlighting === nextProps.isEndOfHighlighting &&\n    prevProps.isStartOfHighlighting === nextProps.isStartOfHighlighting &&\n    prevProps.isPreviewing === nextProps.isPreviewing &&\n    prevProps.isEndOfPreviewing === nextProps.isEndOfPreviewing &&\n    prevProps.isStartOfPreviewing === nextProps.isStartOfPreviewing &&\n    areDayPropsEqual(prevProps, nextProps)\n  );\n});\n","import * as React from 'react';\nimport CalendarHeader from '../views/Calendar/CalendarHeader';\nimport { DateRange } from './RangeTypes';\nimport { DateRangeDay } from './DateRangePickerDay';\nimport { useUtils } from '../_shared/hooks/useUtils';\nimport { MaterialUiPickersDate } from '../typings/date';\nimport { Calendar, CalendarProps } from '../views/Calendar/Calendar';\nimport { ExportedArrowSwitcherProps } from '../_shared/ArrowSwitcher';\nimport { defaultMinDate, defaultMaxDate } from '../constants/prop-types';\nimport {\n  isWithinRange,\n  isStartOfRange,\n  isEndOfRange,\n  DateValidationProps,\n} from '../_helpers/date-utils';\n\nexport interface ExportedMobileDateRangeCalendarProps {}\n\ninterface DesktopDateRangeCalendarProps\n  extends ExportedMobileDateRangeCalendarProps,\n    CalendarProps,\n    DateValidationProps,\n    ExportedArrowSwitcherProps {\n  date: DateRange;\n  changeMonth: (date: MaterialUiPickersDate) => void;\n}\n\nconst onlyDateView = ['date'] as ['date'];\n\nexport const DateRangePickerViewMobile: React.FC<DesktopDateRangeCalendarProps> = ({\n  date,\n  changeMonth,\n  leftArrowButtonProps,\n  leftArrowButtonText,\n  leftArrowIcon,\n  rightArrowButtonProps,\n  rightArrowButtonText,\n  rightArrowIcon,\n  onChange,\n  minDate: __minDate,\n  maxDate: __maxDate,\n  ...other\n}) => {\n  const utils = useUtils();\n  const minDate = __minDate || utils.date(defaultMinDate);\n  const maxDate = __maxDate || utils.date(defaultMaxDate);\n\n  return (\n    <>\n      <CalendarHeader\n        view=\"date\"\n        views={onlyDateView}\n        changeView={() => ({})}\n        onMonthChange={changeMonth}\n        leftArrowButtonProps={leftArrowButtonProps}\n        leftArrowButtonText={leftArrowButtonText}\n        leftArrowIcon={leftArrowIcon}\n        rightArrowButtonProps={rightArrowButtonProps}\n        rightArrowButtonText={rightArrowButtonText}\n        rightArrowIcon={rightArrowIcon}\n        minDate={minDate}\n        maxDate={maxDate}\n        {...other}\n      />\n\n      <Calendar\n        {...other}\n        date={date}\n        onChange={onChange}\n        renderDay={(day, _, DayProps) => (\n          <DateRangeDay\n            isPreviewing={false}\n            isStartOfPreviewing={false}\n            isEndOfPreviewing={false}\n            isHighlighting={isWithinRange(utils, day, date)}\n            isStartOfHighlighting={isStartOfRange(utils, day, date)}\n            isEndOfHighlighting={isEndOfRange(utils, day, date)}\n            {...DayProps}\n          />\n        )}\n      />\n    </>\n  );\n};\n","import * as React from 'react';\nimport { RangeInput, DateRange } from './RangeTypes';\nimport { useUtils } from '../_shared/hooks/useUtils';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MaterialUiPickersDate } from '../typings/date';\nimport { CurrentlySelectingRangeEndProps } from './RangeTypes';\nimport { useMaskedInput } from '../_shared/hooks/useMaskedInput';\nimport { DateRangeValidationError } from '../_helpers/date-utils';\nimport { WrapperVariantContext } from '../wrappers/WrapperVariantContext';\nimport { DateInputProps, MuiTextFieldProps } from '../_shared/PureDateInput';\nimport { mergeRefs, executeInTheNextEventLoopTick } from '../_helpers/utils';\n\nexport const useStyles = makeStyles(\n  theme => ({\n    rangeInputsContainer: {\n      display: 'flex',\n      alignItems: 'baseline',\n      [theme.breakpoints.down('xs')]: {\n        flexDirection: 'column',\n        alignItems: 'center',\n      },\n    },\n    toLabelDelimiter: {\n      margin: '8px 0',\n      [theme.breakpoints.up('sm')]: {\n        margin: '0 16px',\n      },\n    },\n  }),\n  { name: 'MuiPickersDateRangePickerInput' }\n);\n\nexport interface ExportedDateRangePickerInputProps {\n  /**\n   * Render input component for date range. Where `props` â€“ [TextField](https://material-ui.com/api/text-field/#textfield-api) component props\n   * @example ```jsx\n   * <DateRangePicker\n   * renderInput={(startProps, endProps) => (\n       <>\n         <TextField {...startProps} />\n         <Typography> to <Typography>\n         <TextField {...endProps} />\n       </>;\n     )}\n     />\n   * ````\n   */\n  renderInput: (startProps: MuiTextFieldProps, endProps: MuiTextFieldProps) => React.ReactElement;\n}\n\nexport interface DateRangeInputProps\n  extends ExportedDateRangePickerInputProps,\n    CurrentlySelectingRangeEndProps,\n    Omit<\n      DateInputProps<RangeInput, DateRange>,\n      'validationError' | 'renderInput' | 'forwardedRef'\n    > {\n  startText: React.ReactNode;\n  endText: React.ReactNode;\n  forwardedRef?: React.Ref<HTMLDivElement>;\n  containerRef?: React.Ref<HTMLDivElement>;\n  validationError: DateRangeValidationError;\n}\n\nexport const DateRangePickerInput: React.FC<DateRangeInputProps> = ({\n  containerRef,\n  currentlySelectingRangeEnd,\n  disableOpenPicker,\n  endText,\n  forwardedRef,\n  onBlur,\n  onChange,\n  open,\n  openPicker,\n  rawValue,\n  readOnly,\n  renderInput,\n  setCurrentlySelectingRangeEnd,\n  startText,\n  TextFieldProps,\n  rawValue: [start, end],\n  validationError: [startValidationError, endValidationError],\n  ...other\n}) => {\n  const utils = useUtils();\n  const classes = useStyles();\n  const startRef = React.useRef<HTMLInputElement>(null);\n  const endRef = React.useRef<HTMLInputElement>(null);\n  const wrapperVariant = React.useContext(WrapperVariantContext);\n\n  React.useEffect(() => {\n    if (!open) {\n      return;\n    }\n\n    if (currentlySelectingRangeEnd === 'start') {\n      startRef.current?.focus();\n    } else if (currentlySelectingRangeEnd === 'end') {\n      endRef.current?.focus();\n    }\n  }, [currentlySelectingRangeEnd, open]);\n\n  // TODO: rethink this approach. We do not need to wait for calendar to be updated to rerender input (looks like freezing)\n  // TODO: so simply break 1 react's commit phase in 2 (first for input and second for calendars) by executing onChange in the next tick\n  const lazyHandleChangeCallback = React.useCallback(\n    (...args: Parameters<typeof onChange>) =>\n      executeInTheNextEventLoopTick(() => onChange(...args)),\n    [onChange]\n  );\n\n  const handleStartChange = (date: MaterialUiPickersDate, inputString?: string) => {\n    lazyHandleChangeCallback([date, utils.date(end)], inputString);\n  };\n\n  const handleEndChange = (date: MaterialUiPickersDate, inputString?: string) => {\n    lazyHandleChangeCallback([utils.date(start), date], inputString);\n  };\n\n  const openRangeStartSelection = () => {\n    if (setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('start');\n    }\n    if (!disableOpenPicker) {\n      openPicker();\n    }\n  };\n\n  const openRangeEndSelection = () => {\n    if (setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('end');\n    }\n    if (!disableOpenPicker) {\n      openPicker();\n    }\n  };\n\n  const openOnFocus = wrapperVariant === 'desktop';\n  const startInputProps = useMaskedInput({\n    ...other,\n    readOnly,\n    rawValue: start,\n    onChange: handleStartChange,\n    label: startText,\n    validationError: startValidationError !== null,\n    TextFieldProps: {\n      ...TextFieldProps,\n      ref: startRef,\n      variant: 'outlined',\n      focused: open && currentlySelectingRangeEnd === 'start',\n      onClick: !openOnFocus ? openRangeStartSelection : undefined,\n      onFocus: openOnFocus ? openRangeStartSelection : undefined,\n    },\n  });\n\n  const endInputProps = useMaskedInput({\n    ...other,\n    readOnly,\n    label: endText,\n    rawValue: end,\n    onChange: handleEndChange,\n    validationError: endValidationError !== null,\n    TextFieldProps: {\n      ...TextFieldProps,\n      ref: endRef,\n      variant: 'outlined',\n      focused: open && currentlySelectingRangeEnd === 'end',\n      onClick: !openOnFocus ? openRangeEndSelection : undefined,\n      onFocus: openOnFocus ? openRangeEndSelection : undefined,\n    },\n  });\n\n  return (\n    <div\n      onBlur={onBlur}\n      className={classes.rangeInputsContainer}\n      ref={mergeRefs([containerRef, forwardedRef])}\n    >\n      {renderInput(startInputProps, endInputProps)}\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { DateRange } from './RangeTypes';\nimport { DateRangeDay } from './DateRangePickerDay';\nimport { useUtils } from '../_shared/hooks/useUtils';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MaterialUiPickersDate } from '../typings/date';\nimport { calculateRangePreview } from './date-range-manager';\nimport { Calendar, CalendarProps } from '../views/Calendar/Calendar';\nimport { defaultMinDate, defaultMaxDate } from '../constants/prop-types';\nimport { ArrowSwitcher, ExportedArrowSwitcherProps } from '../_shared/ArrowSwitcher';\nimport {\n  usePreviousMonthDisabled,\n  useNextMonthDisabled,\n} from '../_shared/hooks/date-helpers-hooks';\nimport {\n  isWithinRange,\n  isStartOfRange,\n  isEndOfRange,\n  DateValidationProps,\n} from '../_helpers/date-utils';\n\nexport interface ExportedDesktopDateRangeCalendarProps {\n  /**\n   * How many calendars render on **desktop** DateRangePicker\n   * @default 2\n   */\n  calendars?: 1 | 2 | 3;\n}\n\ninterface DesktopDateRangeCalendarProps\n  extends ExportedDesktopDateRangeCalendarProps,\n    CalendarProps,\n    DateValidationProps,\n    ExportedArrowSwitcherProps {\n  date: DateRange;\n  changeMonth: (date: MaterialUiPickersDate) => void;\n  currentlySelectingRangeEnd: 'start' | 'end';\n}\n\nexport const useStyles = makeStyles(\n  theme => ({\n    dateRangeContainer: {\n      display: 'flex',\n      flexDirection: 'row',\n    },\n    rangeCalendarContainer: {\n      '&:not(:last-child)': {\n        borderRight: `2px solid ${theme.palette.divider}`,\n      },\n    },\n    calendar: {\n      minWidth: 312,\n      minHeight: 288,\n    },\n    arrowSwitcher: {\n      padding: '16px 16px 8px 16px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n    },\n  }),\n  { name: 'MuiPickersDesktopDateRangeCalendar' }\n);\n\nfunction getCalendarsArray(calendars: ExportedDesktopDateRangeCalendarProps['calendars']) {\n  switch (calendars) {\n    case 1:\n      return [0];\n    case 2:\n      return [0, 0];\n    case 3:\n      return [0, 0, 0];\n    // this will not work in IE11, but allows to support any amount of calendars\n    default:\n      return new Array(calendars).fill(0);\n  }\n}\n\nexport const DateRangePickerViewDesktop: React.FC<DesktopDateRangeCalendarProps> = ({\n  date,\n  calendars = 2,\n  changeMonth,\n  leftArrowButtonProps,\n  leftArrowButtonText,\n  leftArrowIcon,\n  rightArrowButtonProps,\n  rightArrowButtonText,\n  rightArrowIcon,\n  onChange,\n  disableFuture,\n  disablePast,\n  minDate: __minDate,\n  maxDate: __maxDate,\n  currentlySelectingRangeEnd,\n  currentMonth,\n  ...other\n}) => {\n  const utils = useUtils();\n  const classes = useStyles();\n  const minDate = __minDate || utils.date(defaultMinDate);\n  const maxDate = __maxDate || utils.date(defaultMaxDate);\n\n  const [rangePreviewDay, setRangePreviewDay] = React.useState<MaterialUiPickersDate>(null);\n\n  const isNextMonthDisabled = useNextMonthDisabled(currentMonth, { disableFuture, maxDate });\n  const isPreviousMonthDisabled = usePreviousMonthDisabled(currentMonth, { disablePast, minDate });\n\n  const previewingRange = calculateRangePreview({\n    utils,\n    range: date,\n    newDate: rangePreviewDay,\n    currentlySelectingRangeEnd,\n  });\n\n  const handleDayChange = React.useCallback(\n    (day: MaterialUiPickersDate) => {\n      setRangePreviewDay(null);\n      onChange(day);\n    },\n    [onChange]\n  );\n\n  const handlePreviewDayChange = (newPreviewRequest: MaterialUiPickersDate) => {\n    if (!isWithinRange(utils, newPreviewRequest, date)) {\n      setRangePreviewDay(newPreviewRequest);\n    } else {\n      setRangePreviewDay(null);\n    }\n  };\n\n  const CalendarTransitionProps = React.useMemo(\n    () => ({\n      onMouseLeave: () => setRangePreviewDay(null),\n    }),\n    []\n  );\n\n  const selectNextMonth = React.useCallback(() => {\n    changeMonth(utils.getNextMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n\n  const selectPreviousMonth = React.useCallback(() => {\n    changeMonth(utils.getPreviousMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n\n  return (\n    <div className={classes.dateRangeContainer}>\n      {getCalendarsArray(calendars).map((_, index) => {\n        const monthOnIteration = utils.setMonth(currentMonth, utils.getMonth(currentMonth) + index);\n\n        return (\n          <div key={index} className={classes.rangeCalendarContainer}>\n            <ArrowSwitcher\n              className={classes.arrowSwitcher}\n              onLeftClick={selectPreviousMonth}\n              onRightClick={selectNextMonth}\n              isLeftHidden={index !== 0}\n              isRightHidden={index !== calendars - 1}\n              isLeftDisabled={isPreviousMonthDisabled}\n              isRightDisabled={isNextMonthDisabled}\n              leftArrowButtonProps={leftArrowButtonProps}\n              leftArrowButtonText={leftArrowButtonText}\n              leftArrowIcon={leftArrowIcon}\n              rightArrowButtonProps={rightArrowButtonProps}\n              rightArrowButtonText={rightArrowButtonText}\n              rightArrowIcon={rightArrowIcon}\n              text={utils.format(monthOnIteration, 'monthAndYear')}\n            />\n\n            <Calendar\n              {...other}\n              key={index}\n              date={date}\n              className={classes.calendar}\n              onChange={handleDayChange}\n              currentMonth={monthOnIteration}\n              TransitionProps={CalendarTransitionProps}\n              renderDay={(day, _, DayProps) => (\n                <DateRangeDay\n                  isPreviewing={isWithinRange(utils, day, previewingRange)}\n                  isStartOfPreviewing={isStartOfRange(utils, day, previewingRange)}\n                  isEndOfPreviewing={isEndOfRange(utils, day, previewingRange)}\n                  isHighlighting={isWithinRange(utils, day, date)}\n                  isStartOfHighlighting={isStartOfRange(utils, day, date)}\n                  isEndOfHighlighting={isEndOfRange(utils, day, date)}\n                  onMouseEnter={() => handlePreviewDayChange(day)}\n                  {...DayProps}\n                />\n              )}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { isRangeValid } from '../_helpers/date-utils';\nimport { MaterialUiPickersDate } from '../typings/date';\nimport { BasePickerProps } from '../typings/BasePicker';\nimport { calculateRangeChange } from './date-range-manager';\nimport { useUtils, useNow } from '../_shared/hooks/useUtils';\nimport { SharedPickerProps } from '../Picker/SharedPickerProps';\nimport { DateRangePickerToolbar } from './DateRangePickerToolbar';\nimport { useParsedDate } from '../_shared/hooks/date-helpers-hooks';\nimport { useCalendarState } from '../views/Calendar/useCalendarState';\nimport { FORCE_FINISH_PICKER } from '../_shared/hooks/usePickerState';\nimport { DateRangePickerViewMobile } from './DateRangePickerViewMobile';\nimport { WrapperVariantContext } from '../wrappers/WrapperVariantContext';\nimport { MobileKeyboardInputView } from '../views/MobileKeyboardInputView';\nimport { DateRangePickerInput, DateRangeInputProps } from './DateRangePickerInput';\nimport { RangeInput, DateRange, CurrentlySelectingRangeEndProps } from './RangeTypes';\nimport { ExportedCalendarViewProps, defaultReduceAnimations } from '../views/Calendar/CalendarView';\nimport {\n  DateRangePickerViewDesktop,\n  ExportedDesktopDateRangeCalendarProps,\n} from './DateRangePickerViewDesktop';\n\ntype BaseCalendarPropsToReuse = Omit<ExportedCalendarViewProps, 'onYearChange'>;\n\nexport interface ExportedDateRangePickerViewProps\n  extends BaseCalendarPropsToReuse,\n    ExportedDesktopDateRangeCalendarProps,\n    Omit<BasePickerProps, 'value' | 'onChange'> {\n  /**\n   * if `true` after selecting `start` date  calendar will not automatically switch to the month of `end` date\n   * @default false\n   */\n  disableAutoMonthSwitching?: boolean;\n}\n\ninterface DateRangePickerViewProps\n  extends ExportedDateRangePickerViewProps,\n    CurrentlySelectingRangeEndProps,\n    SharedPickerProps<RangeInput, DateRange, DateRangeInputProps> {\n  open: boolean;\n  startText: React.ReactNode;\n  endText: React.ReactNode;\n}\n\nexport const DateRangePickerView: React.FC<DateRangePickerViewProps> = ({\n  open,\n  calendars = 2,\n  currentlySelectingRangeEnd,\n  date,\n  disableAutoMonthSwitching = false,\n  disableFuture,\n  disableHighlightToday,\n  disablePast,\n  maxDate: unparsedMaxDate = new Date('2100-01-01'),\n  minDate: unparsedMinDate = new Date('1900-01-01'),\n  onDateChange,\n  onMonthChange,\n  reduceAnimations = defaultReduceAnimations,\n  setCurrentlySelectingRangeEnd,\n  shouldDisableDate,\n  toggleMobileKeyboardView,\n  isMobileKeyboardViewOpen,\n  showToolbar,\n  startText,\n  endText,\n  className,\n  DateInputProps,\n  ...other\n}) => {\n  const now = useNow();\n  const utils = useUtils();\n  const wrapperVariant = React.useContext(WrapperVariantContext);\n  const minDate = useParsedDate(unparsedMinDate)!;\n  const maxDate = useParsedDate(unparsedMaxDate)!;\n\n  const [start, end] = date;\n  const {\n    changeMonth,\n    calendarState,\n    isDateDisabled,\n    onMonthSwitchingAnimationEnd,\n    changeFocusedDay,\n  } = useCalendarState({\n    date: start || end || now,\n    minDate,\n    maxDate,\n    reduceAnimations,\n    disablePast,\n    disableFuture,\n    onMonthChange,\n    shouldDisableDate,\n    disableSwitchToMonthOnDayFocus: true,\n  });\n\n  const toShowToolbar = showToolbar ?? wrapperVariant !== 'desktop';\n\n  const scrollToDayIfNeeded = (day: MaterialUiPickersDate) => {\n    if (!utils.isValid(day) || isDateDisabled(day)) {\n      return;\n    }\n\n    const displayingMonthRange = wrapperVariant === 'mobile' ? 0 : calendars - 1;\n    const currentMonthNumber = utils.getMonth(calendarState.currentMonth);\n    const requestedMonthNumber = utils.getMonth(day);\n\n    if (\n      !utils.isSameYear(calendarState.currentMonth, day) ||\n      requestedMonthNumber < currentMonthNumber ||\n      requestedMonthNumber > currentMonthNumber + displayingMonthRange\n    ) {\n      const newMonth =\n        currentlySelectingRangeEnd === 'start'\n          ? start\n          : // If need to focus end, scroll to the state when \"end\" is displaying in the last calendar\n            utils.addMonths(end, -displayingMonthRange);\n\n      changeMonth(newMonth);\n    }\n  };\n\n  React.useEffect(() => {\n    if (disableAutoMonthSwitching || !open) {\n      return;\n    }\n\n    if (\n      (currentlySelectingRangeEnd === 'start' && start === null) ||\n      (currentlySelectingRangeEnd === 'end' && end === null)\n    ) {\n      return;\n    }\n\n    scrollToDayIfNeeded(currentlySelectingRangeEnd === 'start' ? start : end);\n  }, [currentlySelectingRangeEnd, date]); // eslint-disable-line\n\n  const handleChange = React.useCallback(\n    (newDate: MaterialUiPickersDate) => {\n      const { nextSelection, newRange } = calculateRangeChange({\n        newDate,\n        utils,\n        range: date,\n        currentlySelectingRangeEnd,\n      });\n\n      setCurrentlySelectingRangeEnd(nextSelection);\n\n      const isFullRangeSelected =\n        currentlySelectingRangeEnd === 'end' && isRangeValid(utils, newRange);\n      onDateChange(newRange, wrapperVariant, isFullRangeSelected ? FORCE_FINISH_PICKER : true);\n    },\n    [\n      currentlySelectingRangeEnd,\n      date,\n      onDateChange,\n      setCurrentlySelectingRangeEnd,\n      utils,\n      wrapperVariant,\n    ]\n  );\n\n  const renderView = () => {\n    const sharedCalendarProps = {\n      date,\n      isDateDisabled,\n      changeFocusedDay,\n      onChange: handleChange,\n      reduceAnimations,\n      disableHighlightToday,\n      onMonthSwitchingAnimationEnd,\n      changeMonth,\n      currentlySelectingRangeEnd,\n      disableFuture,\n      disablePast,\n      minDate,\n      maxDate,\n      ...calendarState,\n      ...other,\n    };\n\n    switch (wrapperVariant) {\n      case 'desktop': {\n        return <DateRangePickerViewDesktop calendars={calendars} {...sharedCalendarProps} />;\n      }\n\n      default: {\n        return <DateRangePickerViewMobile {...sharedCalendarProps} />;\n      }\n    }\n  };\n\n  return (\n    <div className={className}>\n      {toShowToolbar && (\n        <DateRangePickerToolbar\n          date={date}\n          isMobileKeyboardViewOpen={isMobileKeyboardViewOpen}\n          toggleMobileKeyboardView={toggleMobileKeyboardView}\n          currentlySelectingRangeEnd={currentlySelectingRangeEnd}\n          setCurrentlySelectingRangeEnd={setCurrentlySelectingRangeEnd}\n          startText={startText}\n          endText={endText}\n        />\n      )}\n\n      {isMobileKeyboardViewOpen ? (\n        <MobileKeyboardInputView>\n          <DateRangePickerInput disableOpenPicker ignoreInvalidInputs {...DateInputProps} />\n        </MobileKeyboardInputView>\n      ) : (\n        renderView()\n      )}\n    </div>\n  );\n};\n","import Typography from '@material-ui/core/Typography';\nimport { styled } from '@material-ui/core/styles';\n\nexport const DateRangeDelimiter = styled(Typography)({\n  margin: '0 16px',\n});\n","import * as React from 'react';\nimport { useUtils } from '../_shared/hooks/useUtils';\nimport { MobileWrapper } from '../wrappers/MobileWrapper';\nimport { DateRangeInputProps } from './DateRangePickerInput';\nimport { usePickerState } from '../_shared/hooks/usePickerState';\nimport { useParsedDate } from '../_shared/hooks/date-helpers-hooks';\nimport { DesktopPopperWrapper } from '../wrappers/DesktopPopperWrapper';\nimport { makeWrapperComponent } from '../wrappers/makeWrapperComponent';\nimport { ResponsivePopperWrapper } from '../wrappers/ResponsiveWrapper';\nimport { defaultMinDate, defaultMaxDate } from '../constants/prop-types';\nimport { SomeWrapper, ExtendWrapper, StaticWrapper } from '../wrappers/Wrapper';\nimport { makeValidationHook, ValidationProps } from '../_shared/hooks/useValidation';\nimport { DateRangePickerView, ExportedDateRangePickerViewProps } from './DateRangePickerView';\nimport { DateRangePickerInput, ExportedDateRangePickerInputProps } from './DateRangePickerInput';\nimport {\n  DateRange as DateRangeType,\n  RangeInput,\n  AllSharedDateRangePickerProps,\n} from './RangeTypes';\nimport {\n  parseRangeInputValue,\n  validateDateRange,\n  DateRangeValidationError,\n} from '../_helpers/date-utils';\n\nexport interface DateRangePickerProps\n  extends ExportedDateRangePickerViewProps,\n    ValidationProps<DateRangeValidationError, RangeInput>,\n    ExportedDateRangePickerInputProps {\n  /**\n   * Text for start input label and toolbar placeholder\n   * @default \"Start\"\n   */\n  startText?: React.ReactNode;\n  /**\n   * Text for end input label and toolbar placeholder\n   * @default \"end\"\n   */\n  endText?: React.ReactNode;\n}\n\nexport const useDateRangeValidation = makeValidationHook<\n  DateRangeValidationError,\n  RangeInput,\n  DateRangePickerProps\n>(validateDateRange, {\n  defaultValidationError: [null, null],\n  isSameError: (a, b) => a[1] === b[1] && a[0] === b[0],\n});\n\nexport function makeRangePicker<TWrapper extends SomeWrapper>(Wrapper: TWrapper) {\n  const WrapperComponent = makeWrapperComponent<DateRangeInputProps, RangeInput, DateRange>(\n    Wrapper,\n    {\n      KeyboardDateInputComponent: DateRangePickerInput,\n      PureDateInputComponent: DateRangePickerInput,\n    }\n  );\n\n  function RangePickerWithStateAndWrapper({\n    calendars,\n    value,\n    onChange,\n    mask = '__/__/____',\n    startText = 'Start',\n    endText = 'End',\n    inputFormat: passedInputFormat,\n    minDate: __minDate = defaultMinDate,\n    maxDate: __maxDate = defaultMaxDate,\n    ...other\n  }: DateRangePickerProps & AllSharedDateRangePickerProps & ExtendWrapper<TWrapper>) {\n    const utils = useUtils();\n    const minDate = useParsedDate(__minDate);\n    const maxDate = useParsedDate(__maxDate);\n    const [currentlySelectingRangeEnd, setCurrentlySelectingRangeEnd] = React.useState<\n      'start' | 'end'\n    >('start');\n\n    const pickerStateProps = {\n      ...other,\n      value,\n      onChange,\n      inputFormat: passedInputFormat || utils.formats.keyboardDate,\n    };\n\n    const restProps = {\n      ...other,\n      minDate,\n      maxDate,\n    };\n\n    const { pickerProps, inputProps, wrapperProps } = usePickerState<RangeInput, DateRange>(\n      pickerStateProps,\n      {\n        parseInput: parseRangeInputValue,\n        areValuesEqual: (a, b) => utils.isEqual(a[0], b[0]) && utils.isEqual(a[1], b[1]),\n        emptyValue: [null, null],\n      }\n    );\n\n    const validationError = useDateRangeValidation(value, restProps);\n\n    const DateInputProps = {\n      ...inputProps,\n      ...restProps,\n      currentlySelectingRangeEnd,\n      setCurrentlySelectingRangeEnd,\n      startText,\n      endText,\n      mask,\n      validationError,\n    };\n\n    return (\n      <WrapperComponent wrapperProps={wrapperProps} DateInputProps={DateInputProps} {...restProps}>\n        <DateRangePickerView\n          open={wrapperProps.open}\n          DateInputProps={DateInputProps}\n          calendars={calendars}\n          currentlySelectingRangeEnd={currentlySelectingRangeEnd}\n          setCurrentlySelectingRangeEnd={setCurrentlySelectingRangeEnd}\n          startText={startText}\n          endText={endText}\n          {...pickerProps}\n          {...restProps}\n        />\n      </WrapperComponent>\n    );\n  }\n\n  return React.forwardRef<\n    HTMLDivElement,\n    React.ComponentProps<typeof RangePickerWithStateAndWrapper>\n  >((props, ref) => <RangePickerWithStateAndWrapper {...(props as any)} forwardedRef={ref} />);\n}\n\n// TODO replace with new export type syntax\nexport type DateRange = DateRangeType;\n\nexport const DateRangePicker = makeRangePicker(ResponsivePopperWrapper);\n\nexport const DesktopDateRangePicker = makeRangePicker(DesktopPopperWrapper);\n\nexport const MobileDateRangePicker = makeRangePicker(MobileWrapper);\n\nexport const StaticDateRangePicker = makeRangePicker(StaticWrapper);\n\nexport { DateRangeDelimiter } from './DateRangeDelimiter';\n"]},"metadata":{},"sourceType":"module"}