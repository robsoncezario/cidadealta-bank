{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty2 = require(\"C:\\\\Users\\\\robson\\\\Desktop\\\\cidadealta\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/defineProperty\");\n\nvar _objectWithoutProperties = require(\"C:\\\\Users\\\\robson\\\\Desktop\\\\cidadealta\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectWithoutProperties\");\n\nvar _assertThisInitialized = require(\"C:\\\\Users\\\\robson\\\\Desktop\\\\cidadealta\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/assertThisInitialized\");\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\robson\\\\Desktop\\\\cidadealta\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\robson\\\\Desktop\\\\cidadealta\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar _createClass = require(\"C:\\\\Users\\\\robson\\\\Desktop\\\\cidadealta\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _toConsumableArray = require(\"C:\\\\Users\\\\robson\\\\Desktop\\\\cidadealta\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/toConsumableArray\");\n\nvar _objectSpread = require(\"C:\\\\Users\\\\robson\\\\Desktop\\\\cidadealta\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread2\");\n\nvar _slicedToArray = require(\"C:\\\\Users\\\\robson\\\\Desktop\\\\cidadealta\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\n\nvar _wrapNativeSuper = require(\"C:\\\\Users\\\\robson\\\\Desktop\\\\cidadealta\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/wrapNativeSuper\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\robson\\\\Desktop\\\\cidadealta\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\robson\\\\Desktop\\\\cidadealta\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\robson\\\\Desktop\\\\cidadealta\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\robson\\\\Desktop\\\\cidadealta\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nfunction _interopDefault(ex) {\n  return ex && \"object\" == typeof ex && \"default\" in ex ? ex.default : ex;\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\n\nvar react = _interopDefault(require(\"react\")),\n    reactDom = _interopDefault(require(\"react-dom\"));\n\nfunction _defineProperty(obj, key, value) {\n  return key in obj ? Object.defineProperty(obj, key, {\n    value: value,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : obj[key] = value, obj;\n}\n\nvar AbstractRecoilValue = function AbstractRecoilValue(newKey) {\n  _classCallCheck(this, AbstractRecoilValue);\n\n  _defineProperty(this, \"key\", void 0), this.key = newKey;\n};\n\nvar RecoilState = /*#__PURE__*/function (_AbstractRecoilValue) {\n  _inherits(RecoilState, _AbstractRecoilValue);\n\n  function RecoilState() {\n    _classCallCheck(this, RecoilState);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RecoilState).apply(this, arguments));\n  }\n\n  return RecoilState;\n}(AbstractRecoilValue);\n\nvar RecoilValueReadOnly = /*#__PURE__*/function (_AbstractRecoilValue2) {\n  _inherits(RecoilValueReadOnly, _AbstractRecoilValue2);\n\n  function RecoilValueReadOnly() {\n    _classCallCheck(this, RecoilValueReadOnly);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RecoilValueReadOnly).apply(this, arguments));\n  }\n\n  return RecoilValueReadOnly;\n}(AbstractRecoilValue);\n\nvar Recoil_RecoilValue = {\n  AbstractRecoilValue: AbstractRecoilValue,\n  RecoilState: RecoilState,\n  RecoilValueReadOnly: RecoilValueReadOnly,\n  isRecoilValue: function isRecoilValue(x) {\n    return x instanceof RecoilState || x instanceof RecoilValueReadOnly;\n  }\n},\n    Recoil_RecoilValue_1 = Recoil_RecoilValue.AbstractRecoilValue,\n    Recoil_RecoilValue_2 = Recoil_RecoilValue.RecoilState,\n    Recoil_RecoilValue_3 = Recoil_RecoilValue.RecoilValueReadOnly,\n    Recoil_RecoilValue_4 = Recoil_RecoilValue.isRecoilValue;\n\nfunction getCjsExportFromNamespace(n) {\n  return n && n.default || n;\n}\n\nvar require$$2 = getCjsExportFromNamespace(Object.freeze({\n  __proto__: null,\n  AbstractRecoilValue: Recoil_RecoilValue_1,\n  RecoilState: Recoil_RecoilValue_2,\n  RecoilValueReadOnly: Recoil_RecoilValue_3,\n  isRecoilValue: Recoil_RecoilValue_4\n}));\n\nvar DefaultValue = function DefaultValue() {\n  _classCallCheck(this, DefaultValue);\n};\n\nvar DEFAULT_VALUE = new DefaultValue();\n\nvar RecoilValueNotReady = /*#__PURE__*/function (_Error) {\n  _inherits(RecoilValueNotReady, _Error);\n\n  function RecoilValueNotReady(key) {\n    _classCallCheck(this, RecoilValueNotReady);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RecoilValueNotReady).call(this, \"Tried to set the value of Recoil selector \".concat(key, \" using an updater function, but it is an async selector in a pending or error state; this is not supported.\")));\n  }\n\n  return RecoilValueNotReady;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar nodes = new Map();\n\nvar NodeMissingError = /*#__PURE__*/function (_Error2) {\n  _inherits(NodeMissingError, _Error2);\n\n  function NodeMissingError() {\n    _classCallCheck(this, NodeMissingError);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NodeMissingError).apply(this, arguments));\n  }\n\n  return NodeMissingError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar Recoil_Node = {\n  nodes: nodes,\n  registerNode: function registerNode(node) {\n    if (nodes.has(node.key)) {\n      node.key;\n    }\n\n    return nodes.set(node.key, node), null == node.set ? new require$$2.RecoilValueReadOnly(node.key) : new require$$2.RecoilState(node.key);\n  },\n  getNode: function getNode(key) {\n    var node = nodes.get(key);\n    if (null == node) throw new NodeMissingError(\"Missing definition for RecoilValue: \\\"\".concat(key, \"\\\"\\\"\"));\n    return node;\n  },\n  NodeMissingError: NodeMissingError,\n  DefaultValue: DefaultValue,\n  DEFAULT_VALUE: DEFAULT_VALUE,\n  RecoilValueNotReady: RecoilValueNotReady\n};\nvar Recoil_Queue = {\n  enqueueExecution: function enqueueExecution(s, f) {\n    f();\n  }\n};\nvar Recoil_CopyOnWrite = {\n  setByAddingToSet: function setByAddingToSet(set, v) {\n    var next = new Set(set);\n    return next.add(v), next;\n  },\n  setByDeletingFromSet: function setByDeletingFromSet(set, v) {\n    var next = new Set(set);\n    return next.delete(v), next;\n  },\n  mapBySettingInMap: function mapBySettingInMap(map, k, v) {\n    var next = new Map(map);\n    return next.set(k, v), next;\n  },\n  mapByUpdatingInMap: function mapByUpdatingInMap(map, k, updater) {\n    var next = new Map(map);\n    return next.set(k, updater(next.get(k))), next;\n  },\n  mapByDeletingFromMap: function mapByDeletingFromMap(map, k) {\n    var next = new Map(map);\n    return next.delete(k), next;\n  }\n};\nvar Recoil_Tracing = {\n  trace: function trace(message, node, fn) {\n    return fn();\n  },\n  wrap: function wrap(fn) {\n    return fn;\n  }\n};\nvar mapByDeletingFromMap$1 = Recoil_CopyOnWrite.mapByDeletingFromMap,\n    mapBySettingInMap$1 = Recoil_CopyOnWrite.mapBySettingInMap,\n    mapByUpdatingInMap$1 = Recoil_CopyOnWrite.mapByUpdatingInMap,\n    setByAddingToSet$1 = Recoil_CopyOnWrite.setByAddingToSet,\n    getNode$1 = Recoil_Node.getNode,\n    emptyMap = Object.freeze(new Map()),\n    emptySet = Object.freeze(new Set());\n\nvar ReadOnlyRecoilValueError = /*#__PURE__*/function (_Error3) {\n  _inherits(ReadOnlyRecoilValueError, _Error3);\n\n  function ReadOnlyRecoilValueError() {\n    _classCallCheck(this, ReadOnlyRecoilValueError);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ReadOnlyRecoilValueError).apply(this, arguments));\n  }\n\n  return ReadOnlyRecoilValueError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nfunction getNodeLoadable(store, state, key) {\n  return getNode$1(key).get(store, state);\n}\n\nvar subscriptionID = 0;\nvar Recoil_FunctionalCore = {\n  getNodeLoadable: getNodeLoadable,\n  peekNodeLoadable: function peekNodeLoadable(store, state, key) {\n    return getNodeLoadable(store, state, key)[1];\n  },\n  setNodeValue: function setNodeValue(store, state, key, newValue) {\n    var node = getNode$1(key);\n    if (null == node.set) throw new ReadOnlyRecoilValueError(\"Attempt to set read-only RecoilValue: \" + key);\n\n    var _node$set = node.set(store, state, newValue),\n        _node$set2 = _slicedToArray(_node$set, 2),\n        newState = _node$set2[0],\n        writtenNodes = _node$set2[1];\n\n    return [newState, writtenNodes];\n  },\n  setUnvalidatedAtomValue: function setUnvalidatedAtomValue(state, key, newValue) {\n    return _objectSpread({}, state, {\n      atomValues: mapByDeletingFromMap$1(state.atomValues, key),\n      nonvalidatedAtoms: mapBySettingInMap$1(state.nonvalidatedAtoms, key, newValue),\n      dirtyAtoms: setByAddingToSet$1(state.dirtyAtoms, key)\n    });\n  },\n  subscribeComponentToNode: function subscribeComponentToNode(state, key, callback) {\n    var subID = subscriptionID++;\n    return [_objectSpread({}, state, {\n      nodeToComponentSubscriptions: mapByUpdatingInMap$1(state.nodeToComponentSubscriptions, key, function (subsForAtom) {\n        return mapBySettingInMap$1(null != subsForAtom ? subsForAtom : emptyMap, subID, [\"TODO debug name\", callback]);\n      })\n    }), function (state) {\n      return _objectSpread({}, state, {\n        nodeToComponentSubscriptions: mapByUpdatingInMap$1(state.nodeToComponentSubscriptions, key, function (subsForAtom) {\n          return mapByDeletingFromMap$1(null != subsForAtom ? subsForAtom : emptyMap, subID);\n        })\n      });\n    }];\n  },\n  fireNodeSubscriptions: function fireNodeSubscriptions(store, updatedNodes, when) {\n    var _store$getState$nextT;\n\n    var state = \"enqueue\" === when && null !== (_store$getState$nextT = store.getState().nextTree) && void 0 !== _store$getState$nextT ? _store$getState$nextT : store.getState().currentTree,\n        dependentNodes = function (state, keys) {\n      var dependentNodes = new Set(),\n          visitedNodes = new Set(),\n          visitingNodes = Array.from(keys);\n\n      for (var key = visitingNodes.pop(); key; key = visitingNodes.pop()) {\n        var _state$nodeToNodeSubs;\n\n        dependentNodes.add(key), visitedNodes.add(key);\n        var subscribedNodes = null !== (_state$nodeToNodeSubs = state.nodeToNodeSubscriptions.get(key)) && void 0 !== _state$nodeToNodeSubs ? _state$nodeToNodeSubs : emptySet;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = subscribedNodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var downstreamNode = _step.value;\n            visitedNodes.has(downstreamNode) || visitingNodes.push(downstreamNode);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      return dependentNodes;\n    }(state, updatedNodes);\n\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = dependentNodes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var key = _step2.value;\n\n        var _state$nodeToComponen;\n\n        (null !== (_state$nodeToComponen = state.nodeToComponentSubscriptions.get(key)) && void 0 !== _state$nodeToComponen ? _state$nodeToComponen : []).forEach(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              _debugName = _ref2[0],\n              cb = _ref2[1];\n\n          \"enqueue\" === when ? store.getState().queuedComponentCallbacks.push(cb) : cb(state);\n        });\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    Recoil_Tracing.trace(\"value became available, waking components\", Array.from(updatedNodes).join(\", \"), function () {\n      var resolvers = store.getState().suspendedComponentResolvers;\n      resolvers.forEach(function (r) {\n        return r();\n      }), resolvers.clear();\n    });\n  },\n  detectCircularDependencies: function detectCircularDependencies(state, stack) {\n    if (!stack.length) return;\n    var leaf = stack[stack.length - 1],\n        downstream = state.nodeToNodeSubscriptions.get(leaf);\n    if (!(null == downstream ? void 0 : downstream.size)) return;\n    var root = stack[0];\n    if (downstream.has(root)) throw new Error(\"Recoil selector has circular dependencies: \" + [].concat(_toConsumableArray(stack), [root]).reverse().join(\" → \"));\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n      for (var _iterator3 = downstream[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n        var next = _step3.value;\n        detectCircularDependencies(state, [].concat(_toConsumableArray(stack), [next]));\n      }\n    } catch (err) {\n      _didIteratorError3 = true;\n      _iteratorError3 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n          _iterator3.return();\n        }\n      } finally {\n        if (_didIteratorError3) {\n          throw _iteratorError3;\n        }\n      }\n    }\n  }\n};\n\nvar Recoil_mapMap = function Recoil_mapMap(map, callback) {\n  var result = new Map();\n  return map.forEach(function (value, key) {\n    result.set(key, callback(value, key));\n  }), result;\n};\n\nvar getNodeLoadable$1 = Recoil_FunctionalCore.getNodeLoadable,\n    peekNodeLoadable$1 = Recoil_FunctionalCore.peekNodeLoadable,\n    setNodeValue$1 = Recoil_FunctionalCore.setNodeValue,\n    setUnvalidatedAtomValue$1 = Recoil_FunctionalCore.setUnvalidatedAtomValue,\n    subscribeComponentToNode$1 = Recoil_FunctionalCore.subscribeComponentToNode,\n    RecoilValueNotReady$1 = Recoil_Node.RecoilValueNotReady,\n    AbstractRecoilValue$1 = require$$2.AbstractRecoilValue,\n    RecoilState$1 = require$$2.RecoilState,\n    RecoilValueReadOnly$1 = require$$2.RecoilValueReadOnly;\nvar Recoil_RecoilValueInterface = {\n  RecoilValueReadOnly: RecoilValueReadOnly$1,\n  AbstractRecoilValue: AbstractRecoilValue$1,\n  RecoilState: RecoilState$1,\n  valueFromValueOrUpdater: function valueFromValueOrUpdater(store, _ref3, valueOrUpdater) {\n    var key = _ref3.key;\n\n    if (\"function\" == typeof valueOrUpdater) {\n      var _storeState$nextTree;\n\n      var storeState = store.getState(),\n          state = null !== (_storeState$nextTree = storeState.nextTree) && void 0 !== _storeState$nextTree ? _storeState$nextTree : storeState.currentTree,\n          current = peekNodeLoadable$1(store, state, key);\n      if (\"loading\" === current.state) throw new RecoilValueNotReady$1(key);\n      if (\"hasError\" === current.state) throw current.contents;\n      return valueOrUpdater(current.contents);\n    }\n\n    return valueOrUpdater;\n  },\n  getRecoilValueAsLoadable: function getRecoilValueAsLoadable(store, _ref4) {\n    var key = _ref4.key;\n    var result;\n    return Recoil_Tracing.trace(\"get RecoilValue\", key, function () {\n      return store.replaceState(Recoil_Tracing.wrap(function (state) {\n        var _getNodeLoadable$ = getNodeLoadable$1(store, state, key),\n            _getNodeLoadable$2 = _slicedToArray(_getNodeLoadable$, 2),\n            newState = _getNodeLoadable$2[0],\n            loadable = _getNodeLoadable$2[1];\n\n        return result = loadable, newState;\n      }));\n    }), result;\n  },\n  setRecoilValue: function setRecoilValue(store, _ref5, newValue) {\n    var key = _ref5.key;\n    Recoil_Tracing.trace(\"set RecoilValue\", key, function () {\n      return store.replaceState(Recoil_Tracing.wrap(function (state) {\n        var _setNodeValue$ = setNodeValue$1(store, state, key, newValue),\n            _setNodeValue$2 = _slicedToArray(_setNodeValue$, 2),\n            newState = _setNodeValue$2[0],\n            writtenNodes = _setNodeValue$2[1];\n\n        return store.fireNodeSubscriptions(writtenNodes, \"enqueue\"), newState;\n      }));\n    });\n  },\n  setUnvalidatedRecoilValue: function setUnvalidatedRecoilValue(store, _ref6, newValue) {\n    var key = _ref6.key;\n    Recoil_Tracing.trace(\"set unvalidated persisted atom\", key, function () {\n      return store.replaceState(Recoil_Tracing.wrap(function (state) {\n        var newState = setUnvalidatedAtomValue$1(state, key, newValue);\n        return store.fireNodeSubscriptions(new Set([key]), \"enqueue\"), newState;\n      }));\n    });\n  },\n  subscribeToRecoilValue: function subscribeToRecoilValue(store, _ref7, callback) {\n    var key = _ref7.key;\n    var newState, releaseFn;\n    return Recoil_Tracing.trace(\"subscribe component to RecoilValue\", key, function () {\n      return store.replaceState(Recoil_Tracing.wrap(function (state) {\n        var _subscribeComponentTo, _subscribeComponentTo2;\n\n        return (_subscribeComponentTo = subscribeComponentToNode$1(state, key, callback), _subscribeComponentTo2 = _slicedToArray(_subscribeComponentTo, 2), newState = _subscribeComponentTo2[0], releaseFn = _subscribeComponentTo2[1], _subscribeComponentTo), newState;\n      }));\n    }), {\n      release: function release(store) {\n        return store.replaceState(releaseFn);\n      }\n    };\n  }\n};\n\nfunction makeEmptyTreeState() {\n  return {\n    transactionMetadata: {},\n    atomValues: new Map(),\n    nonvalidatedAtoms: new Map(),\n    dirtyAtoms: new Set(),\n    nodeDeps: new Map(),\n    nodeToNodeSubscriptions: new Map(),\n    nodeToComponentSubscriptions: new Map()\n  };\n}\n\nfunction makeStoreState(treeState) {\n  return {\n    currentTree: treeState,\n    nextTree: null,\n    transactionSubscriptions: new Map(),\n    queuedComponentCallbacks: [],\n    suspendedComponentResolvers: new Set()\n  };\n}\n\nvar Recoil_State = {\n  makeEmptyTreeState: makeEmptyTreeState,\n  makeEmptyStoreState: function makeEmptyStoreState() {\n    return makeStoreState(makeEmptyTreeState());\n  },\n  makeStoreState: makeStoreState\n};\nvar DEFAULT_VALUE$1 = Recoil_Node.DEFAULT_VALUE,\n    getRecoilValueAsLoadable$1 = Recoil_RecoilValueInterface.getRecoilValueAsLoadable,\n    setRecoilValue$1 = Recoil_RecoilValueInterface.setRecoilValue,\n    valueFromValueOrUpdater$1 = Recoil_RecoilValueInterface.valueFromValueOrUpdater,\n    makeEmptyTreeState$1 = Recoil_State.makeEmptyTreeState,\n    makeStoreState$1 = Recoil_State.makeStoreState;\n\nvar Snapshot = /*#__PURE__*/function () {\n  function Snapshot(treeState) {\n    var _this = this;\n\n    _classCallCheck(this, Snapshot);\n\n    _defineProperty(this, \"_store\", void 0), _defineProperty(this, \"getLoadable\", function (recoilValue) {\n      return getRecoilValueAsLoadable$1(_this._store, recoilValue);\n    }), _defineProperty(this, \"getPromise\", function (recoilValue) {\n      return _this.getLoadable(recoilValue).toPromise();\n    }), _defineProperty(this, \"map\", function (mapper) {\n      var mutableSnapshot = new MutableSnapshot(_this._store.getState().currentTree);\n      mapper(mutableSnapshot);\n      return cloneSnapshot(mutableSnapshot.getStore_INTERNAL().getState().currentTree);\n    }), _defineProperty(this, \"asyncMap\", /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(mapper) {\n        var mutableSnapshot;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                mutableSnapshot = new MutableSnapshot(_this._store.getState().currentTree);\n                _context.next = 3;\n                return mapper(mutableSnapshot);\n\n              case 3:\n                return _context.abrupt(\"return\", cloneSnapshot(mutableSnapshot.getStore_INTERNAL().getState().currentTree));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref8.apply(this, arguments);\n      };\n    }()), this._store = function (treeState) {\n      var storeState = makeStoreState$1(treeState);\n      return {\n        getState: function getState() {\n          return storeState;\n        },\n        replaceState: function replaceState(replacer) {\n          storeState.currentTree = replacer(storeState.currentTree);\n        },\n        subscribeToTransactions: function subscribeToTransactions() {\n          throw new Error(\"Cannot subscribe to Snapshots\");\n        },\n        addTransactionMetadata: function addTransactionMetadata() {\n          throw new Error(\"Cannot subscribe to Snapshots\");\n        },\n        fireNodeSubscriptions: function fireNodeSubscriptions() {}\n      };\n    }(treeState);\n  }\n\n  _createClass(Snapshot, [{\n    key: \"getStore_INTERNAL\",\n    value: function getStore_INTERNAL() {\n      return this._store;\n    }\n  }]);\n\n  return Snapshot;\n}();\n\nfunction cloneTreeState(treeState) {\n  return {\n    transactionMetadata: _objectSpread({}, treeState.transactionMetadata),\n    atomValues: new Map(treeState.atomValues),\n    nonvalidatedAtoms: new Map(treeState.nonvalidatedAtoms),\n    dirtyAtoms: new Set(treeState.dirtyAtoms),\n    nodeDeps: new Map(treeState.nodeDeps),\n    nodeToNodeSubscriptions: Recoil_mapMap(treeState.nodeToNodeSubscriptions, function (keys) {\n      return new Set(keys);\n    }),\n    nodeToComponentSubscriptions: new Map()\n  };\n}\n\nfunction cloneSnapshot(treeState) {\n  return new Snapshot(cloneTreeState(treeState));\n}\n\nvar MutableSnapshot = /*#__PURE__*/function (_Snapshot) {\n  _inherits(MutableSnapshot, _Snapshot);\n\n  function MutableSnapshot(treeState) {\n    var _this2;\n\n    _classCallCheck(this, MutableSnapshot);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(MutableSnapshot).call(this, cloneTreeState(treeState))), _defineProperty(_assertThisInitialized(_this2), \"set\", function (recoilState, newValueOrUpdater) {\n      var store = _this2.getStore_INTERNAL(),\n          newValue = valueFromValueOrUpdater$1(store, recoilState, newValueOrUpdater);\n\n      setRecoilValue$1(store, recoilState, newValue);\n    }), _defineProperty(_assertThisInitialized(_this2), \"reset\", function (recoilState) {\n      return setRecoilValue$1(_this2.getStore_INTERNAL(), recoilState, DEFAULT_VALUE$1);\n    });\n    return _this2;\n  }\n\n  return MutableSnapshot;\n}(Snapshot);\n\nvar Recoil_Snapshot = {\n  Snapshot: Snapshot,\n  MutableSnapshot: MutableSnapshot,\n  freshSnapshot: function freshSnapshot() {\n    return new Snapshot(makeEmptyTreeState$1());\n  },\n  cloneSnapshot: cloneSnapshot\n},\n    Recoil_Snapshot_1 = Recoil_Snapshot.Snapshot,\n    Recoil_Snapshot_2 = Recoil_Snapshot.MutableSnapshot,\n    Recoil_Snapshot_3 = Recoil_Snapshot.freshSnapshot,\n    Recoil_Snapshot_4 = Recoil_Snapshot.cloneSnapshot;\n\nvar Recoil_nullthrows = function Recoil_nullthrows(x, message) {\n  if (null != x) return x;\n  throw new Error(null != message ? message : \"Got unexpected null or undefined\");\n},\n    require$$6 = getCjsExportFromNamespace(Object.freeze({\n  __proto__: null,\n  Snapshot: Recoil_Snapshot_1,\n  MutableSnapshot: Recoil_Snapshot_2,\n  freshSnapshot: Recoil_Snapshot_3,\n  cloneSnapshot: Recoil_Snapshot_4\n}));\n\nvar useContext = react.useContext,\n    useEffect = react.useEffect,\n    useRef = react.useRef,\n    useState = react.useState,\n    fireNodeSubscriptions$1 = Recoil_FunctionalCore.fireNodeSubscriptions,\n    setNodeValue$2 = Recoil_FunctionalCore.setNodeValue,\n    setUnvalidatedAtomValue$2 = Recoil_FunctionalCore.setUnvalidatedAtomValue,\n    freshSnapshot$1 = require$$6.freshSnapshot,\n    makeEmptyStoreState$1 = Recoil_State.makeEmptyStoreState,\n    makeStoreState$2 = Recoil_State.makeStoreState;\n\nfunction notInAContext() {\n  throw new Error(\"This component must be used inside a <RecoilRoot> component.\");\n}\n\nvar defaultStore = Object.freeze({\n  getState: notInAContext,\n  replaceState: notInAContext,\n  subscribeToTransactions: notInAContext,\n  addTransactionMetadata: notInAContext,\n  fireNodeSubscriptions: notInAContext\n});\n\nfunction startNextTreeIfNeeded(storeState) {\n  null === storeState.nextTree && (storeState.nextTree = _objectSpread({}, storeState.currentTree, {\n    dirtyAtoms: new Set(),\n    transactionMetadata: {}\n  }));\n}\n\nvar AppContext = react.createContext({\n  current: defaultStore\n}),\n    useStoreRef = function useStoreRef() {\n  return useContext(AppContext);\n};\n\nfunction Batcher(props) {\n  var storeRef = useStoreRef(),\n      _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      _ = _useState2[0],\n      setState = _useState2[1];\n\n  return props.setNotifyBatcherOfChange(function () {\n    return setState({});\n  }), useEffect(function () {\n    Recoil_Queue.enqueueExecution(\"Batcher\", function () {\n      var storeState = storeRef.current.getState(),\n          nextTree = storeState.nextTree;\n      if (null === nextTree) return;\n      nextTree.dirtyAtoms.size && storeState.transactionSubscriptions.forEach(function (sub) {\n        return sub(storeRef.current);\n      }), storeState.queuedComponentCallbacks.forEach(function (cb) {\n        return cb(nextTree);\n      }), storeState.queuedComponentCallbacks.splice(0, storeState.queuedComponentCallbacks.length), storeState.currentTree = nextTree, storeState.nextTree = null;\n    });\n  }), null;\n}\n\nvar nextID = 0;\nvar Recoil_RecoilRoot_react = {\n  useStoreRef: useStoreRef,\n  RecoilRoot: function RecoilRoot(_ref9) {\n    var initializeState_DEPRECATED = _ref9.initializeState_DEPRECATED,\n        initializeState = _ref9.initializeState,\n        children = _ref9.children;\n    var storeState;\n    var notifyBatcherOfChange = useRef(null),\n        store = {\n      getState: function getState() {\n        return storeState.current;\n      },\n      replaceState: function replaceState(replacer) {\n        var storeState = storeRef.current.getState();\n        startNextTreeIfNeeded(storeState);\n        var nextTree = Recoil_nullthrows(storeState.nextTree),\n            replaced = replacer(nextTree);\n        replaced !== nextTree && (storeState.nextTree = replaced, Recoil_nullthrows(notifyBatcherOfChange.current)());\n      },\n      subscribeToTransactions: function subscribeToTransactions(callback) {\n        var id = nextID++;\n        return storeRef.current.getState().transactionSubscriptions.set(id, callback), {\n          release: function release() {\n            storeRef.current.getState().transactionSubscriptions.delete(id);\n          }\n        };\n      },\n      addTransactionMetadata: function addTransactionMetadata(metadata) {\n        startNextTreeIfNeeded(storeRef.current.getState());\n\n        for (var _i = 0, _Object$keys = Object.keys(metadata); _i < _Object$keys.length; _i++) {\n          var k = _Object$keys[_i];\n          Recoil_nullthrows(storeRef.current.getState().nextTree).transactionMetadata[k] = metadata[k];\n        }\n      },\n      fireNodeSubscriptions: function fireNodeSubscriptions(updatedNodes, when) {\n        fireNodeSubscriptions$1(storeRef.current, updatedNodes, when);\n      }\n    },\n        storeRef = useRef(store);\n    return storeState = useRef(null != initializeState_DEPRECATED ? function (store, initializeState) {\n      var initial = makeEmptyStoreState$1();\n      return initializeState({\n        set: function set(atom, value) {\n          initial.currentTree = setNodeValue$2(store, initial.currentTree, atom.key, value)[0];\n        },\n        setUnvalidatedAtomValues: function setUnvalidatedAtomValues(atomValues) {\n          atomValues.forEach(function (v, k) {\n            initial.currentTree = setUnvalidatedAtomValue$2(initial.currentTree, k, v);\n          });\n        }\n      }), initial;\n    }(store, initializeState_DEPRECATED) : null != initializeState ? function (initializeState) {\n      var snapshot = freshSnapshot$1().map(initializeState);\n      return makeStoreState$2(snapshot.getStore_INTERNAL().getState().currentTree);\n    }(initializeState) : makeEmptyStoreState$1()), react.createElement(AppContext.Provider, {\n      value: storeRef\n    }, react.createElement(Batcher, {\n      setNotifyBatcherOfChange: function setNotifyBatcherOfChange(x) {\n        notifyBatcherOfChange.current = x;\n      }\n    }), children);\n  }\n};\n\nvar Recoil_differenceSets = function Recoil_differenceSets(set) {\n  var ret = new Set();\n\n  for (var _len = arguments.length, setsWithValuesToRemove = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    setsWithValuesToRemove[_key - 1] = arguments[_key];\n  }\n\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    FIRST: for (var _iterator4 = set[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      var value = _step4.value;\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = setsWithValuesToRemove[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var otherSet = _step5.value;\n          if (otherSet.has(value)) continue FIRST;\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      ret.add(value);\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n        _iterator4.return();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n\n  return ret;\n};\n\nvar Recoil_filterMap = function Recoil_filterMap(map, callback) {\n  var result = new Map();\n  var _iteratorNormalCompletion6 = true;\n  var _didIteratorError6 = false;\n  var _iteratorError6 = undefined;\n\n  try {\n    for (var _iterator6 = map[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n      var _step6$value = _slicedToArray(_step6.value, 2),\n          key = _step6$value[0],\n          value = _step6$value[1];\n\n      callback(value, key) && result.set(key, value);\n    }\n  } catch (err) {\n    _didIteratorError6 = true;\n    _iteratorError6 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n        _iterator6.return();\n      }\n    } finally {\n      if (_didIteratorError6) {\n        throw _iteratorError6;\n      }\n    }\n  }\n\n  return result;\n};\n\nvar Recoil_intersectSets = function Recoil_intersectSets(first) {\n  var ret = new Set();\n\n  for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    rest[_key2 - 1] = arguments[_key2];\n  }\n\n  var _iteratorNormalCompletion7 = true;\n  var _didIteratorError7 = false;\n  var _iteratorError7 = undefined;\n\n  try {\n    FIRST: for (var _iterator7 = first[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n      var value = _step7.value;\n      var _iteratorNormalCompletion8 = true;\n      var _didIteratorError8 = false;\n      var _iteratorError8 = undefined;\n\n      try {\n        for (var _iterator8 = rest[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n          var otherSet = _step8.value;\n          if (!otherSet.has(value)) continue FIRST;\n        }\n      } catch (err) {\n        _didIteratorError8 = true;\n        _iteratorError8 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n            _iterator8.return();\n          }\n        } finally {\n          if (_didIteratorError8) {\n            throw _iteratorError8;\n          }\n        }\n      }\n\n      ret.add(value);\n    }\n  } catch (err) {\n    _didIteratorError7 = true;\n    _iteratorError7 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n        _iterator7.return();\n      }\n    } finally {\n      if (_didIteratorError7) {\n        throw _iteratorError7;\n      }\n    }\n  }\n\n  return ret;\n};\n\nvar Recoil_invariant = function Recoil_invariant(condition, message) {\n  if (!condition) throw new Error(message);\n};\n\nvar Recoil_mergeMaps = function Recoil_mergeMaps() {\n  var result = new Map();\n\n  for (var _len3 = arguments.length, maps = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    maps[_key3] = arguments[_key3];\n  }\n\n  for (var i = 0; i < maps.length; i++) {\n    var iterator = maps[i].keys();\n    var nextKey = void 0;\n\n    for (; !(nextKey = iterator.next()).done;) {\n      result.set(nextKey.value, maps[i].get(nextKey.value));\n    }\n  }\n\n  return result;\n};\n\nvar useCallback = react.useCallback,\n    useEffect$1 = react.useEffect,\n    useMemo = react.useMemo,\n    useRef$1 = react.useRef,\n    useState$1 = react.useState,\n    peekNodeLoadable$2 = Recoil_FunctionalCore.peekNodeLoadable,\n    setNodeValue$3 = Recoil_FunctionalCore.setNodeValue,\n    DEFAULT_VALUE$2 = Recoil_Node.DEFAULT_VALUE,\n    getNode$2 = Recoil_Node.getNode,\n    nodes$1 = Recoil_Node.nodes,\n    useStoreRef$1 = Recoil_RecoilRoot_react.useStoreRef,\n    AbstractRecoilValue$2 = Recoil_RecoilValueInterface.AbstractRecoilValue,\n    getRecoilValueAsLoadable$2 = Recoil_RecoilValueInterface.getRecoilValueAsLoadable,\n    setRecoilValue$2 = Recoil_RecoilValueInterface.setRecoilValue,\n    setUnvalidatedRecoilValue$1 = Recoil_RecoilValueInterface.setUnvalidatedRecoilValue,\n    subscribeToRecoilValue$1 = Recoil_RecoilValueInterface.subscribeToRecoilValue,\n    valueFromValueOrUpdater$2 = Recoil_RecoilValueInterface.valueFromValueOrUpdater,\n    Snapshot$1 = require$$6.Snapshot,\n    cloneSnapshot$1 = require$$6.cloneSnapshot,\n    setByAddingToSet$2 = Recoil_CopyOnWrite.setByAddingToSet;\n\nfunction useInterface() {\n  var storeRef = useStoreRef$1(),\n      _useState$ = useState$1([]),\n      _useState$2 = _slicedToArray(_useState$, 2),\n      _ = _useState$2[0],\n      forceUpdate = _useState$2[1],\n      recoilValuesUsed = useRef$1(new Set());\n\n  recoilValuesUsed.current = new Set();\n  var previousSubscriptions = useRef$1(new Set()),\n      subscriptions = useRef$1(new Map()),\n      unsubscribeFrom = useCallback(function (key) {\n    var sub = subscriptions.current.get(key);\n    sub && (sub.release(storeRef.current), subscriptions.current.delete(key));\n  }, [storeRef, subscriptions]);\n  return useEffect$1(function () {\n    var store = storeRef.current;\n\n    function updateState(_state, key) {\n      subscriptions.current.has(key) && forceUpdate([]);\n    }\n\n    Recoil_differenceSets(recoilValuesUsed.current, previousSubscriptions.current).forEach(function (key) {\n      if (subscriptions.current.has(key)) return;\n      var sub = subscribeToRecoilValue$1(store, new AbstractRecoilValue$2(key), function (state) {\n        Recoil_Tracing.trace(\"RecoilValue subscription fired\", key, function () {\n          updateState(0, key);\n        });\n      });\n      subscriptions.current.set(key, sub), Recoil_Tracing.trace(\"initial update on subscribing\", key, function () {\n        updateState(store.getState(), key);\n      });\n    }), Recoil_differenceSets(previousSubscriptions.current, recoilValuesUsed.current).forEach(function (key) {\n      unsubscribeFrom(key);\n    }), previousSubscriptions.current = recoilValuesUsed.current;\n  }), useEffect$1(function () {\n    var subs = subscriptions.current;\n    return function () {\n      return subs.forEach(function (_, key) {\n        return unsubscribeFrom(key);\n      });\n    };\n  }, [unsubscribeFrom]), useMemo(function () {\n    function useSetRecoilState(recoilState) {\n      return function (newValueOrUpdater) {\n        var newValue = valueFromValueOrUpdater$2(storeRef.current, recoilState, newValueOrUpdater);\n        setRecoilValue$2(storeRef.current, recoilState, newValue);\n      };\n    }\n\n    function useRecoilValueLoadable(recoilValue) {\n      return recoilValuesUsed.current.has(recoilValue.key) || (recoilValuesUsed.current = setByAddingToSet$2(recoilValuesUsed.current, recoilValue.key)), getRecoilValueAsLoadable$2(storeRef.current, recoilValue);\n    }\n\n    function useRecoilValue(recoilValue) {\n      return function (loadable, atom, storeRef) {\n        if (\"hasValue\" === loadable.state) return loadable.contents;\n\n        if (\"loading\" === loadable.state) {\n          throw new Promise(function (resolve) {\n            storeRef.current.getState().suspendedComponentResolvers.add(resolve);\n          });\n        }\n\n        throw \"hasError\" === loadable.state ? loadable.contents : new Error(\"Invalid value of loadable atom \\\"\".concat(atom.key, \"\\\"\"));\n      }(useRecoilValueLoadable(recoilValue), recoilValue, storeRef);\n    }\n\n    return {\n      getRecoilValue: useRecoilValue,\n      getRecoilValueLoadable: useRecoilValueLoadable,\n      getRecoilState: function getRecoilState(recoilState) {\n        return [useRecoilValue(recoilState), useSetRecoilState(recoilState)];\n      },\n      getRecoilStateLoadable: function getRecoilStateLoadable(recoilState) {\n        return [useRecoilValueLoadable(recoilState), useSetRecoilState(recoilState)];\n      },\n      getSetRecoilState: useSetRecoilState,\n      getResetRecoilState: function getResetRecoilState(recoilState) {\n        return function () {\n          return setRecoilValue$2(storeRef.current, recoilState, DEFAULT_VALUE$2);\n        };\n      }\n    };\n  }, [recoilValuesUsed, storeRef]);\n}\n\nfunction useTransactionSubscription(callback) {\n  var storeRef = useStoreRef$1();\n  useEffect$1(function () {\n    return storeRef.current.subscribeToTransactions(callback).release;\n  }, [callback, storeRef]);\n}\n\nfunction useTreeStateClone_DEPRECATED() {\n  var _useState$3 = useState$1(0),\n      _useState$4 = _slicedToArray(_useState$3, 2),\n      _ = _useState$4[0],\n      setState = _useState$4[1];\n\n  useTransactionSubscription(useCallback(function () {\n    return setState(function (x) {\n      return x + 1;\n    });\n  }, []));\n  var storeRef = useStoreRef$1();\n  return {\n    transactionMetadata: _objectSpread({}, (state = storeRef.current.getState().currentTree).transactionMetadata),\n    atomValues: new Map(state.atomValues),\n    nonvalidatedAtoms: new Map(state.nonvalidatedAtoms),\n    dirtyAtoms: new Set(state.dirtyAtoms),\n    nodeDeps: new Map(state.nodeDeps),\n    nodeToNodeSubscriptions: Recoil_mapMap(state.nodeToNodeSubscriptions, function (keys) {\n      return new Set(keys);\n    }),\n    nodeToComponentSubscriptions: Recoil_mapMap(state.nodeToComponentSubscriptions, function (subsByAtom) {\n      return new Map(subsByAtom);\n    })\n  };\n  var state;\n}\n\nfunction externallyVisibleAtomValuesInState(state) {\n  var atomValues = state.atomValues,\n      persistedAtomContentsValues = Recoil_mapMap(Recoil_filterMap(atomValues, function (v, k) {\n    var _node$options;\n\n    var persistence = null === (_node$options = getNode$2(k).options) || void 0 === _node$options ? void 0 : _node$options.persistence_UNSTABLE;\n    return null != persistence && \"none\" !== persistence.type && \"hasValue\" === v.state;\n  }), function (v) {\n    return v.contents;\n  });\n  return Recoil_mergeMaps(state.nonvalidatedAtoms, persistedAtomContentsValues);\n}\n\nfunction useGotoRecoilSnapshot() {\n  var storeRef = useStoreRef$1();\n  return useCallback(function (snapshot) {\n    reactDom.unstable_batchedUpdates(function () {\n      storeRef.current.replaceState(function (prevState) {\n        var nextState = snapshot.getStore_INTERNAL().getState().currentTree,\n            updatedKeys = new Set();\n\n        for (var _i2 = 0, _arr = [prevState.atomValues.keys(), nextState.atomValues.keys()]; _i2 < _arr.length; _i2++) {\n          var keys = _arr[_i2];\n          var _iteratorNormalCompletion9 = true;\n          var _didIteratorError9 = false;\n          var _iteratorError9 = undefined;\n\n          try {\n            for (var _iterator9 = keys[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n              var key = _step9.value;\n\n              var _prevState$atomValues, _nextState$atomValues;\n\n              (null === (_prevState$atomValues = prevState.atomValues.get(key)) || void 0 === _prevState$atomValues ? void 0 : _prevState$atomValues.contents) !== (null === (_nextState$atomValues = nextState.atomValues.get(key)) || void 0 === _nextState$atomValues ? void 0 : _nextState$atomValues.contents) && updatedKeys.add(key);\n            }\n          } catch (err) {\n            _didIteratorError9 = true;\n            _iteratorError9 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n                _iterator9.return();\n              }\n            } finally {\n              if (_didIteratorError9) {\n                throw _iteratorError9;\n              }\n            }\n          }\n        }\n\n        return storeRef.current.fireNodeSubscriptions(updatedKeys, \"enqueue\"), _objectSpread({}, nextState, {\n          nodeToComponentSubscriptions: prevState.nodeToComponentSubscriptions\n        });\n      });\n    });\n  }, [storeRef]);\n}\n\nvar Sentinel = function Sentinel() {\n  _classCallCheck(this, Sentinel);\n};\n\nvar SENTINEL = new Sentinel();\nvar Recoil_Hooks = {\n  useRecoilCallback: function useRecoilCallback(fn, deps) {\n    var storeRef = useStoreRef$1(),\n        gotoSnapshot = useGotoRecoilSnapshot();\n    return useCallback(function () {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      var snapshot = cloneSnapshot$1(storeRef.current.getState().currentTree);\n\n      function set(recoilState, newValueOrUpdater) {\n        var newValue = valueFromValueOrUpdater$2(storeRef.current, recoilState, newValueOrUpdater);\n        setRecoilValue$2(storeRef.current, recoilState, newValue);\n      }\n\n      function reset(recoilState) {\n        setRecoilValue$2(storeRef.current, recoilState, DEFAULT_VALUE$2);\n      }\n\n      var ret = SENTINEL;\n      return reactDom.unstable_batchedUpdates(function () {\n        ret = fn({\n          set: set,\n          reset: reset,\n          snapshot: snapshot,\n          gotoSnapshot: gotoSnapshot\n        }).apply(void 0, args);\n      }), ret instanceof Sentinel && Recoil_invariant(!1), ret;\n    }, null != deps ? [].concat(_toConsumableArray(deps), [storeRef]) : void 0);\n  },\n  useRecoilValue: function useRecoilValue(recoilValue) {\n    return useInterface().getRecoilValue(recoilValue);\n  },\n  useRecoilValueLoadable: function useRecoilValueLoadable(recoilValue) {\n    return useInterface().getRecoilValueLoadable(recoilValue);\n  },\n  useRecoilState: function useRecoilState(recoilState) {\n    var recoilInterface = useInterface(),\n        _recoilInterface$getR = recoilInterface.getRecoilState(recoilState),\n        _recoilInterface$getR2 = _slicedToArray(_recoilInterface$getR, 1),\n        value = _recoilInterface$getR2[0];\n\n    return [value, useCallback(recoilInterface.getSetRecoilState(recoilState), [recoilState])];\n  },\n  useRecoilStateLoadable: function useRecoilStateLoadable(recoilState) {\n    var recoilInterface = useInterface(),\n        _recoilInterface$getR3 = recoilInterface.getRecoilStateLoadable(recoilState),\n        _recoilInterface$getR4 = _slicedToArray(_recoilInterface$getR3, 1),\n        value = _recoilInterface$getR4[0];\n\n    return [value, useCallback(recoilInterface.getSetRecoilState(recoilState), [recoilState])];\n  },\n  useSetRecoilState: function useSetRecoilState(recoilState) {\n    return useCallback(useInterface().getSetRecoilState(recoilState), [recoilState]);\n  },\n  useResetRecoilState: function useResetRecoilState(recoilState) {\n    return useCallback(useInterface().getResetRecoilState(recoilState), [recoilState]);\n  },\n  useRecoilInterface: useInterface,\n  useSnapshotWithStateChange_DEPRECATED: function useSnapshotWithStateChange_DEPRECATED(transaction) {\n    var storeRef = useStoreRef$1();\n    var snapshot = useTreeStateClone_DEPRECATED();\n    transaction(function (_ref10, updater) {\n      var key = _ref10.key;\n\n      var _setNodeValue$3 = setNodeValue$3(storeRef.current, snapshot, key, peekNodeLoadable$2(storeRef.current, snapshot, key).map(updater));\n\n      var _setNodeValue$4 = _slicedToArray(_setNodeValue$3, 1);\n\n      snapshot = _setNodeValue$4[0];\n    });\n    var atomValues = Recoil_mapMap(snapshot.atomValues, function (v) {\n      return v.contents;\n    }),\n        updatedAtoms = Recoil_intersectSets(snapshot.dirtyAtoms, new Set(atomValues.keys()));\n    return {\n      atomValues: atomValues,\n      updatedAtoms: updatedAtoms\n    };\n  },\n  useTransactionSubscription_DEPRECATED: useTransactionSubscription,\n  useTransactionObservation_DEPRECATED: function useTransactionObservation_DEPRECATED(callback) {\n    useTransactionSubscription(useCallback(function (store) {\n      var previousState = store.getState().currentTree;\n      var nextState = store.getState().nextTree;\n      nextState || (nextState = store.getState().currentTree);\n      var atomValues = externallyVisibleAtomValuesInState(nextState),\n          previousAtomValues = externallyVisibleAtomValuesInState(previousState),\n          atomInfo = Recoil_mapMap(nodes$1, function (node) {\n        var _node$options$persist, _node$options2, _node$options2$persis, _node$options$persist2, _node$options3, _node$options3$persis;\n\n        return {\n          persistence_UNSTABLE: {\n            type: null !== (_node$options$persist = null === (_node$options2 = node.options) || void 0 === _node$options2 || null === (_node$options2$persis = _node$options2.persistence_UNSTABLE) || void 0 === _node$options2$persis ? void 0 : _node$options2$persis.type) && void 0 !== _node$options$persist ? _node$options$persist : \"none\",\n            backButton: null !== (_node$options$persist2 = null === (_node$options3 = node.options) || void 0 === _node$options3 || null === (_node$options3$persis = _node$options3.persistence_UNSTABLE) || void 0 === _node$options3$persis ? void 0 : _node$options3$persis.backButton) && void 0 !== _node$options$persist2 && _node$options$persist2\n          }\n        };\n      }),\n          modifiedAtoms = new Set(nextState.dirtyAtoms);\n      callback({\n        atomValues: atomValues,\n        previousAtomValues: previousAtomValues,\n        atomInfo: atomInfo,\n        modifiedAtoms: modifiedAtoms,\n        transactionMetadata: _objectSpread({}, nextState.transactionMetadata)\n      });\n    }, [callback]));\n  },\n  useRecoilTransactionObserver: function useRecoilTransactionObserver(callback) {\n    useTransactionSubscription(useCallback(function (store) {\n      var previousState = store.getState().currentTree;\n      var nextState = store.getState().nextTree;\n      nextState || (nextState = previousState), callback({\n        snapshot: cloneSnapshot$1(nextState),\n        previousSnapshot: cloneSnapshot$1(previousState)\n      });\n    }, [callback]));\n  },\n  useRecoilSnapshot: function useRecoilSnapshot() {\n    var store = useStoreRef$1(),\n        _useState$5 = useState$1(function () {\n      return cloneSnapshot$1(store.current.getState().currentTree);\n    }),\n        _useState$6 = _slicedToArray(_useState$5, 2),\n        snapshot = _useState$6[0],\n        setSnapshot = _useState$6[1];\n\n    return useTransactionSubscription(useCallback(function (store) {\n      var _store$getState$nextT;\n\n      return setSnapshot(cloneSnapshot$1(null !== (_store$getState$nextT = store.getState().nextTree) && void 0 !== _store$getState$nextT ? _store$getState$nextT : store.getState().currentTree));\n    }, [])), snapshot;\n  },\n  useGoToSnapshot_DEPRECATED: function useGoToSnapshot_DEPRECATED() {\n    var storeRef = useStoreRef$1();\n    return function (snapshot) {\n      reactDom.unstable_batchedUpdates(function () {\n        snapshot.updatedAtoms.forEach(function (key) {\n          setRecoilValue$2(storeRef.current, new AbstractRecoilValue$2(key), snapshot.atomValues.get(key));\n        });\n      });\n    };\n  },\n  useGotoRecoilSnapshot: useGotoRecoilSnapshot,\n  useSetUnvalidatedAtomValues: function useSetUnvalidatedAtomValues() {\n    var storeRef = useStoreRef$1();\n    return function (values) {\n      var transactionMetadata = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      reactDom.unstable_batchedUpdates(function () {\n        storeRef.current.addTransactionMetadata(transactionMetadata), values.forEach(function (value, key) {\n          return setUnvalidatedRecoilValue$1(storeRef.current, new AbstractRecoilValue$2(key), value);\n        });\n      });\n    };\n  }\n};\n\nvar Recoil_isPromise = function Recoil_isPromise(p) {\n  return !!p && \"function\" == typeof p.then;\n};\n\nvar loadableAccessors = {\n  getValue: function getValue() {\n    if (\"hasValue\" !== this.state) throw this.contents;\n    return this.contents;\n  },\n  toPromise: function toPromise() {\n    return \"hasValue\" === this.state ? Promise.resolve(this.contents) : \"hasError\" === this.state ? Promise.reject(this.contents) : this.contents;\n  },\n  valueMaybe: function valueMaybe() {\n    return \"hasValue\" === this.state ? this.contents : void 0;\n  },\n  valueOrThrow: function valueOrThrow() {\n    if (\"hasValue\" !== this.state) throw new Error(\"Loadable expected value, but in \\\"\".concat(this.state, \"\\\" state\"));\n    return this.contents;\n  },\n  errorMaybe: function errorMaybe() {\n    return \"hasError\" === this.state ? this.contents : void 0;\n  },\n  errorOrThrow: function errorOrThrow() {\n    if (\"hasError\" !== this.state) throw new Error(\"Loadable expected error, but in \\\"\".concat(this.state, \"\\\" state\"));\n    return this.contents;\n  },\n  promiseMaybe: function promiseMaybe() {\n    return \"loading\" === this.state ? this.contents : void 0;\n  },\n  promiseOrThrow: function promiseOrThrow() {\n    if (\"loading\" !== this.state) throw new Error(\"Loadable expected promise, but in \\\"\".concat(this.state, \"\\\" state\"));\n    return this.contents;\n  },\n  map: function map(_map) {\n    var _this3 = this;\n\n    if (\"hasError\" === this.state) return this;\n    if (\"hasValue\" === this.state) try {\n      var next = _map(this.contents);\n\n      return Recoil_isPromise(next) ? loadableWithPromise(next) : loadableWithValue(next);\n    } catch (e) {\n      return Recoil_isPromise(e) ? loadableWithPromise(e.next(function () {\n        return _map(_this3.contents);\n      })) : loadableWithError(e);\n    }\n    if (\"loading\" === this.state) return loadableWithPromise(this.contents.then(_map).catch(function (e) {\n      if (Recoil_isPromise(e)) return e.then(function () {\n        return _map(_this3.contents);\n      });\n      throw e;\n    }));\n    throw new Error(\"Invalid Loadable state\");\n  }\n};\n\nfunction loadableWithValue(value) {\n  return Object.freeze(_objectSpread({\n    state: \"hasValue\",\n    contents: value\n  }, loadableAccessors));\n}\n\nfunction loadableWithError(error) {\n  return Object.freeze(_objectSpread({\n    state: \"hasError\",\n    contents: error\n  }, loadableAccessors));\n}\n\nfunction loadableWithPromise(promise) {\n  return Object.freeze(_objectSpread({\n    state: \"loading\",\n    contents: promise\n  }, loadableAccessors));\n}\n\nvar Recoil_Loadable = {\n  loadableWithValue: loadableWithValue,\n  loadableWithError: loadableWithError,\n  loadableWithPromise: loadableWithPromise,\n  loadableLoading: function loadableLoading() {\n    return loadableWithPromise(new Promise(function () {}));\n  },\n  loadableAll: function loadableAll(inputs) {\n    return inputs.every(function (i) {\n      return \"hasValue\" === i.state;\n    }) ? loadableWithValue(inputs.map(function (i) {\n      return i.contents;\n    })) : inputs.some(function (i) {\n      return \"hasError\" === i.state;\n    }) ? loadableWithError(Recoil_nullthrows(inputs.find(function (i) {\n      return \"hasError\" === i.state;\n    }), \"Invalid loadable passed to loadableAll\").contents) : loadableWithPromise(Promise.all(inputs.map(function (i) {\n      return i.contents;\n    })));\n  }\n};\n\nvar Recoil_isNode = function Recoil_isNode(object) {\n  var _ownerDocument, _doc$defaultView;\n\n  if (\"undefined\" == typeof window) return !1;\n  var defaultView = null !== (_doc$defaultView = (null != object ? null !== (_ownerDocument = object.ownerDocument) && void 0 !== _ownerDocument ? _ownerDocument : object : document).defaultView) && void 0 !== _doc$defaultView ? _doc$defaultView : window;\n  return !(null == object || !(\"function\" == typeof defaultView.Node ? object instanceof defaultView.Node : \"object\" == typeof object && \"number\" == typeof object.nodeType && \"string\" == typeof object.nodeName));\n};\n\nvar Recoil_deepFreezeValue = function deepFreezeValue(value) {\n  if (\"object\" == typeof value && !function (value) {\n    if (null === value || \"object\" != typeof value) return !0;\n\n    switch (typeof value.$$typeof) {\n      case \"symbol\":\n      case \"number\":\n        return !0;\n    }\n\n    return null != value[\"@@__IMMUTABLE_ITERABLE__@@\"] || null != value[\"@@__IMMUTABLE_KEYED__@@\"] || null != value[\"@@__IMMUTABLE_INDEXED__@@\"] || null != value[\"@@__IMMUTABLE_ORDERED__@@\"] || null != value[\"@@__IMMUTABLE_RECORD__@@\"] || !!Recoil_isNode(value) || !!Recoil_isPromise(value);\n  }(value)) {\n    Object.freeze(value);\n\n    for (var key in value) {\n      if (Object.prototype.hasOwnProperty.call(value, key)) {\n        var prop = value[key];\n        \"object\" != typeof prop || null == prop || Object.isFrozen(prop) || deepFreezeValue(prop);\n      }\n    }\n\n    Object.seal(value);\n  }\n};\n\nvar LEAF = Symbol(\"ArrayKeyedMap\"),\n    emptyMap$1 = new Map();\n\nvar ArrayKeyedMap = /*#__PURE__*/function () {\n  function ArrayKeyedMap(existing) {\n    _classCallCheck(this, ArrayKeyedMap);\n\n    if (this._base = new Map(), existing instanceof ArrayKeyedMap) {\n      var _iteratorNormalCompletion10 = true;\n      var _didIteratorError10 = false;\n      var _iteratorError10 = undefined;\n\n      try {\n        for (var _iterator10 = existing.entries()[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n          var _step10$value = _slicedToArray(_step10.value, 2),\n              k = _step10$value[0],\n              v = _step10$value[1];\n\n          this.set(k, v);\n        }\n      } catch (err) {\n        _didIteratorError10 = true;\n        _iteratorError10 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n            _iterator10.return();\n          }\n        } finally {\n          if (_didIteratorError10) {\n            throw _iteratorError10;\n          }\n        }\n      }\n    } else if (existing) {\n      var _iteratorNormalCompletion11 = true;\n      var _didIteratorError11 = false;\n      var _iteratorError11 = undefined;\n\n      try {\n        for (var _iterator11 = existing[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n          var _step11$value = _slicedToArray(_step11.value, 2),\n              _k = _step11$value[0],\n              _v = _step11$value[1];\n\n          this.set(_k, _v);\n        }\n      } catch (err) {\n        _didIteratorError11 = true;\n        _iteratorError11 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n            _iterator11.return();\n          }\n        } finally {\n          if (_didIteratorError11) {\n            throw _iteratorError11;\n          }\n        }\n      }\n    }\n\n    return this;\n  }\n\n  _createClass(ArrayKeyedMap, [{\n    key: \"get\",\n    value: function get(key) {\n      var ks = Array.isArray(key) ? key : [key];\n      var map = this._base;\n      return ks.forEach(function (k) {\n        var _map$get;\n\n        map = null !== (_map$get = map.get(k)) && void 0 !== _map$get ? _map$get : emptyMap$1;\n      }), void 0 === map ? void 0 : map.get(LEAF);\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      var ks = Array.isArray(key) ? key : [key];\n      var map = this._base,\n          next = map;\n      return ks.forEach(function (k) {\n        next = map.get(k), next || (next = new Map(), map.set(k, next)), map = next;\n      }), next.set(LEAF, value), this;\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      var ks = Array.isArray(key) ? key : [key];\n      var map = this._base,\n          next = map;\n      return ks.forEach(function (k) {\n        next = map.get(k), next || (next = new Map(), map.set(k, next)), map = next;\n      }), next.delete(LEAF), this;\n    }\n  }, {\n    key: \"entries\",\n    value: function entries() {\n      var answer = [];\n      return function recurse(level, prefix) {\n        level.forEach(function (v, k) {\n          k === LEAF ? answer.push([prefix, v]) : recurse(v, prefix.concat(k));\n        });\n      }(this._base, []), answer.values();\n    }\n  }, {\n    key: \"toBuiltInMap\",\n    value: function toBuiltInMap() {\n      return new Map(this.entries());\n    }\n  }]);\n\n  return ArrayKeyedMap;\n}();\n\nvar Recoil_ArrayKeyedMap = ArrayKeyedMap;\n\nvar Recoil_cacheWithReferenceEquality = function Recoil_cacheWithReferenceEquality() {\n  return new Recoil_ArrayKeyedMap();\n};\n\nvar Recoil_everySet = function Recoil_everySet(set, callback, context) {\n  var iterator = set.entries();\n  var current = iterator.next();\n\n  for (; !current.done;) {\n    var entry = current.value;\n    if (!callback.call(context, entry[1], entry[0], set)) return !1;\n    current = iterator.next();\n  }\n\n  return !0;\n};\n\nvar Recoil_equalsSet = function Recoil_equalsSet(one, two) {\n  return one.size === two.size && Recoil_everySet(one, function (value) {\n    return two.has(value);\n  });\n};\n\nvar Recoil_PerformanceTimings = {\n  startPerfBlock: function startPerfBlock(_id) {\n    return function () {\n      return null;\n    };\n  }\n};\nObject.freeze(new Set());\nvar mapBySettingInMap$2 = Recoil_CopyOnWrite.mapBySettingInMap,\n    mapByUpdatingInMap$2 = Recoil_CopyOnWrite.mapByUpdatingInMap,\n    setByAddingToSet$3 = Recoil_CopyOnWrite.setByAddingToSet,\n    setByDeletingFromSet$1 = Recoil_CopyOnWrite.setByDeletingFromSet,\n    detectCircularDependencies$1 = Recoil_FunctionalCore.detectCircularDependencies,\n    getNodeLoadable$2 = Recoil_FunctionalCore.getNodeLoadable,\n    setNodeValue$4 = Recoil_FunctionalCore.setNodeValue,\n    loadableWithError$1 = Recoil_Loadable.loadableWithError,\n    loadableWithPromise$1 = Recoil_Loadable.loadableWithPromise,\n    loadableWithValue$1 = Recoil_Loadable.loadableWithValue,\n    DEFAULT_VALUE$3 = Recoil_Node.DEFAULT_VALUE,\n    RecoilValueNotReady$2 = Recoil_Node.RecoilValueNotReady,\n    registerNode$1 = Recoil_Node.registerNode,\n    startPerfBlock$1 = Recoil_PerformanceTimings.startPerfBlock,\n    isRecoilValue$1 = require$$2.isRecoilValue,\n    emptySet$2 = Object.freeze(new Set());\n\nfunction cacheKeyFromDepValues(depValues) {\n  var answer = [];\n  var _iteratorNormalCompletion12 = true;\n  var _didIteratorError12 = false;\n  var _iteratorError12 = undefined;\n\n  try {\n    for (var _iterator12 = Array.from(depValues.keys()).sort()[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n      var key = _step12.value;\n      var loadable = Recoil_nullthrows(depValues.get(key));\n      answer.push(key), answer.push(loadable.contents);\n    }\n  } catch (err) {\n    _didIteratorError12 = true;\n    _iteratorError12 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n        _iterator12.return();\n      }\n    } finally {\n      if (_didIteratorError12) {\n        throw _iteratorError12;\n      }\n    }\n  }\n\n  return answer;\n}\n\nvar Recoil_selector = function Recoil_selector(options) {\n  var key = options.key,\n      get = options.get,\n      cacheImplementation = options.cacheImplementation_UNSTABLE,\n      _set = null != options.set ? options.set : void 0;\n\n  var cache = null != cacheImplementation ? cacheImplementation : Recoil_cacheWithReferenceEquality();\n\n  function getFromCache(store, state) {\n    var _state$nodeDeps$get;\n\n    var newState = state;\n    var currentDeps = null !== (_state$nodeDeps$get = state.nodeDeps.get(key)) && void 0 !== _state$nodeDeps$get ? _state$nodeDeps$get : emptySet$2,\n        cacheKey = cacheKeyFromDepValues(new Map(Array.from(currentDeps).sort().map(function (depKey) {\n      var _getNodeLoadable$3 = getNodeLoadable$2(store, newState, depKey),\n          _getNodeLoadable$4 = _slicedToArray(_getNodeLoadable$3, 2),\n          nextState = _getNodeLoadable$4[0],\n          loadable = _getNodeLoadable$4[1];\n\n      return newState = nextState, [depKey, loadable];\n    }))),\n        cached = cache.get(cacheKey);\n    if (null != cached) return [newState, cached];\n\n    var _ref11 = function (store, state) {\n      var _state$nodeDeps$get2;\n\n      var _ref13 = function (store, state) {\n        var endPerfBlock = startPerfBlock$1(key);\n        var newState = state;\n        var depValues = new Map();\n\n        function getRecoilValue(_ref15) {\n          var _getNodeLoadable$5, _getNodeLoadable$6;\n\n          var key = _ref15.key;\n          var loadable;\n          if ((_getNodeLoadable$5 = getNodeLoadable$2(store, newState, key), _getNodeLoadable$6 = _slicedToArray(_getNodeLoadable$5, 2), newState = _getNodeLoadable$6[0], loadable = _getNodeLoadable$6[1], _getNodeLoadable$5), depValues.set(key, loadable), \"hasValue\" === loadable.state) return loadable.contents;\n          throw loadable.contents;\n        }\n\n        try {\n          var output = get({\n            get: getRecoilValue\n          }),\n              result = isRecoilValue$1(output) ? getRecoilValue(output) : output,\n              _loadable = Recoil_isPromise(result) ? loadableWithPromise$1(result.finally(endPerfBlock)) : (endPerfBlock(), loadableWithValue$1(result));\n\n          return [newState, _loadable, depValues];\n        } catch (errorOrDepPromise) {\n          var _loadable2 = Recoil_isPromise(errorOrDepPromise) ? loadableWithPromise$1(errorOrDepPromise.then(function () {\n            var loadable = loadableWithError$1(new Error(\"Internal Recoil Selector Error\"));\n            if (store.replaceState(function (asyncState) {\n              var _getFromCache, _getFromCache2;\n\n              var newAsyncState;\n              return (_getFromCache = getFromCache(store, asyncState), _getFromCache2 = _slicedToArray(_getFromCache, 2), newAsyncState = _getFromCache2[0], loadable = _getFromCache2[1], _getFromCache), newAsyncState;\n            }), \"hasError\" === loadable.state) throw loadable.contents;\n            return loadable.contents;\n          }).finally(endPerfBlock)) : (endPerfBlock(), loadableWithError$1(errorOrDepPromise));\n\n          return [newState, _loadable2, depValues];\n        }\n      }(store, state),\n          _ref14 = _slicedToArray(_ref13, 3),\n          newStateFromEvaluate = _ref14[0],\n          loadable = _ref14[1],\n          newDepValues = _ref14[2];\n\n      var newState = newStateFromEvaluate;\n      var oldDeps = null !== (_state$nodeDeps$get2 = state.nodeDeps.get(key)) && void 0 !== _state$nodeDeps$get2 ? _state$nodeDeps$get2 : emptySet$2,\n          newDeps = new Set(newDepValues.keys());\n      newState = Recoil_equalsSet(oldDeps, newDeps) ? newState : _objectSpread({}, newState, {\n        nodeDeps: mapBySettingInMap$2(newState.nodeDeps, key, newDeps)\n      });\n      var addedDeps = Recoil_differenceSets(newDeps, oldDeps),\n          removedDeps = Recoil_differenceSets(oldDeps, newDeps);\n      var _iteratorNormalCompletion13 = true;\n      var _didIteratorError13 = false;\n      var _iteratorError13 = undefined;\n\n      try {\n        for (var _iterator13 = addedDeps[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n          var upstreamNode = _step13.value;\n          newState = _objectSpread({}, newState, {\n            nodeToNodeSubscriptions: mapByUpdatingInMap$2(newState.nodeToNodeSubscriptions, upstreamNode, function (subs) {\n              return setByAddingToSet$3(null != subs ? subs : emptySet$2, key);\n            })\n          });\n        }\n      } catch (err) {\n        _didIteratorError13 = true;\n        _iteratorError13 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion13 && _iterator13.return != null) {\n            _iterator13.return();\n          }\n        } finally {\n          if (_didIteratorError13) {\n            throw _iteratorError13;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion14 = true;\n      var _didIteratorError14 = false;\n      var _iteratorError14 = undefined;\n\n      try {\n        for (var _iterator14 = removedDeps[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n          var _upstreamNode = _step14.value;\n          newState = _objectSpread({}, newState, {\n            nodeToNodeSubscriptions: mapByUpdatingInMap$2(newState.nodeToNodeSubscriptions, _upstreamNode, function (subs) {\n              return setByDeletingFromSet$1(null != subs ? subs : emptySet$2, key);\n            })\n          });\n        }\n      } catch (err) {\n        _didIteratorError14 = true;\n        _iteratorError14 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion14 && _iterator14.return != null) {\n            _iterator14.return();\n          }\n        } finally {\n          if (_didIteratorError14) {\n            throw _iteratorError14;\n          }\n        }\n      }\n\n      return [newState, loadable, newDepValues];\n    }(store, newState),\n        _ref12 = _slicedToArray(_ref11, 3),\n        nextState = _ref12[0],\n        loadable = _ref12[1],\n        newDepValues = _ref12[2];\n\n    newState = nextState;\n    var newCacheKey = cacheKeyFromDepValues(newDepValues);\n    return function (store, cacheKey, loadable) {\n      \"loading\" !== loadable.state ? !0 == !options.dangerouslyAllowMutability && Recoil_deepFreezeValue(loadable.contents) : loadable.contents.then(function (result) {\n        return !0 == !options.dangerouslyAllowMutability && Recoil_deepFreezeValue(result), cache = cache.set(cacheKey, loadableWithValue$1(result)), store.fireNodeSubscriptions(new Set([key]), \"now\"), result;\n      }).catch(function (error) {\n        return Recoil_isPromise(error) || (!0 == !options.dangerouslyAllowMutability && Recoil_deepFreezeValue(error), cache = cache.set(cacheKey, loadableWithError$1(error)), store.fireNodeSubscriptions(new Set([key]), \"now\")), error;\n      }), cache = cache.set(cacheKey, loadable);\n    }(store, newCacheKey, loadable), [newState, loadable];\n  }\n\n  function myGet(store, state) {\n    return getFromCache(store, state);\n  }\n\n  if (null != _set) {\n    return registerNode$1({\n      key: key,\n      options: options,\n      get: myGet,\n      set: function set(store, state, newValue) {\n        var newState = state;\n        var writtenNodes = new Set();\n\n        function getRecoilValue(_ref16) {\n          var key = _ref16.key;\n\n          var _getNodeLoadable$7 = getNodeLoadable$2(store, newState, key),\n              _getNodeLoadable$8 = _slicedToArray(_getNodeLoadable$7, 2),\n              nextState = _getNodeLoadable$8[0],\n              loadable = _getNodeLoadable$8[1];\n\n          if (newState = nextState, \"hasValue\" === loadable.state) return loadable.contents;\n          throw \"loading\" === loadable.state ? new RecoilValueNotReady$2(key) : loadable.contents;\n        }\n\n        function setRecoilState(recoilState, valueOrUpdater) {\n          var _setNodeValue$5, _setNodeValue$6;\n\n          var newValue = \"function\" == typeof valueOrUpdater ? valueOrUpdater(getRecoilValue(recoilState)) : valueOrUpdater;\n          var written;\n          (_setNodeValue$5 = setNodeValue$4(store, newState, recoilState.key, newValue), _setNodeValue$6 = _slicedToArray(_setNodeValue$5, 2), newState = _setNodeValue$6[0], written = _setNodeValue$6[1], _setNodeValue$5), written.forEach(function (atom) {\n            return writtenNodes.add(atom);\n          });\n        }\n\n        return _set({\n          set: setRecoilState,\n          get: getRecoilValue,\n          reset: function reset(recoilState) {\n            setRecoilState(recoilState, DEFAULT_VALUE$3);\n          }\n        }, newValue), [newState, writtenNodes];\n      }\n    });\n  }\n\n  return registerNode$1({\n    key: key,\n    options: options,\n    get: myGet\n  });\n};\n\nvar loadableWithValue$2 = Recoil_Loadable.loadableWithValue,\n    DEFAULT_VALUE$4 = Recoil_Node.DEFAULT_VALUE,\n    DefaultValue$1 = Recoil_Node.DefaultValue,\n    registerNode$2 = Recoil_Node.registerNode,\n    isRecoilValue$2 = require$$2.isRecoilValue,\n    mapByDeletingFromMap$2 = Recoil_CopyOnWrite.mapByDeletingFromMap,\n    mapBySettingInMap$3 = Recoil_CopyOnWrite.mapBySettingInMap,\n    setByAddingToSet$4 = Recoil_CopyOnWrite.setByAddingToSet;\n\nfunction atom(options) {\n  var optionsDefault = options.default,\n      restOptions = _objectWithoutProperties(options, [\"default\"]);\n\n  return isRecoilValue$2(optionsDefault) || Recoil_isPromise(optionsDefault) ? function (options) {\n    var base = atom(_objectSpread({}, options, {\n      default: DEFAULT_VALUE$4,\n      persistence_UNSTABLE: void 0 === options.persistence_UNSTABLE ? void 0 : _objectSpread({}, options.persistence_UNSTABLE, {\n        validator: function validator(storedValue) {\n          return storedValue instanceof DefaultValue$1 ? storedValue : Recoil_nullthrows(options.persistence_UNSTABLE).validator(storedValue, DEFAULT_VALUE$4);\n        }\n      })\n    }));\n    return Recoil_selector({\n      key: options.key + \"__withFallback\",\n      get: function get(_ref17) {\n        var _get = _ref17.get;\n\n        var baseValue = _get(base);\n\n        return baseValue instanceof DefaultValue$1 ? options.default : baseValue;\n      },\n      set: function set(_ref18, newValue) {\n        var _set2 = _ref18.set;\n        return _set2(base, newValue);\n      },\n      dangerouslyAllowMutability: options.dangerouslyAllowMutability\n    });\n  }(_objectSpread({}, restOptions, {\n    default: optionsDefault\n  })) : function (options) {\n    var key = options.key,\n        persistence = options.persistence_UNSTABLE;\n    return registerNode$2({\n      key: key,\n      options: options,\n      get: function get(_store, state) {\n        if (state.atomValues.has(key)) return [state, Recoil_nullthrows(state.atomValues.get(key))];\n\n        if (state.nonvalidatedAtoms.has(key)) {\n          if (null == persistence) return [state, loadableWithValue$2(options.default)];\n          var nonvalidatedValue = state.nonvalidatedAtoms.get(key),\n              validatedValue = persistence.validator(nonvalidatedValue, DEFAULT_VALUE$4);\n          return validatedValue instanceof DefaultValue$1 ? [_objectSpread({}, state, {\n            nonvalidatedAtoms: mapByDeletingFromMap$2(state.nonvalidatedAtoms, key)\n          }), loadableWithValue$2(options.default)] : [_objectSpread({}, state, {\n            atomValues: mapBySettingInMap$3(state.atomValues, key, loadableWithValue$2(validatedValue)),\n            nonvalidatedAtoms: mapByDeletingFromMap$2(state.nonvalidatedAtoms, key)\n          }), loadableWithValue$2(validatedValue)];\n        }\n\n        return [state, loadableWithValue$2(options.default)];\n      },\n      set: function set(_store, state, newValue) {\n        return !0 !== options.dangerouslyAllowMutability && Recoil_deepFreezeValue(newValue), [_objectSpread({}, state, {\n          dirtyAtoms: setByAddingToSet$4(state.dirtyAtoms, key),\n          atomValues: newValue instanceof DefaultValue$1 ? mapByDeletingFromMap$2(state.atomValues, key) : mapBySettingInMap$3(state.atomValues, key, loadableWithValue$2(newValue)),\n          nonvalidatedAtoms: mapByDeletingFromMap$2(state.nonvalidatedAtoms, key)\n        }), new Set([key])];\n      }\n    });\n  }(_objectSpread({}, restOptions, {\n    default: optionsDefault\n  }));\n}\n\nvar Recoil_atom = atom;\n\nvar Recoil_stableStringify = function Recoil_stableStringify(x) {\n  var opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    allowFunctions: !1\n  };\n  return function stringify(x, opt, key) {\n    if (\"string\" == typeof x && !x.includes('\"') && !x.includes(\"\\\\\")) return \"\\\"\".concat(x, \"\\\"\");\n\n    switch (typeof x) {\n      case \"undefined\":\n        return \"\";\n\n      case \"boolean\":\n        return x ? \"true\" : \"false\";\n\n      case \"number\":\n      case \"symbol\":\n        return String(x);\n\n      case \"string\":\n        return JSON.stringify(x);\n\n      case \"function\":\n        if (!0 !== (null == opt ? void 0 : opt.allowFunctions)) throw new Error(\"Attempt to serialize function in a Recoil cache key\");\n        return \"__FUNCTION(\".concat(x.name, \")__\");\n    }\n\n    return null === x ? \"null\" : \"object\" != typeof x ? null !== (_JSON$stringify = JSON.stringify(x)) && void 0 !== _JSON$stringify ? _JSON$stringify : \"\" : Recoil_isPromise(x) ? \"__PROMISE__\" : Array.isArray(x) ? \"[\".concat(x.map(function (v, i) {\n      return stringify(v, opt, i.toString());\n    }), \"]\") : \"function\" == typeof x.toJSON ? stringify(x.toJSON(key), opt, key) : x instanceof Map ? stringify(Array.from(x).reduce(function (obj, _ref19) {\n      var _ref20 = _slicedToArray(_ref19, 2),\n          k = _ref20[0],\n          v = _ref20[1];\n\n      return _objectSpread({}, obj, _defineProperty2({}, \"string\" == typeof k ? k : stringify(k, opt), v));\n    }, {}), opt, key) : x instanceof Set ? stringify(Array.from(x).sort(function (a, b) {\n      return stringify(a, opt).localeCompare(stringify(b, opt));\n    }), opt, key) : null != x[Symbol.iterator] && \"function\" == typeof x[Symbol.iterator] ? stringify(Array.from(x), opt, key) : \"{\".concat(Object.keys(x).filter(function (key) {\n      return void 0 !== x[key];\n    }).sort().map(function (key) {\n      return \"\".concat(stringify(key, opt), \":\").concat(stringify(x[key], opt, key));\n    }).join(\",\"), \"}\");\n\n    var _JSON$stringify;\n  }(x, opt);\n};\n\nvar Recoil_cacheWithValueEquality = function Recoil_cacheWithValueEquality() {\n  var map = new Map(),\n      cache = {\n    get: function get(key) {\n      return map.get(Recoil_stableStringify(key));\n    },\n    set: function set(key, value) {\n      return map.set(Recoil_stableStringify(key), value), cache;\n    },\n    map: map\n  };\n  return cache;\n};\n\nvar nextIndex = 0;\n\nvar Recoil_selectorFamily = function Recoil_selectorFamily(options) {\n  var _options$cacheImpleme, _options$cacheImpleme2;\n\n  var selectorCache = null !== (_options$cacheImpleme = null === (_options$cacheImpleme2 = options.cacheImplementationForParams_UNSTABLE) || void 0 === _options$cacheImpleme2 ? void 0 : _options$cacheImpleme2.call(options)) && void 0 !== _options$cacheImpleme ? _options$cacheImpleme : Recoil_cacheWithValueEquality();\n  return function (params) {\n    var _stableStringify, _options$cacheImpleme3;\n\n    var cachedSelector = selectorCache.get(params);\n    if (null != cachedSelector) return cachedSelector;\n\n    var myKey = \"\".concat(options.key, \"__selectorFamily/\").concat(null !== (_stableStringify = Recoil_stableStringify(params, {\n      allowFunctions: !0\n    })) && void 0 !== _stableStringify ? _stableStringify : \"void\", \"/\").concat(nextIndex++),\n        myGet = function myGet(callbacks) {\n      return options.get(params)(callbacks);\n    },\n        myCacheImplementation = null === (_options$cacheImpleme3 = options.cacheImplementation_UNSTABLE) || void 0 === _options$cacheImpleme3 ? void 0 : _options$cacheImpleme3.call(options);\n\n    var newSelector;\n\n    if (null != options.set) {\n      var _set3 = options.set;\n      newSelector = Recoil_selector({\n        key: myKey,\n        get: myGet,\n        set: function set(callbacks, newValue) {\n          return _set3(params)(callbacks, newValue);\n        },\n        cacheImplementation_UNSTABLE: myCacheImplementation,\n        dangerouslyAllowMutability: options.dangerouslyAllowMutability\n      });\n    } else newSelector = Recoil_selector({\n      key: myKey,\n      get: myGet,\n      cacheImplementation_UNSTABLE: myCacheImplementation,\n      dangerouslyAllowMutability: options.dangerouslyAllowMutability\n    });\n\n    return selectorCache = selectorCache.set(params, newSelector), newSelector;\n  };\n},\n    ParameterizedAtomTaggedValue_DEPRECATED = getCjsExportFromNamespace(Object.freeze({\n  __proto__: null\n}));\n\nvar DEFAULT_VALUE$5 = Recoil_Node.DEFAULT_VALUE,\n    DefaultValue$2 = Recoil_Node.DefaultValue;\n\nfunction isSuperset(setA, setB) {\n  return Recoil_everySet(setB, function (b) {\n    return setA.has(b);\n  });\n}\n\nvar pick = function pick(object, chosenKeys) {\n  return Array.from(chosenKeys).reduce(function (obj, key) {\n    return _objectSpread({}, obj, _defineProperty2({}, key, object[key]));\n  }, {});\n};\n\nfunction mapPersistenceSettings_DEPRECATED(settings) {\n  if (null == settings) return;\n  var passthrough = Object.assign({}, settings);\n  return _objectSpread({}, passthrough, {\n    validator: function validator(storedValue) {\n      return storedValue instanceof ParameterizedAtomTaggedValue_DEPRECATED ? new ParameterizedAtomTaggedValue_DEPRECATED(storedValue.value.filter(function (_ref21) {\n        var _ref22 = _slicedToArray(_ref21, 2),\n            keys = _ref22[0],\n            map = _ref22[1];\n\n        return keys instanceof Set && map instanceof Map;\n      }).map(function (_ref23) {\n        var _ref24 = _slicedToArray(_ref23, 2),\n            keys = _ref24[0],\n            map = _ref24[1];\n\n        return [keys, Array.from(map.entries()).reduce(function (acc, _ref25) {\n          var _ref26 = _slicedToArray(_ref25, 2),\n              k = _ref26[0],\n              v = _ref26[1];\n\n          var validatedValue = passthrough.validator(v, DEFAULT_VALUE$5);\n          return validatedValue instanceof DefaultValue$2 || acc.set(k, validatedValue), acc;\n        }, new Map())];\n      })) : passthrough.validator(storedValue, DEFAULT_VALUE$5);\n    }\n  });\n}\n\nvar Recoil_atomFamily = function Recoil_atomFamily(options) {\n  var atomCache = Recoil_cacheWithValueEquality();\n  var legacyAtomOptions = {\n    key: options.key,\n    default: DEFAULT_VALUE$5,\n    persistence_UNSTABLE: mapPersistenceSettings_DEPRECATED(options.persistence_UNSTABLE)\n  };\n  var legacyAtom;\n  legacyAtom = Recoil_atom(legacyAtomOptions);\n  var atomFamilyDefault = Recoil_selectorFamily({\n    key: options.key + \"__atomFamily/Default\",\n    get: function get(param) {\n      return function (_ref27) {\n        var get = _ref27.get;\n        var legacyValue = get(\"function\" == typeof legacyAtom ? legacyAtom(param) : legacyAtom);\n\n        if (!(legacyValue instanceof DefaultValue$2)) {\n          var upgradedValue = function (baseValue, parameter) {\n            if (!(baseValue instanceof ParameterizedAtomTaggedValue_DEPRECATED)) return baseValue;\n            if (\"object\" != typeof parameter || null == parameter || Array.isArray(parameter)) return DEFAULT_VALUE$5;\n            var entries = baseValue.value,\n                parameterKeys = new Set(Object.keys(parameter));\n            var _iteratorNormalCompletion15 = true;\n            var _didIteratorError15 = false;\n            var _iteratorError15 = undefined;\n\n            try {\n              for (var _iterator15 = entries[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {\n                var _step15$value = _slicedToArray(_step15.value, 2),\n                    entryParameterKeys = _step15$value[0],\n                    entryMap = _step15$value[1];\n\n                if (isSuperset(parameterKeys, entryParameterKeys)) {\n                  var contextOrSubcontext = parameterKeys.size === entryParameterKeys.size ? parameter : pick(parameter, entryParameterKeys),\n                      value = entryMap.get(Recoil_stableStringify(contextOrSubcontext));\n                  if (void 0 !== value) return value;\n                }\n              }\n            } catch (err) {\n              _didIteratorError15 = true;\n              _iteratorError15 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion15 && _iterator15.return != null) {\n                  _iterator15.return();\n                }\n              } finally {\n                if (_didIteratorError15) {\n                  throw _iteratorError15;\n                }\n              }\n            }\n\n            return DEFAULT_VALUE$5;\n          }(legacyValue, param);\n\n          if (!(upgradedValue instanceof DefaultValue$2)) return upgradedValue;\n        }\n\n        return \"function\" == typeof options.default ? options.default(param) : options.default;\n      };\n    },\n    dangerouslyAllowMutability: options.dangerouslyAllowMutability\n  });\n  return function (params) {\n    var _stableStringify;\n\n    var cachedAtom = atomCache.get(params);\n    if (null != cachedAtom) return cachedAtom;\n    var newAtom = Recoil_atom({\n      key: \"\".concat(options.key, \"__\").concat(null !== (_stableStringify = Recoil_stableStringify(params)) && void 0 !== _stableStringify ? _stableStringify : \"void\"),\n      default: atomFamilyDefault(params),\n      persistence_UNSTABLE: options.persistence_UNSTABLE,\n      dangerouslyAllowMutability: options.dangerouslyAllowMutability\n    });\n    return atomCache = atomCache.set(params, newAtom), newAtom;\n  };\n};\n\nvar constantSelector = Recoil_selectorFamily({\n  key: \"__constant\",\n  get: function get(constant) {\n    return function () {\n      return constant;\n    };\n  },\n  cacheImplementationForParams_UNSTABLE: Recoil_cacheWithReferenceEquality\n});\n\nvar Recoil_constSelector = function Recoil_constSelector(constant) {\n  return constantSelector(constant);\n};\n\nvar throwingSelector = Recoil_selectorFamily({\n  key: \"__error\",\n  get: function get(message) {\n    return function () {\n      throw new Error(message);\n    };\n  },\n  cacheImplementationForParams_UNSTABLE: Recoil_cacheWithReferenceEquality\n});\n\nvar Recoil_errorSelector = function Recoil_errorSelector(message) {\n  return throwingSelector(message);\n};\n\nvar Recoil_readOnlySelector = function Recoil_readOnlySelector(atom) {\n  return atom;\n};\n\nvar loadableWithError$2 = Recoil_Loadable.loadableWithError,\n    loadableWithPromise$2 = Recoil_Loadable.loadableWithPromise,\n    loadableWithValue$3 = Recoil_Loadable.loadableWithValue;\n\nfunction concurrentRequests(getRecoilValue, deps) {\n  var results = Array(deps.length).fill(void 0),\n      exceptions = Array(deps.length).fill(void 0);\n  var _iteratorNormalCompletion16 = true;\n  var _didIteratorError16 = false;\n  var _iteratorError16 = undefined;\n\n  try {\n    for (var _iterator16 = deps.entries()[Symbol.iterator](), _step16; !(_iteratorNormalCompletion16 = (_step16 = _iterator16.next()).done); _iteratorNormalCompletion16 = true) {\n      var _step16$value = _slicedToArray(_step16.value, 2),\n          i = _step16$value[0],\n          dep = _step16$value[1];\n\n      try {\n        results[i] = getRecoilValue(dep);\n      } catch (e) {\n        exceptions[i] = e;\n      }\n    }\n  } catch (err) {\n    _didIteratorError16 = true;\n    _iteratorError16 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion16 && _iterator16.return != null) {\n        _iterator16.return();\n      }\n    } finally {\n      if (_didIteratorError16) {\n        throw _iteratorError16;\n      }\n    }\n  }\n\n  return [results, exceptions];\n}\n\nfunction isError(exp) {\n  return null != exp && !Recoil_isPromise(exp);\n}\n\nfunction unwrapDependencies(dependencies) {\n  return Array.isArray(dependencies) ? dependencies : Object.getOwnPropertyNames(dependencies).map(function (key) {\n    return dependencies[key];\n  });\n}\n\nfunction wrapResults(dependencies, results) {\n  return Array.isArray(dependencies) ? results : Object.getOwnPropertyNames(dependencies).reduce(function (out, key, idx) {\n    return _objectSpread({}, out, _defineProperty2({}, key, results[idx]));\n  }, {});\n}\n\nfunction wrapLoadables(dependencies, results, exceptions) {\n  return wrapResults(dependencies, exceptions.map(function (exception, idx) {\n    return null == exception ? loadableWithValue$3(results[idx]) : Recoil_isPromise(exception) ? loadableWithPromise$2(exception) : loadableWithError$2(exception);\n  }));\n}\n\nvar Recoil_WaitFor = {\n  waitForNone: Recoil_selectorFamily({\n    key: \"__waitForNone\",\n    get: function get(dependencies) {\n      return function (_ref28) {\n        var get = _ref28.get;\n\n        var deps = unwrapDependencies(dependencies),\n            _concurrentRequests = concurrentRequests(get, deps),\n            _concurrentRequests2 = _slicedToArray(_concurrentRequests, 2),\n            results = _concurrentRequests2[0],\n            exceptions = _concurrentRequests2[1];\n\n        return wrapLoadables(dependencies, results, exceptions);\n      };\n    }\n  }),\n  waitForAny: Recoil_selectorFamily({\n    key: \"__waitForAny\",\n    get: function get(dependencies) {\n      return function (_ref29) {\n        var get = _ref29.get;\n\n        var deps = unwrapDependencies(dependencies),\n            _concurrentRequests3 = concurrentRequests(get, deps),\n            _concurrentRequests4 = _slicedToArray(_concurrentRequests3, 2),\n            results = _concurrentRequests4[0],\n            exceptions = _concurrentRequests4[1];\n\n        if (exceptions.some(function (exp) {\n          return null == exp;\n        })) return wrapLoadables(dependencies, results, exceptions);\n        if (exceptions.every(isError)) throw exceptions.find(isError);\n        throw new Promise(function (resolve, reject) {\n          var _iteratorNormalCompletion17 = true;\n          var _didIteratorError17 = false;\n          var _iteratorError17 = undefined;\n\n          try {\n            var _loop = function _loop() {\n              var _step17$value = _slicedToArray(_step17.value, 2),\n                  i = _step17$value[0],\n                  exp = _step17$value[1];\n\n              Recoil_isPromise(exp) && exp.then(function (result) {\n                results[i] = result, exceptions[i] = null, resolve(wrapLoadables(dependencies, results, exceptions));\n              }).catch(function (error) {\n                exceptions[i] = error, exceptions.every(isError) && reject(exceptions[0]);\n              });\n            };\n\n            for (var _iterator17 = exceptions.entries()[Symbol.iterator](), _step17; !(_iteratorNormalCompletion17 = (_step17 = _iterator17.next()).done); _iteratorNormalCompletion17 = true) {\n              _loop();\n            }\n          } catch (err) {\n            _didIteratorError17 = true;\n            _iteratorError17 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion17 && _iterator17.return != null) {\n                _iterator17.return();\n              }\n            } finally {\n              if (_didIteratorError17) {\n                throw _iteratorError17;\n              }\n            }\n          }\n        });\n      };\n    }\n  }),\n  waitForAll: Recoil_selectorFamily({\n    key: \"__waitForAll\",\n    get: function get(dependencies) {\n      return function (_ref30) {\n        var get = _ref30.get;\n\n        var deps = unwrapDependencies(dependencies),\n            _concurrentRequests5 = concurrentRequests(get, deps),\n            _concurrentRequests6 = _slicedToArray(_concurrentRequests5, 2),\n            results = _concurrentRequests6[0],\n            exceptions = _concurrentRequests6[1];\n\n        if (exceptions.every(function (exp) {\n          return null == exp;\n        })) return wrapResults(dependencies, results);\n        var error = exceptions.find(isError);\n        if (null != error) throw error;\n        throw Promise.all(exceptions).then(function (results) {\n          return wrapResults(dependencies, results);\n        });\n      };\n    }\n  }),\n  noWait: Recoil_selectorFamily({\n    key: \"__noWait\",\n    get: function get(dependency) {\n      return function (_ref31) {\n        var get = _ref31.get;\n\n        try {\n          return loadableWithValue$3(get(dependency));\n        } catch (exception) {\n          return Recoil_isPromise(exception) ? loadableWithPromise$2(exception) : loadableWithError$2(exception);\n        }\n      };\n    }\n  })\n};\nvar DefaultValue$3 = Recoil_Node.DefaultValue,\n    RecoilRoot$1 = Recoil_RecoilRoot_react.RecoilRoot,\n    isRecoilValue$3 = require$$2.isRecoilValue,\n    useGotoRecoilSnapshot$1 = Recoil_Hooks.useGotoRecoilSnapshot,\n    useRecoilCallback$1 = Recoil_Hooks.useRecoilCallback,\n    useRecoilSnapshot$1 = Recoil_Hooks.useRecoilSnapshot,\n    useRecoilState$1 = Recoil_Hooks.useRecoilState,\n    useRecoilStateLoadable$1 = Recoil_Hooks.useRecoilStateLoadable,\n    useRecoilTransactionObserver$1 = Recoil_Hooks.useRecoilTransactionObserver,\n    useRecoilValue$1 = Recoil_Hooks.useRecoilValue,\n    useRecoilValueLoadable$1 = Recoil_Hooks.useRecoilValueLoadable,\n    useResetRecoilState$1 = Recoil_Hooks.useResetRecoilState,\n    useSetRecoilState$1 = Recoil_Hooks.useSetRecoilState,\n    useSetUnvalidatedAtomValues$1 = Recoil_Hooks.useSetUnvalidatedAtomValues,\n    useTransactionObservation_DEPRECATED$1 = Recoil_Hooks.useTransactionObservation_DEPRECATED,\n    noWait$1 = Recoil_WaitFor.noWait,\n    waitForAll$1 = Recoil_WaitFor.waitForAll,\n    waitForAny$1 = Recoil_WaitFor.waitForAny,\n    waitForNone$1 = Recoil_WaitFor.waitForNone;\nvar Recoil_index = {\n  DefaultValue: DefaultValue$3,\n  RecoilRoot: RecoilRoot$1,\n  atom: Recoil_atom,\n  selector: Recoil_selector,\n  atomFamily: Recoil_atomFamily,\n  selectorFamily: Recoil_selectorFamily,\n  constSelector: Recoil_constSelector,\n  errorSelector: Recoil_errorSelector,\n  readOnlySelector: Recoil_readOnlySelector,\n  useRecoilValue: useRecoilValue$1,\n  useRecoilValueLoadable: useRecoilValueLoadable$1,\n  useRecoilState: useRecoilState$1,\n  useRecoilStateLoadable: useRecoilStateLoadable$1,\n  useSetRecoilState: useSetRecoilState$1,\n  useResetRecoilState: useResetRecoilState$1,\n  useRecoilCallback: useRecoilCallback$1,\n  useGotoRecoilSnapshot: useGotoRecoilSnapshot$1,\n  useRecoilSnapshot: useRecoilSnapshot$1,\n  useRecoilTransactionObserver_UNSTABLE: useRecoilTransactionObserver$1,\n  useTransactionObservation_UNSTABLE: useTransactionObservation_DEPRECATED$1,\n  useSetUnvalidatedAtomValues_UNSTABLE: useSetUnvalidatedAtomValues$1,\n  noWait: noWait$1,\n  waitForNone: waitForNone$1,\n  waitForAny: waitForAny$1,\n  waitForAll: waitForAll$1,\n  isRecoilValue: isRecoilValue$3\n},\n    Recoil_index_1 = Recoil_index.DefaultValue,\n    Recoil_index_2 = Recoil_index.RecoilRoot,\n    Recoil_index_3 = Recoil_index.atom,\n    Recoil_index_4 = Recoil_index.selector,\n    Recoil_index_5 = Recoil_index.atomFamily,\n    Recoil_index_6 = Recoil_index.selectorFamily,\n    Recoil_index_7 = Recoil_index.constSelector,\n    Recoil_index_8 = Recoil_index.errorSelector,\n    Recoil_index_9 = Recoil_index.readOnlySelector,\n    Recoil_index_10 = Recoil_index.useRecoilValue,\n    Recoil_index_11 = Recoil_index.useRecoilValueLoadable,\n    Recoil_index_12 = Recoil_index.useRecoilState,\n    Recoil_index_13 = Recoil_index.useRecoilStateLoadable,\n    Recoil_index_14 = Recoil_index.useSetRecoilState,\n    Recoil_index_15 = Recoil_index.useResetRecoilState,\n    Recoil_index_16 = Recoil_index.useRecoilCallback,\n    Recoil_index_17 = Recoil_index.useGotoRecoilSnapshot,\n    Recoil_index_18 = Recoil_index.useRecoilSnapshot,\n    Recoil_index_19 = Recoil_index.useRecoilTransactionObserver_UNSTABLE,\n    Recoil_index_20 = Recoil_index.useTransactionObservation_UNSTABLE,\n    Recoil_index_21 = Recoil_index.useSetUnvalidatedAtomValues_UNSTABLE,\n    Recoil_index_22 = Recoil_index.noWait,\n    Recoil_index_23 = Recoil_index.waitForNone,\n    Recoil_index_24 = Recoil_index.waitForAny,\n    Recoil_index_25 = Recoil_index.waitForAll,\n    Recoil_index_26 = Recoil_index.isRecoilValue;\nexports.DefaultValue = Recoil_index_1, exports.RecoilRoot = Recoil_index_2, exports.atom = Recoil_index_3, exports.atomFamily = Recoil_index_5, exports.constSelector = Recoil_index_7, exports.default = Recoil_index, exports.errorSelector = Recoil_index_8, exports.isRecoilValue = Recoil_index_26, exports.noWait = Recoil_index_22, exports.readOnlySelector = Recoil_index_9, exports.selector = Recoil_index_4, exports.selectorFamily = Recoil_index_6, exports.useGotoRecoilSnapshot = Recoil_index_17, exports.useRecoilCallback = Recoil_index_16, exports.useRecoilSnapshot = Recoil_index_18, exports.useRecoilState = Recoil_index_12, exports.useRecoilStateLoadable = Recoil_index_13, exports.useRecoilTransactionObserver_UNSTABLE = Recoil_index_19, exports.useRecoilValue = Recoil_index_10, exports.useRecoilValueLoadable = Recoil_index_11, exports.useResetRecoilState = Recoil_index_15, exports.useSetRecoilState = Recoil_index_14, exports.useSetUnvalidatedAtomValues_UNSTABLE = Recoil_index_21, exports.useTransactionObservation_UNSTABLE = Recoil_index_20, exports.waitForAll = Recoil_index_25, exports.waitForAny = Recoil_index_24, exports.waitForNone = Recoil_index_23;","map":{"version":3,"sources":["C:/Users/robson/Desktop/cidadealta/app/node_modules/recoil/dist/recoil.production.js"],"names":["_interopDefault","ex","default","Object","defineProperty","exports","value","react","require","reactDom","_defineProperty","obj","key","enumerable","configurable","writable","AbstractRecoilValue","newKey","RecoilState","RecoilValueReadOnly","Recoil_RecoilValue","isRecoilValue","x","Recoil_RecoilValue_1","Recoil_RecoilValue_2","Recoil_RecoilValue_3","Recoil_RecoilValue_4","getCjsExportFromNamespace","n","require$$2","freeze","__proto__","DefaultValue","DEFAULT_VALUE","RecoilValueNotReady","Error","nodes","Map","NodeMissingError","Recoil_Node","registerNode","node","has","set","getNode","get","Recoil_Queue","enqueueExecution","s","f","Recoil_CopyOnWrite","setByAddingToSet","v","next","Set","add","setByDeletingFromSet","delete","mapBySettingInMap","map","k","mapByUpdatingInMap","updater","mapByDeletingFromMap","Recoil_Tracing","trace","message","fn","wrap","mapByDeletingFromMap$1","mapBySettingInMap$1","mapByUpdatingInMap$1","setByAddingToSet$1","getNode$1","emptyMap","emptySet","ReadOnlyRecoilValueError","getNodeLoadable","store","state","subscriptionID","Recoil_FunctionalCore","peekNodeLoadable","setNodeValue","newValue","newState","writtenNodes","setUnvalidatedAtomValue","atomValues","nonvalidatedAtoms","dirtyAtoms","subscribeComponentToNode","callback","subID","nodeToComponentSubscriptions","subsForAtom","fireNodeSubscriptions","updatedNodes","when","_store$getState$nextT","getState","nextTree","currentTree","dependentNodes","keys","visitedNodes","visitingNodes","Array","from","pop","_state$nodeToNodeSubs","subscribedNodes","nodeToNodeSubscriptions","downstreamNode","push","_state$nodeToComponen","forEach","_debugName","cb","queuedComponentCallbacks","join","resolvers","suspendedComponentResolvers","r","clear","detectCircularDependencies","stack","length","leaf","downstream","size","root","reverse","Recoil_mapMap","result","getNodeLoadable$1","peekNodeLoadable$1","setNodeValue$1","setUnvalidatedAtomValue$1","subscribeComponentToNode$1","RecoilValueNotReady$1","AbstractRecoilValue$1","RecoilState$1","RecoilValueReadOnly$1","Recoil_RecoilValueInterface","valueFromValueOrUpdater","valueOrUpdater","_storeState$nextTree","storeState","current","contents","getRecoilValueAsLoadable","replaceState","loadable","setRecoilValue","setUnvalidatedRecoilValue","subscribeToRecoilValue","releaseFn","release","makeEmptyTreeState","transactionMetadata","nodeDeps","makeStoreState","treeState","transactionSubscriptions","Recoil_State","makeEmptyStoreState","DEFAULT_VALUE$1","getRecoilValueAsLoadable$1","setRecoilValue$1","valueFromValueOrUpdater$1","makeEmptyTreeState$1","makeStoreState$1","Snapshot","recoilValue","_store","getLoadable","toPromise","mapper","mutableSnapshot","MutableSnapshot","cloneSnapshot","getStore_INTERNAL","replacer","subscribeToTransactions","addTransactionMetadata","cloneTreeState","recoilState","newValueOrUpdater","Recoil_Snapshot","freshSnapshot","Recoil_Snapshot_1","Recoil_Snapshot_2","Recoil_Snapshot_3","Recoil_Snapshot_4","Recoil_nullthrows","require$$6","useContext","useEffect","useRef","useState","fireNodeSubscriptions$1","setNodeValue$2","setUnvalidatedAtomValue$2","freshSnapshot$1","makeEmptyStoreState$1","makeStoreState$2","notInAContext","defaultStore","startNextTreeIfNeeded","AppContext","createContext","useStoreRef","Batcher","props","storeRef","_","setState","setNotifyBatcherOfChange","sub","splice","nextID","Recoil_RecoilRoot_react","RecoilRoot","initializeState_DEPRECATED","initializeState","children","notifyBatcherOfChange","replaced","id","metadata","initial","atom","setUnvalidatedAtomValues","snapshot","createElement","Provider","Recoil_differenceSets","ret","setsWithValuesToRemove","FIRST","otherSet","Recoil_filterMap","Recoil_intersectSets","first","rest","Recoil_invariant","condition","Recoil_mergeMaps","maps","i","iterator","nextKey","done","useCallback","useEffect$1","useMemo","useRef$1","useState$1","peekNodeLoadable$2","setNodeValue$3","DEFAULT_VALUE$2","getNode$2","nodes$1","useStoreRef$1","AbstractRecoilValue$2","getRecoilValueAsLoadable$2","setRecoilValue$2","setUnvalidatedRecoilValue$1","subscribeToRecoilValue$1","valueFromValueOrUpdater$2","Snapshot$1","cloneSnapshot$1","setByAddingToSet$2","useInterface","forceUpdate","recoilValuesUsed","previousSubscriptions","subscriptions","unsubscribeFrom","updateState","_state","subs","useSetRecoilState","useRecoilValueLoadable","useRecoilValue","Promise","resolve","getRecoilValue","getRecoilValueLoadable","getRecoilState","getRecoilStateLoadable","getSetRecoilState","getResetRecoilState","useTransactionSubscription","useTreeStateClone_DEPRECATED","subsByAtom","externallyVisibleAtomValuesInState","persistedAtomContentsValues","_node$options","persistence","options","persistence_UNSTABLE","type","useGotoRecoilSnapshot","unstable_batchedUpdates","prevState","nextState","updatedKeys","_prevState$atomValues","_nextState$atomValues","Sentinel","SENTINEL","Recoil_Hooks","useRecoilCallback","deps","gotoSnapshot","args","reset","useRecoilState","recoilInterface","useRecoilStateLoadable","useResetRecoilState","useRecoilInterface","useSnapshotWithStateChange_DEPRECATED","transaction","updatedAtoms","useTransactionSubscription_DEPRECATED","useTransactionObservation_DEPRECATED","previousState","previousAtomValues","atomInfo","_node$options$persist","_node$options2","_node$options2$persis","_node$options$persist2","_node$options3","_node$options3$persis","backButton","modifiedAtoms","useRecoilTransactionObserver","previousSnapshot","useRecoilSnapshot","setSnapshot","useGoToSnapshot_DEPRECATED","useSetUnvalidatedAtomValues","values","Recoil_isPromise","p","then","loadableAccessors","getValue","reject","valueMaybe","valueOrThrow","errorMaybe","errorOrThrow","promiseMaybe","promiseOrThrow","loadableWithPromise","loadableWithValue","e","loadableWithError","catch","error","promise","Recoil_Loadable","loadableLoading","loadableAll","inputs","every","some","find","all","Recoil_isNode","object","_ownerDocument","_doc$defaultView","window","defaultView","ownerDocument","document","Node","nodeType","nodeName","Recoil_deepFreezeValue","deepFreezeValue","$$typeof","prototype","hasOwnProperty","call","prop","isFrozen","seal","LEAF","Symbol","emptyMap$1","ArrayKeyedMap","existing","_base","entries","ks","isArray","_map$get","answer","recurse","level","prefix","concat","Recoil_ArrayKeyedMap","Recoil_cacheWithReferenceEquality","Recoil_everySet","context","entry","Recoil_equalsSet","one","two","Recoil_PerformanceTimings","startPerfBlock","_id","mapBySettingInMap$2","mapByUpdatingInMap$2","setByAddingToSet$3","setByDeletingFromSet$1","detectCircularDependencies$1","getNodeLoadable$2","setNodeValue$4","loadableWithError$1","loadableWithPromise$1","loadableWithValue$1","DEFAULT_VALUE$3","RecoilValueNotReady$2","registerNode$1","startPerfBlock$1","isRecoilValue$1","emptySet$2","cacheKeyFromDepValues","depValues","sort","Recoil_selector","cacheImplementation","cacheImplementation_UNSTABLE","cache","getFromCache","_state$nodeDeps$get","currentDeps","cacheKey","depKey","cached","_state$nodeDeps$get2","endPerfBlock","output","finally","errorOrDepPromise","asyncState","newAsyncState","newStateFromEvaluate","newDepValues","oldDeps","newDeps","addedDeps","removedDeps","upstreamNode","newCacheKey","dangerouslyAllowMutability","myGet","setRecoilState","written","loadableWithValue$2","DEFAULT_VALUE$4","DefaultValue$1","registerNode$2","isRecoilValue$2","mapByDeletingFromMap$2","mapBySettingInMap$3","setByAddingToSet$4","optionsDefault","restOptions","base","validator","storedValue","baseValue","nonvalidatedValue","validatedValue","Recoil_atom","Recoil_stableStringify","opt","allowFunctions","stringify","includes","String","JSON","name","_JSON$stringify","toString","toJSON","reduce","a","b","localeCompare","filter","Recoil_cacheWithValueEquality","nextIndex","Recoil_selectorFamily","_options$cacheImpleme","_options$cacheImpleme2","selectorCache","cacheImplementationForParams_UNSTABLE","params","_stableStringify","_options$cacheImpleme3","cachedSelector","myKey","callbacks","myCacheImplementation","newSelector","ParameterizedAtomTaggedValue_DEPRECATED","DEFAULT_VALUE$5","DefaultValue$2","isSuperset","setA","setB","pick","chosenKeys","mapPersistenceSettings_DEPRECATED","settings","passthrough","acc","Recoil_atomFamily","atomCache","legacyAtomOptions","legacyAtom","atomFamilyDefault","param","legacyValue","upgradedValue","parameter","parameterKeys","entryParameterKeys","entryMap","contextOrSubcontext","cachedAtom","newAtom","constantSelector","constant","Recoil_constSelector","throwingSelector","Recoil_errorSelector","Recoil_readOnlySelector","loadableWithError$2","loadableWithPromise$2","loadableWithValue$3","concurrentRequests","results","fill","exceptions","dep","isError","exp","unwrapDependencies","dependencies","getOwnPropertyNames","wrapResults","out","idx","wrapLoadables","exception","Recoil_WaitFor","waitForNone","waitForAny","waitForAll","noWait","dependency","DefaultValue$3","RecoilRoot$1","isRecoilValue$3","useGotoRecoilSnapshot$1","useRecoilCallback$1","useRecoilSnapshot$1","useRecoilState$1","useRecoilStateLoadable$1","useRecoilTransactionObserver$1","useRecoilValue$1","useRecoilValueLoadable$1","useResetRecoilState$1","useSetRecoilState$1","useSetUnvalidatedAtomValues$1","useTransactionObservation_DEPRECATED$1","noWait$1","waitForAll$1","waitForAny$1","waitForNone$1","Recoil_index","selector","atomFamily","selectorFamily","constSelector","errorSelector","readOnlySelector","useRecoilTransactionObserver_UNSTABLE","useTransactionObservation_UNSTABLE","useSetUnvalidatedAtomValues_UNSTABLE","Recoil_index_1","Recoil_index_2","Recoil_index_3","Recoil_index_4","Recoil_index_5","Recoil_index_6","Recoil_index_7","Recoil_index_8","Recoil_index_9","Recoil_index_10","Recoil_index_11","Recoil_index_12","Recoil_index_13","Recoil_index_14","Recoil_index_15","Recoil_index_16","Recoil_index_17","Recoil_index_18","Recoil_index_19","Recoil_index_20","Recoil_index_21","Recoil_index_22","Recoil_index_23","Recoil_index_24","Recoil_index_25","Recoil_index_26"],"mappings":"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","sourcesContent":["\"use strict\";function _interopDefault(ex){return ex&&\"object\"==typeof ex&&\"default\"in ex?ex.default:ex}Object.defineProperty(exports,\"__esModule\",{value:!0});var react=_interopDefault(require(\"react\")),reactDom=_interopDefault(require(\"react-dom\"));function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}class AbstractRecoilValue{constructor(newKey){_defineProperty(this,\"key\",void 0),this.key=newKey}}class RecoilState extends AbstractRecoilValue{}class RecoilValueReadOnly extends AbstractRecoilValue{}var Recoil_RecoilValue={AbstractRecoilValue:AbstractRecoilValue,RecoilState:RecoilState,RecoilValueReadOnly:RecoilValueReadOnly,isRecoilValue:function(x){return x instanceof RecoilState||x instanceof RecoilValueReadOnly}},Recoil_RecoilValue_1=Recoil_RecoilValue.AbstractRecoilValue,Recoil_RecoilValue_2=Recoil_RecoilValue.RecoilState,Recoil_RecoilValue_3=Recoil_RecoilValue.RecoilValueReadOnly,Recoil_RecoilValue_4=Recoil_RecoilValue.isRecoilValue;function getCjsExportFromNamespace(n){return n&&n.default||n}var require$$2=getCjsExportFromNamespace(Object.freeze({__proto__:null,AbstractRecoilValue:Recoil_RecoilValue_1,RecoilState:Recoil_RecoilValue_2,RecoilValueReadOnly:Recoil_RecoilValue_3,isRecoilValue:Recoil_RecoilValue_4}));class DefaultValue{}const DEFAULT_VALUE=new DefaultValue;class RecoilValueNotReady extends Error{constructor(key){super(`Tried to set the value of Recoil selector ${key} using an updater function, but it is an async selector in a pending or error state; this is not supported.`)}}const nodes=new Map;class NodeMissingError extends Error{}var Recoil_Node={nodes:nodes,registerNode:function(node){if(nodes.has(node.key)){node.key}return nodes.set(node.key,node),null==node.set?new require$$2.RecoilValueReadOnly(node.key):new require$$2.RecoilState(node.key)},getNode:function(key){const node=nodes.get(key);if(null==node)throw new NodeMissingError(`Missing definition for RecoilValue: \"${key}\"\"`);return node},NodeMissingError:NodeMissingError,DefaultValue:DefaultValue,DEFAULT_VALUE:DEFAULT_VALUE,RecoilValueNotReady:RecoilValueNotReady};var Recoil_Queue={enqueueExecution:function(s,f){f()}};var Recoil_CopyOnWrite={setByAddingToSet:function(set,v){const next=new Set(set);return next.add(v),next},setByDeletingFromSet:function(set,v){const next=new Set(set);return next.delete(v),next},mapBySettingInMap:function(map,k,v){const next=new Map(map);return next.set(k,v),next},mapByUpdatingInMap:function(map,k,updater){const next=new Map(map);return next.set(k,updater(next.get(k))),next},mapByDeletingFromMap:function(map,k){const next=new Map(map);return next.delete(k),next}};var Recoil_Tracing={trace:function(message,node,fn){return fn()},wrap:function(fn){return fn}};const{mapByDeletingFromMap:mapByDeletingFromMap$1,mapBySettingInMap:mapBySettingInMap$1,mapByUpdatingInMap:mapByUpdatingInMap$1,setByAddingToSet:setByAddingToSet$1}=Recoil_CopyOnWrite,{getNode:getNode$1}=Recoil_Node,emptyMap=Object.freeze(new Map),emptySet=Object.freeze(new Set);class ReadOnlyRecoilValueError extends Error{}function getNodeLoadable(store,state,key){return getNode$1(key).get(store,state)}let subscriptionID=0;var Recoil_FunctionalCore={getNodeLoadable:getNodeLoadable,peekNodeLoadable:function(store,state,key){return getNodeLoadable(store,state,key)[1]},setNodeValue:function(store,state,key,newValue){const node=getNode$1(key);if(null==node.set)throw new ReadOnlyRecoilValueError(\"Attempt to set read-only RecoilValue: \"+key);const[newState,writtenNodes]=node.set(store,state,newValue);return[newState,writtenNodes]},setUnvalidatedAtomValue:function(state,key,newValue){return{...state,atomValues:mapByDeletingFromMap$1(state.atomValues,key),nonvalidatedAtoms:mapBySettingInMap$1(state.nonvalidatedAtoms,key,newValue),dirtyAtoms:setByAddingToSet$1(state.dirtyAtoms,key)}},subscribeComponentToNode:function(state,key,callback){const subID=subscriptionID++;return[{...state,nodeToComponentSubscriptions:mapByUpdatingInMap$1(state.nodeToComponentSubscriptions,key,subsForAtom=>mapBySettingInMap$1(null!=subsForAtom?subsForAtom:emptyMap,subID,[\"TODO debug name\",callback]))},function(state){return{...state,nodeToComponentSubscriptions:mapByUpdatingInMap$1(state.nodeToComponentSubscriptions,key,subsForAtom=>mapByDeletingFromMap$1(null!=subsForAtom?subsForAtom:emptyMap,subID))}}]},fireNodeSubscriptions:function(store,updatedNodes,when){var _store$getState$nextT;const state=\"enqueue\"===when&&null!==(_store$getState$nextT=store.getState().nextTree)&&void 0!==_store$getState$nextT?_store$getState$nextT:store.getState().currentTree,dependentNodes=function(state,keys){const dependentNodes=new Set,visitedNodes=new Set,visitingNodes=Array.from(keys);for(let key=visitingNodes.pop();key;key=visitingNodes.pop()){var _state$nodeToNodeSubs;dependentNodes.add(key),visitedNodes.add(key);const subscribedNodes=null!==(_state$nodeToNodeSubs=state.nodeToNodeSubscriptions.get(key))&&void 0!==_state$nodeToNodeSubs?_state$nodeToNodeSubs:emptySet;for(const downstreamNode of subscribedNodes)visitedNodes.has(downstreamNode)||visitingNodes.push(downstreamNode)}return dependentNodes}(state,updatedNodes);for(const key of dependentNodes){var _state$nodeToComponen;(null!==(_state$nodeToComponen=state.nodeToComponentSubscriptions.get(key))&&void 0!==_state$nodeToComponen?_state$nodeToComponen:[]).forEach(([_debugName,cb])=>{\"enqueue\"===when?store.getState().queuedComponentCallbacks.push(cb):cb(state)})}Recoil_Tracing.trace(\"value became available, waking components\",Array.from(updatedNodes).join(\", \"),()=>{const resolvers=store.getState().suspendedComponentResolvers;resolvers.forEach(r=>r()),resolvers.clear()})},detectCircularDependencies:function detectCircularDependencies(state,stack){if(!stack.length)return;const leaf=stack[stack.length-1],downstream=state.nodeToNodeSubscriptions.get(leaf);if(!(null==downstream?void 0:downstream.size))return;const root=stack[0];if(downstream.has(root))throw new Error(\"Recoil selector has circular dependencies: \"+[...stack,root].reverse().join(\" → \"));for(const next of downstream)detectCircularDependencies(state,[...stack,next])}};var Recoil_mapMap=function(map,callback){const result=new Map;return map.forEach((value,key)=>{result.set(key,callback(value,key))}),result};const{getNodeLoadable:getNodeLoadable$1,peekNodeLoadable:peekNodeLoadable$1,setNodeValue:setNodeValue$1,setUnvalidatedAtomValue:setUnvalidatedAtomValue$1,subscribeComponentToNode:subscribeComponentToNode$1}=Recoil_FunctionalCore,{RecoilValueNotReady:RecoilValueNotReady$1}=Recoil_Node,{AbstractRecoilValue:AbstractRecoilValue$1,RecoilState:RecoilState$1,RecoilValueReadOnly:RecoilValueReadOnly$1}=require$$2;var Recoil_RecoilValueInterface={RecoilValueReadOnly:RecoilValueReadOnly$1,AbstractRecoilValue:AbstractRecoilValue$1,RecoilState:RecoilState$1,valueFromValueOrUpdater:function(store,{key:key},valueOrUpdater){if(\"function\"==typeof valueOrUpdater){var _storeState$nextTree;const storeState=store.getState(),state=null!==(_storeState$nextTree=storeState.nextTree)&&void 0!==_storeState$nextTree?_storeState$nextTree:storeState.currentTree,current=peekNodeLoadable$1(store,state,key);if(\"loading\"===current.state)throw new RecoilValueNotReady$1(key);if(\"hasError\"===current.state)throw current.contents;return valueOrUpdater(current.contents)}return valueOrUpdater},getRecoilValueAsLoadable:function(store,{key:key}){let result;return Recoil_Tracing.trace(\"get RecoilValue\",key,()=>store.replaceState(Recoil_Tracing.wrap(state=>{const[newState,loadable]=getNodeLoadable$1(store,state,key);return result=loadable,newState}))),result},setRecoilValue:function(store,{key:key},newValue){Recoil_Tracing.trace(\"set RecoilValue\",key,()=>store.replaceState(Recoil_Tracing.wrap(state=>{const[newState,writtenNodes]=setNodeValue$1(store,state,key,newValue);return store.fireNodeSubscriptions(writtenNodes,\"enqueue\"),newState})))},setUnvalidatedRecoilValue:function(store,{key:key},newValue){Recoil_Tracing.trace(\"set unvalidated persisted atom\",key,()=>store.replaceState(Recoil_Tracing.wrap(state=>{const newState=setUnvalidatedAtomValue$1(state,key,newValue);return store.fireNodeSubscriptions(new Set([key]),\"enqueue\"),newState})))},subscribeToRecoilValue:function(store,{key:key},callback){let newState,releaseFn;return Recoil_Tracing.trace(\"subscribe component to RecoilValue\",key,()=>store.replaceState(Recoil_Tracing.wrap(state=>([newState,releaseFn]=subscribeComponentToNode$1(state,key,callback),newState)))),{release:store=>store.replaceState(releaseFn)}}};function makeEmptyTreeState(){return{transactionMetadata:{},atomValues:new Map,nonvalidatedAtoms:new Map,dirtyAtoms:new Set,nodeDeps:new Map,nodeToNodeSubscriptions:new Map,nodeToComponentSubscriptions:new Map}}function makeStoreState(treeState){return{currentTree:treeState,nextTree:null,transactionSubscriptions:new Map,queuedComponentCallbacks:[],suspendedComponentResolvers:new Set}}var Recoil_State={makeEmptyTreeState:makeEmptyTreeState,makeEmptyStoreState:function(){return makeStoreState(makeEmptyTreeState())},makeStoreState:makeStoreState};const{DEFAULT_VALUE:DEFAULT_VALUE$1}=Recoil_Node,{getRecoilValueAsLoadable:getRecoilValueAsLoadable$1,setRecoilValue:setRecoilValue$1,valueFromValueOrUpdater:valueFromValueOrUpdater$1}=Recoil_RecoilValueInterface,{makeEmptyTreeState:makeEmptyTreeState$1,makeStoreState:makeStoreState$1}=Recoil_State;class Snapshot{constructor(treeState){_defineProperty(this,\"_store\",void 0),_defineProperty(this,\"getLoadable\",recoilValue=>getRecoilValueAsLoadable$1(this._store,recoilValue)),_defineProperty(this,\"getPromise\",recoilValue=>this.getLoadable(recoilValue).toPromise()),_defineProperty(this,\"map\",mapper=>{const mutableSnapshot=new MutableSnapshot(this._store.getState().currentTree);mapper(mutableSnapshot);return cloneSnapshot(mutableSnapshot.getStore_INTERNAL().getState().currentTree)}),_defineProperty(this,\"asyncMap\",async mapper=>{const mutableSnapshot=new MutableSnapshot(this._store.getState().currentTree);await mapper(mutableSnapshot);return cloneSnapshot(mutableSnapshot.getStore_INTERNAL().getState().currentTree)}),this._store=function(treeState){const storeState=makeStoreState$1(treeState);return{getState:()=>storeState,replaceState:replacer=>{storeState.currentTree=replacer(storeState.currentTree)},subscribeToTransactions:()=>{throw new Error(\"Cannot subscribe to Snapshots\")},addTransactionMetadata:()=>{throw new Error(\"Cannot subscribe to Snapshots\")},fireNodeSubscriptions:()=>{}}}(treeState)}getStore_INTERNAL(){return this._store}}function cloneTreeState(treeState){return{transactionMetadata:{...treeState.transactionMetadata},atomValues:new Map(treeState.atomValues),nonvalidatedAtoms:new Map(treeState.nonvalidatedAtoms),dirtyAtoms:new Set(treeState.dirtyAtoms),nodeDeps:new Map(treeState.nodeDeps),nodeToNodeSubscriptions:Recoil_mapMap(treeState.nodeToNodeSubscriptions,keys=>new Set(keys)),nodeToComponentSubscriptions:new Map}}function cloneSnapshot(treeState){return new Snapshot(cloneTreeState(treeState))}class MutableSnapshot extends Snapshot{constructor(treeState){super(cloneTreeState(treeState)),_defineProperty(this,\"set\",(recoilState,newValueOrUpdater)=>{const store=this.getStore_INTERNAL(),newValue=valueFromValueOrUpdater$1(store,recoilState,newValueOrUpdater);setRecoilValue$1(store,recoilState,newValue)}),_defineProperty(this,\"reset\",recoilState=>setRecoilValue$1(this.getStore_INTERNAL(),recoilState,DEFAULT_VALUE$1))}}var Recoil_Snapshot={Snapshot:Snapshot,MutableSnapshot:MutableSnapshot,freshSnapshot:function(){return new Snapshot(makeEmptyTreeState$1())},cloneSnapshot:cloneSnapshot},Recoil_Snapshot_1=Recoil_Snapshot.Snapshot,Recoil_Snapshot_2=Recoil_Snapshot.MutableSnapshot,Recoil_Snapshot_3=Recoil_Snapshot.freshSnapshot,Recoil_Snapshot_4=Recoil_Snapshot.cloneSnapshot;var Recoil_nullthrows=function(x,message){if(null!=x)return x;throw new Error(null!=message?message:\"Got unexpected null or undefined\")},require$$6=getCjsExportFromNamespace(Object.freeze({__proto__:null,Snapshot:Recoil_Snapshot_1,MutableSnapshot:Recoil_Snapshot_2,freshSnapshot:Recoil_Snapshot_3,cloneSnapshot:Recoil_Snapshot_4}));const{useContext:useContext,useEffect:useEffect,useRef:useRef,useState:useState}=react,{fireNodeSubscriptions:fireNodeSubscriptions$1,setNodeValue:setNodeValue$2,setUnvalidatedAtomValue:setUnvalidatedAtomValue$2}=Recoil_FunctionalCore,{freshSnapshot:freshSnapshot$1}=require$$6,{makeEmptyStoreState:makeEmptyStoreState$1,makeStoreState:makeStoreState$2}=Recoil_State;function notInAContext(){throw new Error(\"This component must be used inside a <RecoilRoot> component.\")}const defaultStore=Object.freeze({getState:notInAContext,replaceState:notInAContext,subscribeToTransactions:notInAContext,addTransactionMetadata:notInAContext,fireNodeSubscriptions:notInAContext});function startNextTreeIfNeeded(storeState){null===storeState.nextTree&&(storeState.nextTree={...storeState.currentTree,dirtyAtoms:new Set,transactionMetadata:{}})}const AppContext=react.createContext({current:defaultStore}),useStoreRef=()=>useContext(AppContext);function Batcher(props){const storeRef=useStoreRef(),[_,setState]=useState([]);return props.setNotifyBatcherOfChange(()=>setState({})),useEffect(()=>{Recoil_Queue.enqueueExecution(\"Batcher\",()=>{const storeState=storeRef.current.getState(),{nextTree:nextTree}=storeState;if(null===nextTree)return;nextTree.dirtyAtoms.size&&storeState.transactionSubscriptions.forEach(sub=>sub(storeRef.current)),storeState.queuedComponentCallbacks.forEach(cb=>cb(nextTree)),storeState.queuedComponentCallbacks.splice(0,storeState.queuedComponentCallbacks.length),storeState.currentTree=nextTree,storeState.nextTree=null})}),null}let nextID=0;var Recoil_RecoilRoot_react={useStoreRef:useStoreRef,RecoilRoot:function({initializeState_DEPRECATED:initializeState_DEPRECATED,initializeState:initializeState,children:children}){let storeState;const notifyBatcherOfChange=useRef(null),store={getState:()=>storeState.current,replaceState:replacer=>{const storeState=storeRef.current.getState();startNextTreeIfNeeded(storeState);const nextTree=Recoil_nullthrows(storeState.nextTree),replaced=replacer(nextTree);replaced!==nextTree&&(storeState.nextTree=replaced,Recoil_nullthrows(notifyBatcherOfChange.current)())},subscribeToTransactions:callback=>{const id=nextID++;return storeRef.current.getState().transactionSubscriptions.set(id,callback),{release:()=>{storeRef.current.getState().transactionSubscriptions.delete(id)}}},addTransactionMetadata:metadata=>{startNextTreeIfNeeded(storeRef.current.getState());for(const k of Object.keys(metadata))Recoil_nullthrows(storeRef.current.getState().nextTree).transactionMetadata[k]=metadata[k]},fireNodeSubscriptions:function(updatedNodes,when){fireNodeSubscriptions$1(storeRef.current,updatedNodes,when)}},storeRef=useRef(store);return storeState=useRef(null!=initializeState_DEPRECATED?function(store,initializeState){const initial=makeEmptyStoreState$1();return initializeState({set:(atom,value)=>{initial.currentTree=setNodeValue$2(store,initial.currentTree,atom.key,value)[0]},setUnvalidatedAtomValues:atomValues=>{atomValues.forEach((v,k)=>{initial.currentTree=setUnvalidatedAtomValue$2(initial.currentTree,k,v)})}}),initial}(store,initializeState_DEPRECATED):null!=initializeState?function(initializeState){const snapshot=freshSnapshot$1().map(initializeState);return makeStoreState$2(snapshot.getStore_INTERNAL().getState().currentTree)}(initializeState):makeEmptyStoreState$1()),react.createElement(AppContext.Provider,{value:storeRef},react.createElement(Batcher,{setNotifyBatcherOfChange:function(x){notifyBatcherOfChange.current=x}}),children)}};var Recoil_differenceSets=function(set,...setsWithValuesToRemove){const ret=new Set;FIRST:for(const value of set){for(const otherSet of setsWithValuesToRemove)if(otherSet.has(value))continue FIRST;ret.add(value)}return ret};var Recoil_filterMap=function(map,callback){const result=new Map;for(const[key,value]of map)callback(value,key)&&result.set(key,value);return result};var Recoil_intersectSets=function(first,...rest){const ret=new Set;FIRST:for(const value of first){for(const otherSet of rest)if(!otherSet.has(value))continue FIRST;ret.add(value)}return ret};var Recoil_invariant=function(condition,message){if(!condition)throw new Error(message)};var Recoil_mergeMaps=function(...maps){const result=new Map;for(let i=0;i<maps.length;i++){const iterator=maps[i].keys();let nextKey;for(;!(nextKey=iterator.next()).done;)result.set(nextKey.value,maps[i].get(nextKey.value))}return result};const{useCallback:useCallback,useEffect:useEffect$1,useMemo:useMemo,useRef:useRef$1,useState:useState$1}=react,{peekNodeLoadable:peekNodeLoadable$2,setNodeValue:setNodeValue$3}=Recoil_FunctionalCore,{DEFAULT_VALUE:DEFAULT_VALUE$2,getNode:getNode$2,nodes:nodes$1}=Recoil_Node,{useStoreRef:useStoreRef$1}=Recoil_RecoilRoot_react,{AbstractRecoilValue:AbstractRecoilValue$2,getRecoilValueAsLoadable:getRecoilValueAsLoadable$2,setRecoilValue:setRecoilValue$2,setUnvalidatedRecoilValue:setUnvalidatedRecoilValue$1,subscribeToRecoilValue:subscribeToRecoilValue$1,valueFromValueOrUpdater:valueFromValueOrUpdater$2}=Recoil_RecoilValueInterface,{Snapshot:Snapshot$1,cloneSnapshot:cloneSnapshot$1}=require$$6,{setByAddingToSet:setByAddingToSet$2}=Recoil_CopyOnWrite;function useInterface(){const storeRef=useStoreRef$1(),[_,forceUpdate]=useState$1([]),recoilValuesUsed=useRef$1(new Set);recoilValuesUsed.current=new Set;const previousSubscriptions=useRef$1(new Set),subscriptions=useRef$1(new Map),unsubscribeFrom=useCallback(key=>{const sub=subscriptions.current.get(key);sub&&(sub.release(storeRef.current),subscriptions.current.delete(key))},[storeRef,subscriptions]);return useEffect$1(()=>{const store=storeRef.current;function updateState(_state,key){subscriptions.current.has(key)&&forceUpdate([])}Recoil_differenceSets(recoilValuesUsed.current,previousSubscriptions.current).forEach(key=>{if(subscriptions.current.has(key))return;const sub=subscribeToRecoilValue$1(store,new AbstractRecoilValue$2(key),state=>{Recoil_Tracing.trace(\"RecoilValue subscription fired\",key,()=>{updateState(0,key)})});subscriptions.current.set(key,sub),Recoil_Tracing.trace(\"initial update on subscribing\",key,()=>{updateState(store.getState(),key)})}),Recoil_differenceSets(previousSubscriptions.current,recoilValuesUsed.current).forEach(key=>{unsubscribeFrom(key)}),previousSubscriptions.current=recoilValuesUsed.current}),useEffect$1(()=>{const subs=subscriptions.current;return()=>subs.forEach((_,key)=>unsubscribeFrom(key))},[unsubscribeFrom]),useMemo(()=>{function useSetRecoilState(recoilState){return newValueOrUpdater=>{const newValue=valueFromValueOrUpdater$2(storeRef.current,recoilState,newValueOrUpdater);setRecoilValue$2(storeRef.current,recoilState,newValue)}}function useRecoilValueLoadable(recoilValue){return recoilValuesUsed.current.has(recoilValue.key)||(recoilValuesUsed.current=setByAddingToSet$2(recoilValuesUsed.current,recoilValue.key)),getRecoilValueAsLoadable$2(storeRef.current,recoilValue)}function useRecoilValue(recoilValue){return function(loadable,atom,storeRef){if(\"hasValue\"===loadable.state)return loadable.contents;if(\"loading\"===loadable.state){throw new Promise(resolve=>{storeRef.current.getState().suspendedComponentResolvers.add(resolve)})}throw\"hasError\"===loadable.state?loadable.contents:new Error(`Invalid value of loadable atom \"${atom.key}\"`)}(useRecoilValueLoadable(recoilValue),recoilValue,storeRef)}return{getRecoilValue:useRecoilValue,getRecoilValueLoadable:useRecoilValueLoadable,getRecoilState:function(recoilState){return[useRecoilValue(recoilState),useSetRecoilState(recoilState)]},getRecoilStateLoadable:function(recoilState){return[useRecoilValueLoadable(recoilState),useSetRecoilState(recoilState)]},getSetRecoilState:useSetRecoilState,getResetRecoilState:function(recoilState){return()=>setRecoilValue$2(storeRef.current,recoilState,DEFAULT_VALUE$2)}}},[recoilValuesUsed,storeRef])}function useTransactionSubscription(callback){const storeRef=useStoreRef$1();useEffect$1(()=>storeRef.current.subscribeToTransactions(callback).release,[callback,storeRef])}function useTreeStateClone_DEPRECATED(){const[_,setState]=useState$1(0);useTransactionSubscription(useCallback(()=>setState(x=>x+1),[]));const storeRef=useStoreRef$1();return{transactionMetadata:{...(state=storeRef.current.getState().currentTree).transactionMetadata},atomValues:new Map(state.atomValues),nonvalidatedAtoms:new Map(state.nonvalidatedAtoms),dirtyAtoms:new Set(state.dirtyAtoms),nodeDeps:new Map(state.nodeDeps),nodeToNodeSubscriptions:Recoil_mapMap(state.nodeToNodeSubscriptions,keys=>new Set(keys)),nodeToComponentSubscriptions:Recoil_mapMap(state.nodeToComponentSubscriptions,subsByAtom=>new Map(subsByAtom))};var state}function externallyVisibleAtomValuesInState(state){const atomValues=state.atomValues,persistedAtomContentsValues=Recoil_mapMap(Recoil_filterMap(atomValues,(v,k)=>{var _node$options;const persistence=null===(_node$options=getNode$2(k).options)||void 0===_node$options?void 0:_node$options.persistence_UNSTABLE;return null!=persistence&&\"none\"!==persistence.type&&\"hasValue\"===v.state}),v=>v.contents);return Recoil_mergeMaps(state.nonvalidatedAtoms,persistedAtomContentsValues)}function useGotoRecoilSnapshot(){const storeRef=useStoreRef$1();return useCallback(snapshot=>{reactDom.unstable_batchedUpdates(()=>{storeRef.current.replaceState(prevState=>{const nextState=snapshot.getStore_INTERNAL().getState().currentTree,updatedKeys=new Set;for(const keys of[prevState.atomValues.keys(),nextState.atomValues.keys()])for(const key of keys){var _prevState$atomValues,_nextState$atomValues;(null===(_prevState$atomValues=prevState.atomValues.get(key))||void 0===_prevState$atomValues?void 0:_prevState$atomValues.contents)!==(null===(_nextState$atomValues=nextState.atomValues.get(key))||void 0===_nextState$atomValues?void 0:_nextState$atomValues.contents)&&updatedKeys.add(key)}return storeRef.current.fireNodeSubscriptions(updatedKeys,\"enqueue\"),{...nextState,nodeToComponentSubscriptions:prevState.nodeToComponentSubscriptions}})})},[storeRef])}class Sentinel{}const SENTINEL=new Sentinel;var Recoil_Hooks={useRecoilCallback:function(fn,deps){const storeRef=useStoreRef$1(),gotoSnapshot=useGotoRecoilSnapshot();return useCallback((...args)=>{const snapshot=cloneSnapshot$1(storeRef.current.getState().currentTree);function set(recoilState,newValueOrUpdater){const newValue=valueFromValueOrUpdater$2(storeRef.current,recoilState,newValueOrUpdater);setRecoilValue$2(storeRef.current,recoilState,newValue)}function reset(recoilState){setRecoilValue$2(storeRef.current,recoilState,DEFAULT_VALUE$2)}let ret=SENTINEL;return reactDom.unstable_batchedUpdates(()=>{ret=fn({set:set,reset:reset,snapshot:snapshot,gotoSnapshot:gotoSnapshot})(...args)}),ret instanceof Sentinel&&Recoil_invariant(!1),ret},null!=deps?[...deps,storeRef]:void 0)},useRecoilValue:function(recoilValue){return useInterface().getRecoilValue(recoilValue)},useRecoilValueLoadable:function(recoilValue){return useInterface().getRecoilValueLoadable(recoilValue)},useRecoilState:function(recoilState){const recoilInterface=useInterface(),[value]=recoilInterface.getRecoilState(recoilState);return[value,useCallback(recoilInterface.getSetRecoilState(recoilState),[recoilState])]},useRecoilStateLoadable:function(recoilState){const recoilInterface=useInterface(),[value]=recoilInterface.getRecoilStateLoadable(recoilState);return[value,useCallback(recoilInterface.getSetRecoilState(recoilState),[recoilState])]},useSetRecoilState:function(recoilState){return useCallback(useInterface().getSetRecoilState(recoilState),[recoilState])},useResetRecoilState:function(recoilState){return useCallback(useInterface().getResetRecoilState(recoilState),[recoilState])},useRecoilInterface:useInterface,useSnapshotWithStateChange_DEPRECATED:function(transaction){const storeRef=useStoreRef$1();let snapshot=useTreeStateClone_DEPRECATED();transaction(({key:key},updater)=>{[snapshot]=setNodeValue$3(storeRef.current,snapshot,key,peekNodeLoadable$2(storeRef.current,snapshot,key).map(updater))});const atomValues=Recoil_mapMap(snapshot.atomValues,v=>v.contents),updatedAtoms=Recoil_intersectSets(snapshot.dirtyAtoms,new Set(atomValues.keys()));return{atomValues:atomValues,updatedAtoms:updatedAtoms}},useTransactionSubscription_DEPRECATED:useTransactionSubscription,useTransactionObservation_DEPRECATED:function(callback){useTransactionSubscription(useCallback(store=>{const previousState=store.getState().currentTree;let nextState=store.getState().nextTree;nextState||(nextState=store.getState().currentTree);const atomValues=externallyVisibleAtomValuesInState(nextState),previousAtomValues=externallyVisibleAtomValuesInState(previousState),atomInfo=Recoil_mapMap(nodes$1,node=>{var _node$options$persist,_node$options2,_node$options2$persis,_node$options$persist2,_node$options3,_node$options3$persis;return{persistence_UNSTABLE:{type:null!==(_node$options$persist=null===(_node$options2=node.options)||void 0===_node$options2||null===(_node$options2$persis=_node$options2.persistence_UNSTABLE)||void 0===_node$options2$persis?void 0:_node$options2$persis.type)&&void 0!==_node$options$persist?_node$options$persist:\"none\",backButton:null!==(_node$options$persist2=null===(_node$options3=node.options)||void 0===_node$options3||null===(_node$options3$persis=_node$options3.persistence_UNSTABLE)||void 0===_node$options3$persis?void 0:_node$options3$persis.backButton)&&void 0!==_node$options$persist2&&_node$options$persist2}}}),modifiedAtoms=new Set(nextState.dirtyAtoms);callback({atomValues:atomValues,previousAtomValues:previousAtomValues,atomInfo:atomInfo,modifiedAtoms:modifiedAtoms,transactionMetadata:{...nextState.transactionMetadata}})},[callback]))},useRecoilTransactionObserver:function(callback){useTransactionSubscription(useCallback(store=>{const previousState=store.getState().currentTree;let nextState=store.getState().nextTree;nextState||(nextState=previousState),callback({snapshot:cloneSnapshot$1(nextState),previousSnapshot:cloneSnapshot$1(previousState)})},[callback]))},useRecoilSnapshot:function(){const store=useStoreRef$1(),[snapshot,setSnapshot]=useState$1(()=>cloneSnapshot$1(store.current.getState().currentTree));return useTransactionSubscription(useCallback(store=>{var _store$getState$nextT;return setSnapshot(cloneSnapshot$1(null!==(_store$getState$nextT=store.getState().nextTree)&&void 0!==_store$getState$nextT?_store$getState$nextT:store.getState().currentTree))},[])),snapshot},useGoToSnapshot_DEPRECATED:function(){const storeRef=useStoreRef$1();return snapshot=>{reactDom.unstable_batchedUpdates(()=>{snapshot.updatedAtoms.forEach(key=>{setRecoilValue$2(storeRef.current,new AbstractRecoilValue$2(key),snapshot.atomValues.get(key))})})}},useGotoRecoilSnapshot:useGotoRecoilSnapshot,useSetUnvalidatedAtomValues:function(){const storeRef=useStoreRef$1();return(values,transactionMetadata={})=>{reactDom.unstable_batchedUpdates(()=>{storeRef.current.addTransactionMetadata(transactionMetadata),values.forEach((value,key)=>setUnvalidatedRecoilValue$1(storeRef.current,new AbstractRecoilValue$2(key),value))})}}};var Recoil_isPromise=function(p){return!!p&&\"function\"==typeof p.then};const loadableAccessors={getValue(){if(\"hasValue\"!==this.state)throw this.contents;return this.contents},toPromise(){return\"hasValue\"===this.state?Promise.resolve(this.contents):\"hasError\"===this.state?Promise.reject(this.contents):this.contents},valueMaybe(){return\"hasValue\"===this.state?this.contents:void 0},valueOrThrow(){if(\"hasValue\"!==this.state)throw new Error(`Loadable expected value, but in \"${this.state}\" state`);return this.contents},errorMaybe(){return\"hasError\"===this.state?this.contents:void 0},errorOrThrow(){if(\"hasError\"!==this.state)throw new Error(`Loadable expected error, but in \"${this.state}\" state`);return this.contents},promiseMaybe(){return\"loading\"===this.state?this.contents:void 0},promiseOrThrow(){if(\"loading\"!==this.state)throw new Error(`Loadable expected promise, but in \"${this.state}\" state`);return this.contents},map(map){if(\"hasError\"===this.state)return this;if(\"hasValue\"===this.state)try{const next=map(this.contents);return Recoil_isPromise(next)?loadableWithPromise(next):loadableWithValue(next)}catch(e){return Recoil_isPromise(e)?loadableWithPromise(e.next(()=>map(this.contents))):loadableWithError(e)}if(\"loading\"===this.state)return loadableWithPromise(this.contents.then(map).catch(e=>{if(Recoil_isPromise(e))return e.then(()=>map(this.contents));throw e}));throw new Error(\"Invalid Loadable state\")}};function loadableWithValue(value){return Object.freeze({state:\"hasValue\",contents:value,...loadableAccessors})}function loadableWithError(error){return Object.freeze({state:\"hasError\",contents:error,...loadableAccessors})}function loadableWithPromise(promise){return Object.freeze({state:\"loading\",contents:promise,...loadableAccessors})}var Recoil_Loadable={loadableWithValue:loadableWithValue,loadableWithError:loadableWithError,loadableWithPromise:loadableWithPromise,loadableLoading:function(){return loadableWithPromise(new Promise(()=>{}))},loadableAll:function(inputs){return inputs.every(i=>\"hasValue\"===i.state)?loadableWithValue(inputs.map(i=>i.contents)):inputs.some(i=>\"hasError\"===i.state)?loadableWithError(Recoil_nullthrows(inputs.find(i=>\"hasError\"===i.state),\"Invalid loadable passed to loadableAll\").contents):loadableWithPromise(Promise.all(inputs.map(i=>i.contents)))}};var Recoil_isNode=function(object){var _ownerDocument,_doc$defaultView;if(\"undefined\"==typeof window)return!1;const defaultView=null!==(_doc$defaultView=(null!=object?null!==(_ownerDocument=object.ownerDocument)&&void 0!==_ownerDocument?_ownerDocument:object:document).defaultView)&&void 0!==_doc$defaultView?_doc$defaultView:window;return!(null==object||!(\"function\"==typeof defaultView.Node?object instanceof defaultView.Node:\"object\"==typeof object&&\"number\"==typeof object.nodeType&&\"string\"==typeof object.nodeName))};var Recoil_deepFreezeValue=function deepFreezeValue(value){if(\"object\"==typeof value&&!function(value){if(null===value||\"object\"!=typeof value)return!0;switch(typeof value.$$typeof){case\"symbol\":case\"number\":return!0}return null!=value[\"@@__IMMUTABLE_ITERABLE__@@\"]||null!=value[\"@@__IMMUTABLE_KEYED__@@\"]||null!=value[\"@@__IMMUTABLE_INDEXED__@@\"]||null!=value[\"@@__IMMUTABLE_ORDERED__@@\"]||null!=value[\"@@__IMMUTABLE_RECORD__@@\"]||(!!Recoil_isNode(value)||!!Recoil_isPromise(value))}(value)){Object.freeze(value);for(const key in value)if(Object.prototype.hasOwnProperty.call(value,key)){const prop=value[key];\"object\"!=typeof prop||null==prop||Object.isFrozen(prop)||deepFreezeValue(prop)}Object.seal(value)}};const LEAF=Symbol(\"ArrayKeyedMap\"),emptyMap$1=new Map;class ArrayKeyedMap{constructor(existing){if(this._base=new Map,existing instanceof ArrayKeyedMap)for(const[k,v]of existing.entries())this.set(k,v);else if(existing)for(const[k,v]of existing)this.set(k,v);return this}get(key){const ks=Array.isArray(key)?key:[key];let map=this._base;return ks.forEach(k=>{var _map$get;map=null!==(_map$get=map.get(k))&&void 0!==_map$get?_map$get:emptyMap$1}),void 0===map?void 0:map.get(LEAF)}set(key,value){const ks=Array.isArray(key)?key:[key];let map=this._base,next=map;return ks.forEach(k=>{next=map.get(k),next||(next=new Map,map.set(k,next)),map=next}),next.set(LEAF,value),this}delete(key){const ks=Array.isArray(key)?key:[key];let map=this._base,next=map;return ks.forEach(k=>{next=map.get(k),next||(next=new Map,map.set(k,next)),map=next}),next.delete(LEAF),this}entries(){const answer=[];return function recurse(level,prefix){level.forEach((v,k)=>{k===LEAF?answer.push([prefix,v]):recurse(v,prefix.concat(k))})}(this._base,[]),answer.values()}toBuiltInMap(){return new Map(this.entries())}}var Recoil_ArrayKeyedMap=ArrayKeyedMap;var Recoil_cacheWithReferenceEquality=function(){return new Recoil_ArrayKeyedMap};var Recoil_everySet=function(set,callback,context){const iterator=set.entries();let current=iterator.next();for(;!current.done;){const entry=current.value;if(!callback.call(context,entry[1],entry[0],set))return!1;current=iterator.next()}return!0};var Recoil_equalsSet=function(one,two){return one.size===two.size&&Recoil_everySet(one,value=>two.has(value))};var Recoil_PerformanceTimings={startPerfBlock:function(_id){return()=>null}};Object.freeze(new Set);const{mapBySettingInMap:mapBySettingInMap$2,mapByUpdatingInMap:mapByUpdatingInMap$2,setByAddingToSet:setByAddingToSet$3,setByDeletingFromSet:setByDeletingFromSet$1}=Recoil_CopyOnWrite,{detectCircularDependencies:detectCircularDependencies$1,getNodeLoadable:getNodeLoadable$2,setNodeValue:setNodeValue$4}=Recoil_FunctionalCore,{loadableWithError:loadableWithError$1,loadableWithPromise:loadableWithPromise$1,loadableWithValue:loadableWithValue$1}=Recoil_Loadable,{DEFAULT_VALUE:DEFAULT_VALUE$3,RecoilValueNotReady:RecoilValueNotReady$2,registerNode:registerNode$1}=Recoil_Node,{startPerfBlock:startPerfBlock$1}=Recoil_PerformanceTimings,{isRecoilValue:isRecoilValue$1}=require$$2,emptySet$2=Object.freeze(new Set);function cacheKeyFromDepValues(depValues){const answer=[];for(const key of Array.from(depValues.keys()).sort()){const loadable=Recoil_nullthrows(depValues.get(key));answer.push(key),answer.push(loadable.contents)}return answer}var Recoil_selector=function(options){const{key:key,get:get,cacheImplementation_UNSTABLE:cacheImplementation}=options,set=null!=options.set?options.set:void 0;let cache=null!=cacheImplementation?cacheImplementation:Recoil_cacheWithReferenceEquality();function getFromCache(store,state){var _state$nodeDeps$get;let newState=state;const currentDeps=null!==(_state$nodeDeps$get=state.nodeDeps.get(key))&&void 0!==_state$nodeDeps$get?_state$nodeDeps$get:emptySet$2,cacheKey=cacheKeyFromDepValues(new Map(Array.from(currentDeps).sort().map(depKey=>{const[nextState,loadable]=getNodeLoadable$2(store,newState,depKey);return newState=nextState,[depKey,loadable]}))),cached=cache.get(cacheKey);if(null!=cached)return[newState,cached];const[nextState,loadable,newDepValues]=function(store,state){var _state$nodeDeps$get2;const[newStateFromEvaluate,loadable,newDepValues]=function(store,state){const endPerfBlock=startPerfBlock$1(key);let newState=state;const depValues=new Map;function getRecoilValue({key:key}){let loadable;if([newState,loadable]=getNodeLoadable$2(store,newState,key),depValues.set(key,loadable),\"hasValue\"===loadable.state)return loadable.contents;throw loadable.contents}try{const output=get({get:getRecoilValue}),result=isRecoilValue$1(output)?getRecoilValue(output):output,loadable=Recoil_isPromise(result)?loadableWithPromise$1(result.finally(endPerfBlock)):(endPerfBlock(),loadableWithValue$1(result));return[newState,loadable,depValues]}catch(errorOrDepPromise){const loadable=Recoil_isPromise(errorOrDepPromise)?loadableWithPromise$1(errorOrDepPromise.then(()=>{let loadable=loadableWithError$1(new Error(\"Internal Recoil Selector Error\"));if(store.replaceState(asyncState=>{let newAsyncState;return[newAsyncState,loadable]=getFromCache(store,asyncState),newAsyncState}),\"hasError\"===loadable.state)throw loadable.contents;return loadable.contents}).finally(endPerfBlock)):(endPerfBlock(),loadableWithError$1(errorOrDepPromise));return[newState,loadable,depValues]}}(store,state);let newState=newStateFromEvaluate;const oldDeps=null!==(_state$nodeDeps$get2=state.nodeDeps.get(key))&&void 0!==_state$nodeDeps$get2?_state$nodeDeps$get2:emptySet$2,newDeps=new Set(newDepValues.keys());newState=Recoil_equalsSet(oldDeps,newDeps)?newState:{...newState,nodeDeps:mapBySettingInMap$2(newState.nodeDeps,key,newDeps)};const addedDeps=Recoil_differenceSets(newDeps,oldDeps),removedDeps=Recoil_differenceSets(oldDeps,newDeps);for(const upstreamNode of addedDeps)newState={...newState,nodeToNodeSubscriptions:mapByUpdatingInMap$2(newState.nodeToNodeSubscriptions,upstreamNode,subs=>setByAddingToSet$3(null!=subs?subs:emptySet$2,key))};for(const upstreamNode of removedDeps)newState={...newState,nodeToNodeSubscriptions:mapByUpdatingInMap$2(newState.nodeToNodeSubscriptions,upstreamNode,subs=>setByDeletingFromSet$1(null!=subs?subs:emptySet$2,key))};return[newState,loadable,newDepValues]}(store,newState);newState=nextState;const newCacheKey=cacheKeyFromDepValues(newDepValues);return function(store,cacheKey,loadable){\"loading\"!==loadable.state?!0==!options.dangerouslyAllowMutability&&Recoil_deepFreezeValue(loadable.contents):loadable.contents.then(result=>(!0==!options.dangerouslyAllowMutability&&Recoil_deepFreezeValue(result),cache=cache.set(cacheKey,loadableWithValue$1(result)),store.fireNodeSubscriptions(new Set([key]),\"now\"),result)).catch(error=>(Recoil_isPromise(error)||(!0==!options.dangerouslyAllowMutability&&Recoil_deepFreezeValue(error),cache=cache.set(cacheKey,loadableWithError$1(error)),store.fireNodeSubscriptions(new Set([key]),\"now\")),error)),cache=cache.set(cacheKey,loadable)}(store,newCacheKey,loadable),[newState,loadable]}function myGet(store,state){return getFromCache(store,state)}if(null!=set){return registerNode$1({key:key,options:options,get:myGet,set:function(store,state,newValue){let newState=state;const writtenNodes=new Set;function getRecoilValue({key:key}){const[nextState,loadable]=getNodeLoadable$2(store,newState,key);if(newState=nextState,\"hasValue\"===loadable.state)return loadable.contents;throw\"loading\"===loadable.state?new RecoilValueNotReady$2(key):loadable.contents}function setRecoilState(recoilState,valueOrUpdater){const newValue=\"function\"==typeof valueOrUpdater?valueOrUpdater(getRecoilValue(recoilState)):valueOrUpdater;let written;[newState,written]=setNodeValue$4(store,newState,recoilState.key,newValue),written.forEach(atom=>writtenNodes.add(atom))}return set({set:setRecoilState,get:getRecoilValue,reset:function(recoilState){setRecoilState(recoilState,DEFAULT_VALUE$3)}},newValue),[newState,writtenNodes]}})}return registerNode$1({key:key,options:options,get:myGet})};const{loadableWithValue:loadableWithValue$2}=Recoil_Loadable,{DEFAULT_VALUE:DEFAULT_VALUE$4,DefaultValue:DefaultValue$1,registerNode:registerNode$2}=Recoil_Node,{isRecoilValue:isRecoilValue$2}=require$$2,{mapByDeletingFromMap:mapByDeletingFromMap$2,mapBySettingInMap:mapBySettingInMap$3,setByAddingToSet:setByAddingToSet$4}=Recoil_CopyOnWrite;function atom(options){const{default:optionsDefault,...restOptions}=options;return isRecoilValue$2(optionsDefault)||Recoil_isPromise(optionsDefault)?function(options){const base=atom({...options,default:DEFAULT_VALUE$4,persistence_UNSTABLE:void 0===options.persistence_UNSTABLE?void 0:{...options.persistence_UNSTABLE,validator:storedValue=>storedValue instanceof DefaultValue$1?storedValue:Recoil_nullthrows(options.persistence_UNSTABLE).validator(storedValue,DEFAULT_VALUE$4)}});return Recoil_selector({key:options.key+\"__withFallback\",get:({get:get})=>{const baseValue=get(base);return baseValue instanceof DefaultValue$1?options.default:baseValue},set:({set:set},newValue)=>set(base,newValue),dangerouslyAllowMutability:options.dangerouslyAllowMutability})}({...restOptions,default:optionsDefault}):function(options){const{key:key,persistence_UNSTABLE:persistence}=options;return registerNode$2({key:key,options:options,get:(_store,state)=>{if(state.atomValues.has(key))return[state,Recoil_nullthrows(state.atomValues.get(key))];if(state.nonvalidatedAtoms.has(key)){if(null==persistence)return[state,loadableWithValue$2(options.default)];const nonvalidatedValue=state.nonvalidatedAtoms.get(key),validatedValue=persistence.validator(nonvalidatedValue,DEFAULT_VALUE$4);return validatedValue instanceof DefaultValue$1?[{...state,nonvalidatedAtoms:mapByDeletingFromMap$2(state.nonvalidatedAtoms,key)},loadableWithValue$2(options.default)]:[{...state,atomValues:mapBySettingInMap$3(state.atomValues,key,loadableWithValue$2(validatedValue)),nonvalidatedAtoms:mapByDeletingFromMap$2(state.nonvalidatedAtoms,key)},loadableWithValue$2(validatedValue)]}return[state,loadableWithValue$2(options.default)]},set:(_store,state,newValue)=>(!0!==options.dangerouslyAllowMutability&&Recoil_deepFreezeValue(newValue),[{...state,dirtyAtoms:setByAddingToSet$4(state.dirtyAtoms,key),atomValues:newValue instanceof DefaultValue$1?mapByDeletingFromMap$2(state.atomValues,key):mapBySettingInMap$3(state.atomValues,key,loadableWithValue$2(newValue)),nonvalidatedAtoms:mapByDeletingFromMap$2(state.nonvalidatedAtoms,key)},new Set([key])])})}({...restOptions,default:optionsDefault})}var Recoil_atom=atom;var Recoil_stableStringify=function(x,opt={allowFunctions:!1}){return function stringify(x,opt,key){if(\"string\"==typeof x&&!x.includes('\"')&&!x.includes(\"\\\\\"))return`\"${x}\"`;switch(typeof x){case\"undefined\":return\"\";case\"boolean\":return x?\"true\":\"false\";case\"number\":case\"symbol\":return String(x);case\"string\":return JSON.stringify(x);case\"function\":if(!0!==(null==opt?void 0:opt.allowFunctions))throw new Error(\"Attempt to serialize function in a Recoil cache key\");return`__FUNCTION(${x.name})__`}return null===x?\"null\":\"object\"!=typeof x?null!==(_JSON$stringify=JSON.stringify(x))&&void 0!==_JSON$stringify?_JSON$stringify:\"\":Recoil_isPromise(x)?\"__PROMISE__\":Array.isArray(x)?`[${x.map((v,i)=>stringify(v,opt,i.toString()))}]`:\"function\"==typeof x.toJSON?stringify(x.toJSON(key),opt,key):x instanceof Map?stringify(Array.from(x).reduce((obj,[k,v])=>({...obj,[\"string\"==typeof k?k:stringify(k,opt)]:v}),{}),opt,key):x instanceof Set?stringify(Array.from(x).sort((a,b)=>stringify(a,opt).localeCompare(stringify(b,opt))),opt,key):null!=x[Symbol.iterator]&&\"function\"==typeof x[Symbol.iterator]?stringify(Array.from(x),opt,key):`{${Object.keys(x).filter(key=>void 0!==x[key]).sort().map(key=>`${stringify(key,opt)}:${stringify(x[key],opt,key)}`).join(\",\")}}`;var _JSON$stringify}(x,opt)};var Recoil_cacheWithValueEquality=function(){const map=new Map,cache={get:key=>map.get(Recoil_stableStringify(key)),set:(key,value)=>(map.set(Recoil_stableStringify(key),value),cache),map:map};return cache};let nextIndex=0;var Recoil_selectorFamily=function(options){var _options$cacheImpleme,_options$cacheImpleme2;let selectorCache=null!==(_options$cacheImpleme=null===(_options$cacheImpleme2=options.cacheImplementationForParams_UNSTABLE)||void 0===_options$cacheImpleme2?void 0:_options$cacheImpleme2.call(options))&&void 0!==_options$cacheImpleme?_options$cacheImpleme:Recoil_cacheWithValueEquality();return params=>{var _stableStringify,_options$cacheImpleme3;const cachedSelector=selectorCache.get(params);if(null!=cachedSelector)return cachedSelector;const myKey=`${options.key}__selectorFamily/${null!==(_stableStringify=Recoil_stableStringify(params,{allowFunctions:!0}))&&void 0!==_stableStringify?_stableStringify:\"void\"}/${nextIndex++}`,myGet=callbacks=>options.get(params)(callbacks),myCacheImplementation=null===(_options$cacheImpleme3=options.cacheImplementation_UNSTABLE)||void 0===_options$cacheImpleme3?void 0:_options$cacheImpleme3.call(options);let newSelector;if(null!=options.set){const set=options.set;newSelector=Recoil_selector({key:myKey,get:myGet,set:(callbacks,newValue)=>set(params)(callbacks,newValue),cacheImplementation_UNSTABLE:myCacheImplementation,dangerouslyAllowMutability:options.dangerouslyAllowMutability})}else newSelector=Recoil_selector({key:myKey,get:myGet,cacheImplementation_UNSTABLE:myCacheImplementation,dangerouslyAllowMutability:options.dangerouslyAllowMutability});return selectorCache=selectorCache.set(params,newSelector),newSelector}},ParameterizedAtomTaggedValue_DEPRECATED=getCjsExportFromNamespace(Object.freeze({__proto__:null}));const{DEFAULT_VALUE:DEFAULT_VALUE$5,DefaultValue:DefaultValue$2}=Recoil_Node;function isSuperset(setA,setB){return Recoil_everySet(setB,b=>setA.has(b))}const pick=(object,chosenKeys)=>Array.from(chosenKeys).reduce((obj,key)=>({...obj,[key]:object[key]}),{});function mapPersistenceSettings_DEPRECATED(settings){if(null==settings)return;const{...passthrough}=settings;return{...passthrough,validator:storedValue=>storedValue instanceof ParameterizedAtomTaggedValue_DEPRECATED?new ParameterizedAtomTaggedValue_DEPRECATED(storedValue.value.filter(([keys,map])=>keys instanceof Set&&map instanceof Map).map(([keys,map])=>[keys,Array.from(map.entries()).reduce((acc,[k,v])=>{const validatedValue=passthrough.validator(v,DEFAULT_VALUE$5);return validatedValue instanceof DefaultValue$2||acc.set(k,validatedValue),acc},new Map)])):passthrough.validator(storedValue,DEFAULT_VALUE$5)}}var Recoil_atomFamily=function(options){let atomCache=Recoil_cacheWithValueEquality();const legacyAtomOptions={key:options.key,default:DEFAULT_VALUE$5,persistence_UNSTABLE:mapPersistenceSettings_DEPRECATED(options.persistence_UNSTABLE)};let legacyAtom;legacyAtom=Recoil_atom(legacyAtomOptions);const atomFamilyDefault=Recoil_selectorFamily({key:options.key+\"__atomFamily/Default\",get:param=>({get:get})=>{const legacyValue=get(\"function\"==typeof legacyAtom?legacyAtom(param):legacyAtom);if(!(legacyValue instanceof DefaultValue$2)){const upgradedValue=function(baseValue,parameter){if(!(baseValue instanceof ParameterizedAtomTaggedValue_DEPRECATED))return baseValue;if(\"object\"!=typeof parameter||null==parameter||Array.isArray(parameter))return DEFAULT_VALUE$5;const entries=baseValue.value,parameterKeys=new Set(Object.keys(parameter));for(const[entryParameterKeys,entryMap]of entries)if(isSuperset(parameterKeys,entryParameterKeys)){const contextOrSubcontext=parameterKeys.size===entryParameterKeys.size?parameter:pick(parameter,entryParameterKeys),value=entryMap.get(Recoil_stableStringify(contextOrSubcontext));if(void 0!==value)return value}return DEFAULT_VALUE$5}(legacyValue,param);if(!(upgradedValue instanceof DefaultValue$2))return upgradedValue}return\"function\"==typeof options.default?options.default(param):options.default},dangerouslyAllowMutability:options.dangerouslyAllowMutability});return params=>{var _stableStringify;const cachedAtom=atomCache.get(params);if(null!=cachedAtom)return cachedAtom;const newAtom=Recoil_atom({key:`${options.key}__${null!==(_stableStringify=Recoil_stableStringify(params))&&void 0!==_stableStringify?_stableStringify:\"void\"}`,default:atomFamilyDefault(params),persistence_UNSTABLE:options.persistence_UNSTABLE,dangerouslyAllowMutability:options.dangerouslyAllowMutability});return atomCache=atomCache.set(params,newAtom),newAtom}};const constantSelector=Recoil_selectorFamily({key:\"__constant\",get:constant=>()=>constant,cacheImplementationForParams_UNSTABLE:Recoil_cacheWithReferenceEquality});var Recoil_constSelector=function(constant){return constantSelector(constant)};const throwingSelector=Recoil_selectorFamily({key:\"__error\",get:message=>()=>{throw new Error(message)},cacheImplementationForParams_UNSTABLE:Recoil_cacheWithReferenceEquality});var Recoil_errorSelector=function(message){return throwingSelector(message)};var Recoil_readOnlySelector=function(atom){return atom};const{loadableWithError:loadableWithError$2,loadableWithPromise:loadableWithPromise$2,loadableWithValue:loadableWithValue$3}=Recoil_Loadable;function concurrentRequests(getRecoilValue,deps){const results=Array(deps.length).fill(void 0),exceptions=Array(deps.length).fill(void 0);for(const[i,dep]of deps.entries())try{results[i]=getRecoilValue(dep)}catch(e){exceptions[i]=e}return[results,exceptions]}function isError(exp){return null!=exp&&!Recoil_isPromise(exp)}function unwrapDependencies(dependencies){return Array.isArray(dependencies)?dependencies:Object.getOwnPropertyNames(dependencies).map(key=>dependencies[key])}function wrapResults(dependencies,results){return Array.isArray(dependencies)?results:Object.getOwnPropertyNames(dependencies).reduce((out,key,idx)=>({...out,[key]:results[idx]}),{})}function wrapLoadables(dependencies,results,exceptions){return wrapResults(dependencies,exceptions.map((exception,idx)=>null==exception?loadableWithValue$3(results[idx]):Recoil_isPromise(exception)?loadableWithPromise$2(exception):loadableWithError$2(exception)))}var Recoil_WaitFor={waitForNone:Recoil_selectorFamily({key:\"__waitForNone\",get:dependencies=>({get:get})=>{const deps=unwrapDependencies(dependencies),[results,exceptions]=concurrentRequests(get,deps);return wrapLoadables(dependencies,results,exceptions)}}),waitForAny:Recoil_selectorFamily({key:\"__waitForAny\",get:dependencies=>({get:get})=>{const deps=unwrapDependencies(dependencies),[results,exceptions]=concurrentRequests(get,deps);if(exceptions.some(exp=>null==exp))return wrapLoadables(dependencies,results,exceptions);if(exceptions.every(isError))throw exceptions.find(isError);throw new Promise((resolve,reject)=>{for(const[i,exp]of exceptions.entries())Recoil_isPromise(exp)&&exp.then(result=>{results[i]=result,exceptions[i]=null,resolve(wrapLoadables(dependencies,results,exceptions))}).catch(error=>{exceptions[i]=error,exceptions.every(isError)&&reject(exceptions[0])})})}}),waitForAll:Recoil_selectorFamily({key:\"__waitForAll\",get:dependencies=>({get:get})=>{const deps=unwrapDependencies(dependencies),[results,exceptions]=concurrentRequests(get,deps);if(exceptions.every(exp=>null==exp))return wrapResults(dependencies,results);const error=exceptions.find(isError);if(null!=error)throw error;throw Promise.all(exceptions).then(results=>wrapResults(dependencies,results))}}),noWait:Recoil_selectorFamily({key:\"__noWait\",get:dependency=>({get:get})=>{try{return loadableWithValue$3(get(dependency))}catch(exception){return Recoil_isPromise(exception)?loadableWithPromise$2(exception):loadableWithError$2(exception)}}})};const{DefaultValue:DefaultValue$3}=Recoil_Node,{RecoilRoot:RecoilRoot$1}=Recoil_RecoilRoot_react,{isRecoilValue:isRecoilValue$3}=require$$2,{useGotoRecoilSnapshot:useGotoRecoilSnapshot$1,useRecoilCallback:useRecoilCallback$1,useRecoilSnapshot:useRecoilSnapshot$1,useRecoilState:useRecoilState$1,useRecoilStateLoadable:useRecoilStateLoadable$1,useRecoilTransactionObserver:useRecoilTransactionObserver$1,useRecoilValue:useRecoilValue$1,useRecoilValueLoadable:useRecoilValueLoadable$1,useResetRecoilState:useResetRecoilState$1,useSetRecoilState:useSetRecoilState$1,useSetUnvalidatedAtomValues:useSetUnvalidatedAtomValues$1,useTransactionObservation_DEPRECATED:useTransactionObservation_DEPRECATED$1}=Recoil_Hooks,{noWait:noWait$1,waitForAll:waitForAll$1,waitForAny:waitForAny$1,waitForNone:waitForNone$1}=Recoil_WaitFor;var Recoil_index={DefaultValue:DefaultValue$3,RecoilRoot:RecoilRoot$1,atom:Recoil_atom,selector:Recoil_selector,atomFamily:Recoil_atomFamily,selectorFamily:Recoil_selectorFamily,constSelector:Recoil_constSelector,errorSelector:Recoil_errorSelector,readOnlySelector:Recoil_readOnlySelector,useRecoilValue:useRecoilValue$1,useRecoilValueLoadable:useRecoilValueLoadable$1,useRecoilState:useRecoilState$1,useRecoilStateLoadable:useRecoilStateLoadable$1,useSetRecoilState:useSetRecoilState$1,useResetRecoilState:useResetRecoilState$1,useRecoilCallback:useRecoilCallback$1,useGotoRecoilSnapshot:useGotoRecoilSnapshot$1,useRecoilSnapshot:useRecoilSnapshot$1,useRecoilTransactionObserver_UNSTABLE:useRecoilTransactionObserver$1,useTransactionObservation_UNSTABLE:useTransactionObservation_DEPRECATED$1,useSetUnvalidatedAtomValues_UNSTABLE:useSetUnvalidatedAtomValues$1,noWait:noWait$1,waitForNone:waitForNone$1,waitForAny:waitForAny$1,waitForAll:waitForAll$1,isRecoilValue:isRecoilValue$3},Recoil_index_1=Recoil_index.DefaultValue,Recoil_index_2=Recoil_index.RecoilRoot,Recoil_index_3=Recoil_index.atom,Recoil_index_4=Recoil_index.selector,Recoil_index_5=Recoil_index.atomFamily,Recoil_index_6=Recoil_index.selectorFamily,Recoil_index_7=Recoil_index.constSelector,Recoil_index_8=Recoil_index.errorSelector,Recoil_index_9=Recoil_index.readOnlySelector,Recoil_index_10=Recoil_index.useRecoilValue,Recoil_index_11=Recoil_index.useRecoilValueLoadable,Recoil_index_12=Recoil_index.useRecoilState,Recoil_index_13=Recoil_index.useRecoilStateLoadable,Recoil_index_14=Recoil_index.useSetRecoilState,Recoil_index_15=Recoil_index.useResetRecoilState,Recoil_index_16=Recoil_index.useRecoilCallback,Recoil_index_17=Recoil_index.useGotoRecoilSnapshot,Recoil_index_18=Recoil_index.useRecoilSnapshot,Recoil_index_19=Recoil_index.useRecoilTransactionObserver_UNSTABLE,Recoil_index_20=Recoil_index.useTransactionObservation_UNSTABLE,Recoil_index_21=Recoil_index.useSetUnvalidatedAtomValues_UNSTABLE,Recoil_index_22=Recoil_index.noWait,Recoil_index_23=Recoil_index.waitForNone,Recoil_index_24=Recoil_index.waitForAny,Recoil_index_25=Recoil_index.waitForAll,Recoil_index_26=Recoil_index.isRecoilValue;exports.DefaultValue=Recoil_index_1,exports.RecoilRoot=Recoil_index_2,exports.atom=Recoil_index_3,exports.atomFamily=Recoil_index_5,exports.constSelector=Recoil_index_7,exports.default=Recoil_index,exports.errorSelector=Recoil_index_8,exports.isRecoilValue=Recoil_index_26,exports.noWait=Recoil_index_22,exports.readOnlySelector=Recoil_index_9,exports.selector=Recoil_index_4,exports.selectorFamily=Recoil_index_6,exports.useGotoRecoilSnapshot=Recoil_index_17,exports.useRecoilCallback=Recoil_index_16,exports.useRecoilSnapshot=Recoil_index_18,exports.useRecoilState=Recoil_index_12,exports.useRecoilStateLoadable=Recoil_index_13,exports.useRecoilTransactionObserver_UNSTABLE=Recoil_index_19,exports.useRecoilValue=Recoil_index_10,exports.useRecoilValueLoadable=Recoil_index_11,exports.useResetRecoilState=Recoil_index_15,exports.useSetRecoilState=Recoil_index_14,exports.useSetUnvalidatedAtomValues_UNSTABLE=Recoil_index_21,exports.useTransactionObservation_UNSTABLE=Recoil_index_20,exports.waitForAll=Recoil_index_25,exports.waitForAny=Recoil_index_24,exports.waitForNone=Recoil_index_23;\n"]},"metadata":{},"sourceType":"script"}