{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\"; // @inheritedComponent IconButton\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withFormControlContext from '../FormControl/withFormControlContext';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var _clsx;\n\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      classNameProp = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      muiFormControl = props.muiFormControl,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"muiFormControl\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _React$useRef = React.useRef(checkedProp != null),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(Boolean(defaultChecked)),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checkedState = _React$useState2[0],\n      setCheckedState = _React$useState2[1];\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var checked = event.target.checked;\n\n    if (!isControlled) {\n      setCheckedState(checked);\n    }\n\n    if (onChange) {\n      onChange(event, checked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var checked = isControlled ? checkedProp : checkedState;\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, (_clsx = {}, _defineProperty(_clsx, classes.checked, checked), _defineProperty(_clsx, classes.disabled, disabled), _clsx), classNameProp),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), checked ? checkedIcon : icon, React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * This property can be used to pass a ref callback to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component property `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(withFormControlContext(SwitchBase));","map":{"version":3,"sources":["C:/Users/robson/Desktop/cidadealta/cidadealta-app/node_modules/@material-ui/core/esm/internal/SwitchBase.js"],"names":["_extends","_defineProperty","_slicedToArray","_objectWithoutProperties","React","PropTypes","clsx","withFormControlContext","withStyles","IconButton","styles","root","padding","checked","disabled","input","cursor","position","opacity","width","height","top","left","margin","SwitchBase","forwardRef","props","ref","_clsx","autoFocus","checkedProp","checkedIcon","classes","classNameProp","className","defaultChecked","disabledProp","icon","id","inputProps","inputRef","muiFormControl","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_React$useRef","useRef","isControlled","current","_React$useState","useState","Boolean","_React$useState2","checkedState","setCheckedState","handleFocus","event","handleBlur","handleInputChange","target","hasLabelFor","createElement","component","role","undefined","process","env","NODE_ENV","propTypes","bool","node","isRequired","object","string","oneOfType","func","number","any"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withFormControlContext from '../FormControl/withFormControlContext';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var _clsx;\n\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      classNameProp = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      muiFormControl = props.muiFormControl,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"muiFormControl\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _React$useRef = React.useRef(checkedProp != null),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(Boolean(defaultChecked)),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checkedState = _React$useState2[0],\n      setCheckedState = _React$useState2[1];\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var checked = event.target.checked;\n\n    if (!isControlled) {\n      setCheckedState(checked);\n    }\n\n    if (onChange) {\n      onChange(event, checked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var checked = isControlled ? checkedProp : checkedState;\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, (_clsx = {}, _defineProperty(_clsx, classes.checked, checked), _defineProperty(_clsx, classes.disabled, disabled), _clsx), classNameProp),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), checked ? checkedIcon : icon, React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * This property can be used to pass a ref callback to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component property `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(withFormControlContext(SwitchBase));"]},"metadata":{},"sourceType":"module"}