{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\robson\\\\Desktop\\\\drip\\\\server-data\\\\resources\\\\[drip]\\\\drip_bank\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\robson\\\\Desktop\\\\drip\\\\server-data\\\\resources\\\\[drip]\\\\drip_bank\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"C:\\\\Users\\\\robson\\\\Desktop\\\\drip\\\\server-data\\\\resources\\\\[drip]\\\\drip_bank\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";import React,{useState}from'react';import{Typography,TextField}from'@material-ui/core';import NumberFormat from'react-number-format';import{useRecoilState}from'recoil';import*as atoms from'../../navigation/atoms';import SubmitButtonWithSelector from'../../components/SubmitButtonWithSelector';var styles={container:{width:'100%',height:'40vh',display:'flex',alignItems:'center',justifyContent:'center',flexDirection:'column'},buttonContainer:{width:'100%',display:'flex',alignItems:'center',justifyContent:'center',flexDirection:'column',boxSizing:'border-box',padding:'1vh'},icon:{width:'3vh',height:'3vh'},withDescription:{display:'flex',alignItems:'flex-start',justifyContent:'flex-start',flexDirection:'column'},wrapper:{marginTop:'1vh',width:'30vw'}};function NumberFormatCustom(props){var inputRef=props.inputRef,onChange=props.onChange,other=_objectWithoutProperties(props,[\"inputRef\",\"onChange\"]);return React.createElement(NumberFormat,Object.assign({},other,{getInputRef:inputRef,onValueChange:function onValueChange(values){onChange({target:{name:props.name,value:values.value}});},thousandSeparator:true,isNumericString:true,prefix:\"$\"}));}var DepositScreen=function DepositScreen(){var _useRecoilState=useRecoilState(atoms.navigationAtom),_useRecoilState2=_slicedToArray(_useRecoilState,2),data=_useRecoilState2[0],setAccount=_useRecoilState2[1];var _useState=useState(data.account.money.toString()),_useState2=_slicedToArray(_useState,2),amount=_useState2[0],setAmount=_useState2[1];var isDisabled=!(data.account.money>=parseInt(amount)&&parseInt(amount)>=1);var handleChange=function handleChange(event){setAmount(event.target.value);};var handleDeposit=function handleDeposit(){var value=parseInt(amount);setAccount(function(prevState){return _objectSpread({},prevState,{account:_objectSpread({},prevState.account,{},{money:data.account.money-value,bankMoney:data.account.bankMoney+value}),isAsyncRequesting:true});});fetch(\"http://drip_bank/MakeADeposit\",{method:'POST',body:JSON.stringify({amount:value})});};return React.createElement(\"div\",{style:styles.container},React.createElement(\"div\",{style:styles.buttonContainer},React.createElement(\"div\",{style:styles.withDescription},React.createElement(Typography,{variant:\"subtitle2\",component:\"div\"},\"Quanto voc\\xEA gostaria de depositar?\"),React.createElement(Typography,{variant:\"body2\",component:\"div\"},\"Voc\\xEA tem \",new Intl.NumberFormat('en-US',{style:'currency',currency:'USD'}).format(data.account.money),\" em m\\xE3os\"),React.createElement(TextField,{label:\"\",value:amount,onChange:handleChange,autoFocus:true,InputProps:{inputComponent:NumberFormatCustom}}))),React.createElement(\"div\",{style:styles.wrapper},React.createElement(SubmitButtonWithSelector,{label:\"Depositar \\u279D\",isDisabled:isDisabled,isAsyncRequesting:data.isAsyncRequesting,onClick:handleDeposit,fullWidth:true})));};export default DepositScreen;","map":{"version":3,"sources":["C:/Users/robson/Desktop/drip/server-data/resources/[drip]/drip_bank/src/screens/Deposit/index.tsx"],"names":["React","useState","Typography","TextField","NumberFormat","useRecoilState","atoms","SubmitButtonWithSelector","styles","container","width","height","display","alignItems","justifyContent","flexDirection","buttonContainer","boxSizing","padding","icon","withDescription","wrapper","marginTop","NumberFormatCustom","props","inputRef","onChange","other","values","target","name","value","DepositScreen","navigationAtom","data","setAccount","account","money","toString","amount","setAmount","isDisabled","parseInt","handleChange","event","handleDeposit","prevState","bankMoney","isAsyncRequesting","fetch","method","body","JSON","stringify","Intl","style","currency","format","inputComponent"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { \r\n  Typography,\r\n  TextField,\r\n  withStyles\r\n} from '@material-ui/core';\r\nimport NumberFormat from 'react-number-format';\r\nimport { useRecoilState } from 'recoil';\r\nimport * as atoms from '../../navigation/atoms';\r\nimport SubmitButtonWithSelector from '../../components/SubmitButtonWithSelector';\r\n\r\nconst styles = {\r\n  container: {\r\n    width: '100%',\r\n    height: '40vh',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column'\r\n  } as React.CSSProperties,\r\n\r\n  buttonContainer: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    boxSizing: 'border-box',\r\n    padding: '1vh'\r\n  } as React.CSSProperties,\r\n\r\n  icon: {\r\n    width: '3vh',\r\n    height: '3vh'\r\n  } as React.CSSProperties,\r\n\r\n  withDescription: {\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start',\r\n    flexDirection: 'column'\r\n  } as React.CSSProperties,\r\n\r\n  wrapper: {\r\n    marginTop: '1vh',\r\n    width: '30vw'\r\n  } as React.CSSProperties\r\n}\r\n\r\ninterface NumberFormatCustomProps {\r\n  inputRef: (instance: NumberFormat | null) => void;\r\n  onChange: (event: { target: { name: string; value: string } }) => void;\r\n  name: string;\r\n}\r\n\r\nfunction NumberFormatCustom(props: NumberFormatCustomProps) {\r\n  const {inputRef, onChange, ...other} = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      isNumericString\r\n      prefix=\"$\"\r\n    />\r\n  );\r\n}\r\n\r\nconst DepositScreen = () => {\r\n  const [data, setAccount] = useRecoilState(atoms.navigationAtom);\r\n  const [amount, setAmount] = useState(data.account.money.toString());\r\n\r\n  const isDisabled = !(data.account.money >= parseInt(amount) &&   \r\n                     parseInt(amount) >= 1);\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAmount(event.target.value as string);\r\n  };\r\n\r\n  const handleDeposit = () => {\r\n    const value = parseInt(amount);\r\n\r\n    setAccount(prevState => ({ \r\n      ...prevState,\r\n      account: {\r\n        ...prevState.account, \r\n        ...{\r\n          money: data.account.money - value,\r\n          bankMoney: data.account.bankMoney + value\r\n        }\r\n      },\r\n      isAsyncRequesting: true\r\n    }));\r\n\r\n    fetch(`http://drip_bank/MakeADeposit`, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        amount: value\r\n      })\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <div style={styles.buttonContainer}>\r\n        <div style={styles.withDescription}>\r\n          <Typography \r\n            variant='subtitle2' \r\n            component='div'>\r\n            Quanto você gostaria de depositar?\r\n          </Typography>\r\n\r\n          <Typography \r\n            variant='body2' \r\n            component='div'>\r\n            Você tem {new Intl.NumberFormat('en-US', { \r\n              style: 'currency', \r\n              currency: 'USD'\r\n            }).format(data.account.money)} em mãos\r\n          </Typography>\r\n\r\n          <TextField\r\n            label=\"\"\r\n            value={amount}\r\n            onChange={handleChange}\r\n            autoFocus={true}\r\n            InputProps={{\r\n              inputComponent: NumberFormatCustom as any,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>  \r\n\r\n      <div style={styles.wrapper}>\r\n        <SubmitButtonWithSelector\r\n            label='Depositar ➝'\r\n            isDisabled={isDisabled}\r\n            isAsyncRequesting={data.isAsyncRequesting}\r\n            onClick={handleDeposit}\r\n            fullWidth={true} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DepositScreen;"]},"metadata":{},"sourceType":"module"}