{"ast":null,"code":"import _typeof from '@babel/runtime/helpers/esm/typeof';\n/** Use it instead of .includes method for IE support */\n\nfunction arrayIncludes(array, itemOrItems) {\n  if (Array.isArray(itemOrItems)) {\n    return itemOrItems.every(function (item) {\n      return array.indexOf(item) !== -1;\n    });\n  }\n\n  return array.indexOf(itemOrItems) !== -1;\n}\n\nvar onSpaceOrEnter = function onSpaceOrEnter(innerFn, onFocus) {\n  return function (e) {\n    if (e.key === 'Enter' || e.key === ' ') {\n      innerFn(); // prevent any side effects\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    if (onFocus) {\n      onFocus(e);\n    }\n  };\n};\n/** Quick untyped helper to improve function composition readability */\n\n\nvar pipe = function pipe() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  return fns.reduceRight(function (prevFn, nextFn) {\n    return function () {\n      return nextFn(prevFn.apply(void 0, arguments));\n    };\n  }, function (value) {\n    return value;\n  });\n};\n\nvar executeInTheNextEventLoopTick = function executeInTheNextEventLoopTick(fn) {\n  setTimeout(fn, 0);\n};\n\nfunction createDelegatedEventHandler(fn, onEvent) {\n  return function (e) {\n    fn(e);\n\n    if (onEvent) {\n      onEvent(e);\n    }\n  };\n}\n\nfunction mergeRefs(refs) {\n  return function (value) {\n    refs.forEach(function (ref) {\n      if (typeof ref === 'function') {\n        ref(value);\n      } else if (_typeof(ref) === 'object' && ref != null) {\n        // @ts-ignore .current is not a readonly, hold on ts\n        ref.current = value;\n      }\n    });\n  };\n}\n\nexport { arrayIncludes as a, createDelegatedEventHandler as c, executeInTheNextEventLoopTick as e, mergeRefs as m, onSpaceOrEnter as o, pipe as p };","map":{"version":3,"sources":["../src/_helpers/utils.ts"],"names":["Array","array","onSpaceOrEnter","e","innerFn","onFocus","pipe","fns","nextFn","prevFn","executeInTheNextEventLoopTick","setTimeout","fn","onEvent","refs","ref"],"mappings":";AAEA;;AACO,SAAA,aAAA,CAAA,KAAA,EAAA,WAAA,EAA2E;MAC5EA,KAAK,CAALA,OAAAA,CAAJ,WAAIA,C,EAA4B;WACvB,WAAW,CAAX,KAAA,CAAkB,UAAA,IAAA,EAAI;aAAIC,KAAK,CAALA,OAAAA,CAAAA,IAAAA,MAAwB,CAA5B,C;AAA7B,KAAO,C;;;SAGFA,KAAK,CAALA,OAAAA,CAAAA,WAAAA,MAA+B,CAAtC,C;;;AAGF,IAAaC,cAAc,GAAG,SAAjBA,cAAiB,CAAA,OAAA,EAAA,OAAA,EAAA;SAGzB,UAAA,CAAA,EAA4B;QAC3BC,CAAC,CAADA,GAAAA,KAAAA,OAAAA,IAAqBA,CAAC,CAADA,GAAAA,KAAzB,G,EAAwC;AACtCC,MAAAA,OADsC,GAAA,CAAA;;AAItCD,MAAAA,CAAC,CAADA,cAAAA;AACAA,MAAAA,CAAC,CAADA,eAAAA;;;QAGF,O,EAAa;AACXE,MAAAA,OAAO,CAAPA,CAAO,CAAPA;;AAb0B,G;AAAvB,CAAP;;;;AAkBA,IAAaC,IAAI,GAAG,SAAPA,IAAO,GAAA;oCAAIC,GAAJ,GAAA,IAAA,KAAA,CAAA,IAAA,C,EAAA,IAAA,GAAA,C,EAAA,IAAA,GAAA,I,EAAA,IAAA,E,EAAA;AAAIA,IAAAA,GAAJ,CAAA,IAAA,CAAIA,GAAJ,SAAA,CAAA,IAAA,CAAIA;;;SACtB,GAAG,CAAH,WAAA,CACE,UAAA,MAAA,EAAA,MAAA,EAAA;WAAoB,YAAA;aAAaC,MAAM,CAACC,MAAM,CAANA,KAAAA,CAAAA,KAAAA,CAAAA,EAApB,SAAoBA,CAAD,C;AAAvC,K;AADF,GAAA,EAEE,UAAA,KAAA,EAAK;WAAA,K;AAHW,GAClB,C;AADK,CAAP;;AAMA,IAAaC,6BAA6B,GAAG,SAAhCA,6BAAgC,CAAA,EAAA,EAAoB;AAC/DC,EAAAA,UAAU,CAAA,EAAA,EAAVA,CAAU,CAAVA;AADK,CAAP;;AAIO,SAAA,2BAAA,CAAA,EAAA,EAAA,OAAA,EAGL;SACO,UAAA,CAAA,EAAe;AACpBC,IAAAA,EAAE,CAAFA,CAAE,CAAFA;;QAEA,O,EAAa;AACXC,MAAAA,OAAO,CAAPA,CAAO,CAAPA;;AAJJ,G;;;AASK,SAAA,SAAA,CAAA,IAAA,EAAiE;SAC/D,UAAA,KAAA,EAAc;AACnBC,IAAAA,IAAI,CAAJA,OAAAA,CAAa,UAAA,GAAA,EAAO;UACd,OAAA,GAAA,KAAJ,U,EAA+B;AAC7BC,QAAAA,GAAG,CAAHA,KAAG,CAAHA;AADF,O,MAEO,IAAI,OAAA,CAAA,GAAA,CAAA,KAAA,QAAA,IAA2BA,GAAG,IAAlC,IAAA,EAA4C;;AAEjDA,QAAAA,GAAG,CAAHA,OAAAA,GAAAA,KAAAA;;AALJD,KAAAA;AADF,G","sourcesContent":["import * as React from 'react';\n\n/** Use it instead of .includes method for IE support */\nexport function arrayIncludes<T>(array: T[] | readonly T[], itemOrItems: T | T[]) {\n  if (Array.isArray(itemOrItems)) {\n    return itemOrItems.every(item => array.indexOf(item) !== -1);\n  }\n\n  return array.indexOf(itemOrItems) !== -1;\n}\n\nexport const onSpaceOrEnter = (\n  innerFn: () => void,\n  onFocus?: (e: React.KeyboardEvent<any>) => void\n) => (e: React.KeyboardEvent) => {\n  if (e.key === 'Enter' || e.key === ' ') {\n    innerFn();\n\n    // prevent any side effects\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  if (onFocus) {\n    onFocus(e);\n  }\n};\n\n/** Quick untyped helper to improve function composition readability */\nexport const pipe = (...fns: ((...args: any[]) => any)[]) =>\n  fns.reduceRight(\n    (prevFn, nextFn) => (...args) => nextFn(prevFn(...args)),\n    value => value\n  );\n\nexport const executeInTheNextEventLoopTick = (fn: () => void) => {\n  setTimeout(fn, 0);\n};\n\nexport function createDelegatedEventHandler<TEvent>(\n  fn: (e: TEvent) => void,\n  onEvent?: (e: TEvent) => void\n) {\n  return (e: TEvent) => {\n    fn(e);\n\n    if (onEvent) {\n      onEvent(e);\n    }\n  };\n}\n\nexport function mergeRefs<T>(refs: (React.Ref<T | null> | undefined)[]) {\n  return (value: T) => {\n    refs.forEach(ref => {\n      if (typeof ref === 'function') {\n        ref(value);\n      } else if (typeof ref === 'object' && ref != null) {\n        // @ts-ignore .current is not a readonly, hold on ts\n        ref.current = value;\n      }\n    });\n  };\n}\n\nexport const doNothing = () => {};\n"]},"metadata":{},"sourceType":"module"}