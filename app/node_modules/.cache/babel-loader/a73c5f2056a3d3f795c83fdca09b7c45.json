{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n/* eslint-disable no-restricted-globals */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport warning from 'warning';\nimport clsx from 'clsx';\nimport EventListener from 'react-event-listener';\nimport debounce from 'debounce'; // < 1kb payload overhead when lodash/debounce is > 3kb.\n\nimport { getNormalizedScrollLeft, detectScrollType } from 'normalize-scroll-left';\nimport animate from '../internal/animate';\nimport ScrollbarSize from './ScrollbarSize';\nimport withStyles from '../styles/withStyles';\nimport TabIndicator from './TabIndicator';\nimport TabScrollButton from './TabScrollButton';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport withForwardedRef from '../utils/withForwardedRef';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      overflow: 'hidden',\n      minHeight: 48,\n      WebkitOverflowScrolling: 'touch' // Add iOS momentum scrolling.\n\n    },\n\n    /* Styles applied to the flex container element. */\n    flexContainer: {\n      display: 'flex'\n    },\n\n    /* Styles applied to the flex container element if `centered={true}` & `!variant=\"scrollable\"`. */\n    centered: {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the tablist element. */\n    scroller: {\n      position: 'relative',\n      display: 'inline-block',\n      flex: '1 1 auto',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the tablist element if `!variant=\"scrollable\"`\b\b\b. */\n    fixed: {\n      overflowX: 'hidden',\n      width: '100%'\n    },\n\n    /* Styles applied to the tablist element if `variant=\"scrollable\"`. */\n    scrollable: {\n      overflowX: 'scroll'\n    },\n\n    /* Styles applied to the `ScrollButtonComponent` component. */\n    scrollButtons: {},\n\n    /* Styles applied to the `ScrollButtonComponent` component if `scrollButtons=\"auto\"`. */\n    scrollButtonsAuto: _defineProperty({}, theme.breakpoints.down('xs'), {\n      display: 'none'\n    }),\n\n    /* Styles applied to the `TabIndicator` component. */\n    indicator: {}\n  };\n};\n\nvar Tabs = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tabs, _React$Component);\n\n  function Tabs() {\n    var _this;\n\n    _classCallCheck(this, Tabs);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tabs).call(this));\n    _this.state = {\n      indicatorStyle: {},\n      scrollerStyle: {\n        overflow: 'hidden',\n        marginBottom: null\n      },\n      showLeftScroll: false,\n      showRightScroll: false,\n      mounted: false\n    };\n\n    _this.getConditionalElements = function () {\n      var _this$props = _this.props,\n          classes = _this$props.classes,\n          deprecatedScrollable = _this$props.scrollable,\n          ScrollButtonComponent = _this$props.ScrollButtonComponent,\n          scrollButtons = _this$props.scrollButtons,\n          theme = _this$props.theme,\n          variant = _this$props.variant;\n      var conditionalElements = {};\n      var scrollable = variant === 'scrollable' || deprecatedScrollable;\n      conditionalElements.scrollbarSizeListener = scrollable ? React.createElement(ScrollbarSize, {\n        onChange: _this.handleScrollbarSizeChange\n      }) : null;\n      var showScrollButtons = scrollable && (scrollButtons === 'auto' || scrollButtons === 'on');\n      conditionalElements.scrollButtonLeft = showScrollButtons ? React.createElement(ScrollButtonComponent, {\n        direction: theme && theme.direction === 'rtl' ? 'right' : 'left',\n        onClick: _this.handleLeftScrollClick,\n        visible: _this.state.showLeftScroll,\n        className: clsx(classes.scrollButtons, _defineProperty({}, classes.scrollButtonsAuto, scrollButtons === 'auto'))\n      }) : null;\n      conditionalElements.scrollButtonRight = showScrollButtons ? React.createElement(ScrollButtonComponent, {\n        direction: theme && theme.direction === 'rtl' ? 'left' : 'right',\n        onClick: _this.handleRightScrollClick,\n        visible: _this.state.showRightScroll,\n        className: clsx(classes.scrollButtons, _defineProperty({}, classes.scrollButtonsAuto, scrollButtons === 'auto'))\n      }) : null;\n      return conditionalElements;\n    };\n\n    _this.getTabsMeta = function (value, direction) {\n      var tabsMeta;\n\n      if (_this.tabsRef) {\n        var rect = _this.tabsRef.getBoundingClientRect(); // create a new object with ClientRect class props + scrollLeft\n\n\n        tabsMeta = {\n          clientWidth: _this.tabsRef.clientWidth,\n          scrollLeft: _this.tabsRef.scrollLeft,\n          scrollLeftNormalized: getNormalizedScrollLeft(_this.tabsRef, direction),\n          scrollWidth: _this.tabsRef.scrollWidth,\n          left: rect.left,\n          right: rect.right\n        };\n      }\n\n      var tabMeta;\n\n      if (_this.tabsRef && value !== false) {\n        var children = _this.tabsRef.children[0].children;\n\n        if (children.length > 0) {\n          var tab = children[_this.valueToIndex.get(value)];\n\n          process.env.NODE_ENV !== \"production\" ? warning(tab, [\"Material-UI: the value provided `\".concat(value, \"` to the Tabs component is invalid.\"), 'None of the Tabs children have this value.', _this.valueToIndex.keys ? \"You can provide one of the following values: \".concat(Array.from(_this.valueToIndex.keys()).join(', '), \".\") : null].join('\\n')) : void 0;\n          tabMeta = tab ? tab.getBoundingClientRect() : null;\n        }\n      }\n\n      return {\n        tabsMeta: tabsMeta,\n        tabMeta: tabMeta\n      };\n    };\n\n    _this.handleLeftScrollClick = function () {\n      _this.moveTabsScroll(-_this.tabsRef.clientWidth);\n    };\n\n    _this.handleRightScrollClick = function () {\n      _this.moveTabsScroll(_this.tabsRef.clientWidth);\n    };\n\n    _this.handleScrollbarSizeChange = function (scrollbarHeight) {\n      _this.setState({\n        scrollerStyle: {\n          overflow: null,\n          marginBottom: -scrollbarHeight\n        }\n      });\n    };\n\n    _this.handleTabsRef = function (ref) {\n      _this.tabsRef = ref;\n    };\n\n    _this.moveTabsScroll = function (delta) {\n      var theme = _this.props.theme;\n      var multiplier = theme.direction === 'rtl' ? -1 : 1;\n      var nextScrollLeft = _this.tabsRef.scrollLeft + delta * multiplier; // Fix for Edge\n\n      var invert = theme.direction === 'rtl' && detectScrollType() === 'reverse' ? -1 : 1;\n\n      _this.scroll(invert * nextScrollLeft);\n    };\n\n    _this.scrollSelectedIntoView = function () {\n      var _this$props2 = _this.props,\n          theme = _this$props2.theme,\n          value = _this$props2.value;\n\n      var _this$getTabsMeta = _this.getTabsMeta(value, theme.direction),\n          tabsMeta = _this$getTabsMeta.tabsMeta,\n          tabMeta = _this$getTabsMeta.tabMeta;\n\n      if (!tabMeta || !tabsMeta) {\n        return;\n      }\n\n      if (tabMeta.left < tabsMeta.left) {\n        // left side of button is out of view\n        var nextScrollLeft = tabsMeta.scrollLeft + (tabMeta.left - tabsMeta.left);\n\n        _this.scroll(nextScrollLeft);\n      } else if (tabMeta.right > tabsMeta.right) {\n        // right side of button is out of view\n        var _nextScrollLeft = tabsMeta.scrollLeft + (tabMeta.right - tabsMeta.right);\n\n        _this.scroll(_nextScrollLeft);\n      }\n    };\n\n    _this.scroll = function (value) {\n      animate('scrollLeft', _this.tabsRef, value);\n    };\n\n    _this.updateScrollButtonState = function () {\n      var _this$props3 = _this.props,\n          deprecatedScrollable = _this$props3.scrollable,\n          scrollButtons = _this$props3.scrollButtons,\n          theme = _this$props3.theme,\n          variant = _this$props3.variant;\n      var scrollable = variant === 'scrollable' || deprecatedScrollable;\n\n      if (scrollable && scrollButtons !== 'off') {\n        var _this$tabsRef = _this.tabsRef,\n            scrollWidth = _this$tabsRef.scrollWidth,\n            clientWidth = _this$tabsRef.clientWidth;\n        var scrollLeft = getNormalizedScrollLeft(_this.tabsRef, theme.direction); // use 1 for the potential rounding error with browser zooms.\n\n        var showLeftScroll = theme.direction === 'rtl' ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n        var showRightScroll = theme.direction !== 'rtl' ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n\n        if (showLeftScroll !== _this.state.showLeftScroll || showRightScroll !== _this.state.showRightScroll) {\n          _this.setState({\n            showLeftScroll: showLeftScroll,\n            showRightScroll: showRightScroll\n          });\n        }\n      }\n    };\n\n    if (typeof window !== 'undefined') {\n      _this.handleResize = debounce(function () {\n        _this.updateIndicatorState(_this.props);\n\n        _this.updateScrollButtonState();\n      }, 166); // Corresponds to 10 frames at 60 Hz.\n\n      _this.handleTabsScroll = debounce(function () {\n        _this.updateScrollButtonState();\n      }, 166); // Corresponds to 10 frames at 60 Hz.\n    }\n\n    return _this;\n  }\n\n  _createClass(Tabs, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        mounted: true\n      });\n      this.updateIndicatorState(this.props);\n      this.updateScrollButtonState();\n\n      if (this.props.action) {\n        this.props.action({\n          updateIndicator: this.handleResize\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      // The index might have changed at the same time.\n      // We need to check again the right indicator position.\n      this.updateIndicatorState(this.props);\n      this.updateScrollButtonState();\n\n      if (this.state.indicatorStyle !== prevState.indicatorStyle) {\n        this.scrollSelectedIntoView();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.handleResize.clear();\n      this.handleTabsScroll.clear();\n    }\n  }, {\n    key: \"updateIndicatorState\",\n    value: function updateIndicatorState(props) {\n      var theme = props.theme,\n          value = props.value;\n\n      var _this$getTabsMeta2 = this.getTabsMeta(value, theme.direction),\n          tabsMeta = _this$getTabsMeta2.tabsMeta,\n          tabMeta = _this$getTabsMeta2.tabMeta;\n\n      var left = 0;\n\n      if (tabMeta && tabsMeta) {\n        var correction = theme.direction === 'rtl' ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;\n        left = Math.round(tabMeta.left - tabsMeta.left + correction);\n      }\n\n      var indicatorStyle = {\n        left: left,\n        // May be wrong until the font is loaded.\n        width: tabMeta ? Math.round(tabMeta.width) : 0\n      };\n\n      if ((indicatorStyle.left !== this.state.indicatorStyle.left || indicatorStyle.width !== this.state.indicatorStyle.width) && !isNaN(indicatorStyle.left) && !isNaN(indicatorStyle.width)) {\n        this.setState({\n          indicatorStyle: indicatorStyle\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _clsx4,\n          _this2 = this;\n\n      var _this$props4 = this.props,\n          action = _this$props4.action,\n          centered = _this$props4.centered,\n          childrenProp = _this$props4.children,\n          classes = _this$props4.classes,\n          classNameProp = _this$props4.className,\n          Component = _this$props4.component,\n          _this$props4$fullWidt = _this$props4.fullWidth,\n          fullWidth = _this$props4$fullWidt === void 0 ? false : _this$props4$fullWidt,\n          indicatorColor = _this$props4.indicatorColor,\n          innerRef = _this$props4.innerRef,\n          onChange = _this$props4.onChange,\n          _this$props4$scrollab = _this$props4.scrollable,\n          deprecatedScrollable = _this$props4$scrollab === void 0 ? false : _this$props4$scrollab,\n          ScrollButtonComponent = _this$props4.ScrollButtonComponent,\n          scrollButtons = _this$props4.scrollButtons,\n          _this$props4$TabIndic = _this$props4.TabIndicatorProps,\n          TabIndicatorProps = _this$props4$TabIndic === void 0 ? {} : _this$props4$TabIndic,\n          textColor = _this$props4.textColor,\n          theme = _this$props4.theme,\n          value = _this$props4.value,\n          variant = _this$props4.variant,\n          other = _objectWithoutProperties(_this$props4, [\"action\", \"centered\", \"children\", \"classes\", \"className\", \"component\", \"fullWidth\", \"indicatorColor\", \"innerRef\", \"onChange\", \"scrollable\", \"ScrollButtonComponent\", \"scrollButtons\", \"TabIndicatorProps\", \"textColor\", \"theme\", \"value\", \"variant\"]);\n\n      var scrollable = variant === 'scrollable' || deprecatedScrollable;\n      process.env.NODE_ENV !== \"production\" ? warning(!centered || !scrollable, 'Material-UI: you can not use the `centered={true}` and `variant=\"scrollable\"` properties ' + 'at the same time on a `Tabs` component.') : void 0;\n      var className = clsx(classes.root, classNameProp);\n      var flexContainerClassName = clsx(classes.flexContainer, _defineProperty({}, classes.centered, centered && !scrollable));\n      var scrollerClassName = clsx(classes.scroller, (_clsx4 = {}, _defineProperty(_clsx4, classes.fixed, !scrollable), _defineProperty(_clsx4, classes.scrollable, scrollable), _clsx4));\n      var indicator = React.createElement(TabIndicator, _extends({\n        className: classes.indicator,\n        color: indicatorColor\n      }, TabIndicatorProps, {\n        style: _extends({}, this.state.indicatorStyle, TabIndicatorProps.style)\n      }));\n      this.valueToIndex = new Map();\n      var childIndex = 0;\n      var children = React.Children.map(childrenProp, function (child) {\n        if (!React.isValidElement(child)) {\n          return null;\n        }\n\n        process.env.NODE_ENV !== \"production\" ? warning(child.type !== React.Fragment, [\"Material-UI: the Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n')) : void 0;\n        var childValue = child.props.value === undefined ? childIndex : child.props.value;\n\n        _this2.valueToIndex.set(childValue, childIndex);\n\n        var selected = childValue === value;\n        childIndex += 1;\n        return React.cloneElement(child, {\n          fullWidth: variant === 'fullWidth' || fullWidth,\n          indicator: selected && !_this2.state.mounted && indicator,\n          selected: selected,\n          onChange: onChange,\n          textColor: textColor,\n          value: childValue\n        });\n      });\n      var conditionalElements = this.getConditionalElements();\n      return React.createElement(Component, _extends({\n        className: className,\n        ref: innerRef\n      }, other), React.createElement(EventListener, {\n        target: \"window\",\n        onResize: this.handleResize\n      }), conditionalElements.scrollbarSizeListener, React.createElement(\"div\", {\n        className: classes.flexContainer\n      }, conditionalElements.scrollButtonLeft, React.createElement(\"div\", {\n        className: scrollerClassName,\n        style: this.state.scrollerStyle,\n        ref: this.handleTabsRef,\n        role: \"tablist\",\n        onScroll: this.handleTabsScroll\n      }, React.createElement(\"div\", {\n        className: flexContainerClassName\n      }, children), this.state.mounted && indicator), conditionalElements.scrollButtonRight));\n    }\n  }]);\n\n  return Tabs;\n}(React.Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes = {\n  /**\n   * Callback fired when the component mounts.\n   * This is useful when you want to trigger an action programmatically.\n   * It currently only supports `updateIndicator()` action.\n   *\n   * @param {object} actions This object contains all possible actions\n   * that can be triggered programmatically.\n   */\n  action: PropTypes.func,\n\n  /**\n   * If `true`, the tabs will be centered.\n   * This property is intended for large views.\n   */\n  centered: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the tabs will grow to use all the available space.\n   * This property is intended for small views, like on mobile.\n   */\n  fullWidth: deprecatedPropType(PropTypes.bool, 'Instead, use the `variant=\"fullWidth\"` property.'),\n\n  /**\n   * Determines the color of the indicator.\n   */\n  indicatorColor: PropTypes.oneOf(['secondary', 'primary']),\n\n  /**\n   * @ignore\n   * from `withForwardRef`\n   */\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback\n   * @param {number} value We default to the index of the child\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, it will invoke scrolling properties and allow for horizontally\n   * scrolling (or swiping) of the tab bar.\n   */\n  scrollable: deprecatedPropType(PropTypes.bool, 'Instead, use the `variant=\"scrollable\"` property.'),\n\n  /**\n   * The component used to render the scroll buttons.\n   */\n  ScrollButtonComponent: PropTypes.elementType,\n\n  /**\n   * Determine behavior of scroll buttons when tabs are set to scroll\n   * `auto` will only present them on medium and larger viewports\n   * `on` will always present them\n   * `off` will never present them\n   */\n  scrollButtons: PropTypes.oneOf(['auto', 'on', 'off']),\n\n  /**\n   * Properties applied to the `TabIndicator` element.\n   */\n  TabIndicatorProps: PropTypes.object,\n\n  /**\n   * Determines the color of the `Tab`.\n   */\n  textColor: PropTypes.oneOf(['secondary', 'primary', 'inherit']),\n\n  /**\n   * @ignore\n   */\n  theme: PropTypes.object.isRequired,\n\n  /**\n   * The value of the currently selected `Tab`.\n   * If you don't want any selected `Tab`, you can set this property to `false`.\n   */\n  value: PropTypes.any,\n\n  /**\n   *  Determines additional display behavior of the tabs:\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\n   *  scrolling (or swiping) of the tab bar.\n   *  -`fullWidth` will make the tabs grow to use all the available space,\n   *  which should be used for small views, like on mobile.\n   *  - `standard` will render the default state.\n   */\n  variant: PropTypes.oneOf(['standard', 'scrollable', 'fullWidth'])\n} : void 0;\nTabs.defaultProps = {\n  centered: false,\n  component: 'div',\n  indicatorColor: 'secondary',\n  ScrollButtonComponent: TabScrollButton,\n  scrollButtons: 'auto',\n  textColor: 'inherit',\n  variant: 'standard'\n};\nexport default withStyles(styles, {\n  name: 'MuiTabs',\n  withTheme: true\n})(withForwardedRef(Tabs));","map":{"version":3,"sources":["C:/Users/robson/Desktop/cidadealta/cidadealta-app/node_modules/@material-ui/core/esm/Tabs/Tabs.js"],"names":["_extends","_objectWithoutProperties","_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_inherits","_defineProperty","React","PropTypes","warning","clsx","EventListener","debounce","getNormalizedScrollLeft","detectScrollType","animate","ScrollbarSize","withStyles","TabIndicator","TabScrollButton","deprecatedPropType","withForwardedRef","styles","theme","root","overflow","minHeight","WebkitOverflowScrolling","flexContainer","display","centered","justifyContent","scroller","position","flex","whiteSpace","fixed","overflowX","width","scrollable","scrollButtons","scrollButtonsAuto","breakpoints","down","indicator","Tabs","_React$Component","_this","call","state","indicatorStyle","scrollerStyle","marginBottom","showLeftScroll","showRightScroll","mounted","getConditionalElements","_this$props","props","classes","deprecatedScrollable","ScrollButtonComponent","variant","conditionalElements","scrollbarSizeListener","createElement","onChange","handleScrollbarSizeChange","showScrollButtons","scrollButtonLeft","direction","onClick","handleLeftScrollClick","visible","className","scrollButtonRight","handleRightScrollClick","getTabsMeta","value","tabsMeta","tabsRef","rect","getBoundingClientRect","clientWidth","scrollLeft","scrollLeftNormalized","scrollWidth","left","right","tabMeta","children","length","tab","valueToIndex","get","process","env","NODE_ENV","concat","keys","Array","from","join","moveTabsScroll","scrollbarHeight","setState","handleTabsRef","ref","delta","multiplier","nextScrollLeft","invert","scroll","scrollSelectedIntoView","_this$props2","_this$getTabsMeta","_nextScrollLeft","updateScrollButtonState","_this$props3","_this$tabsRef","window","handleResize","updateIndicatorState","handleTabsScroll","key","componentDidMount","action","updateIndicator","componentDidUpdate","prevProps","prevState","componentWillUnmount","clear","_this$getTabsMeta2","correction","Math","round","isNaN","render","_clsx4","_this2","_this$props4","childrenProp","classNameProp","Component","component","_this$props4$fullWidt","fullWidth","indicatorColor","innerRef","_this$props4$scrollab","_this$props4$TabIndic","TabIndicatorProps","textColor","other","flexContainerClassName","scrollerClassName","color","style","Map","childIndex","Children","map","child","isValidElement","type","Fragment","childValue","undefined","set","selected","cloneElement","target","onResize","role","onScroll","propTypes","func","bool","node","object","isRequired","string","elementType","oneOf","oneOfType","any","defaultProps","name","withTheme"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/* eslint-disable no-restricted-globals */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport warning from 'warning';\nimport clsx from 'clsx';\nimport EventListener from 'react-event-listener';\nimport debounce from 'debounce'; // < 1kb payload overhead when lodash/debounce is > 3kb.\n\nimport { getNormalizedScrollLeft, detectScrollType } from 'normalize-scroll-left';\nimport animate from '../internal/animate';\nimport ScrollbarSize from './ScrollbarSize';\nimport withStyles from '../styles/withStyles';\nimport TabIndicator from './TabIndicator';\nimport TabScrollButton from './TabScrollButton';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport withForwardedRef from '../utils/withForwardedRef';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      overflow: 'hidden',\n      minHeight: 48,\n      WebkitOverflowScrolling: 'touch' // Add iOS momentum scrolling.\n\n    },\n\n    /* Styles applied to the flex container element. */\n    flexContainer: {\n      display: 'flex'\n    },\n\n    /* Styles applied to the flex container element if `centered={true}` & `!variant=\"scrollable\"`. */\n    centered: {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the tablist element. */\n    scroller: {\n      position: 'relative',\n      display: 'inline-block',\n      flex: '1 1 auto',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the tablist element if `!variant=\"scrollable\"`\b\b\b. */\n    fixed: {\n      overflowX: 'hidden',\n      width: '100%'\n    },\n\n    /* Styles applied to the tablist element if `variant=\"scrollable\"`. */\n    scrollable: {\n      overflowX: 'scroll'\n    },\n\n    /* Styles applied to the `ScrollButtonComponent` component. */\n    scrollButtons: {},\n\n    /* Styles applied to the `ScrollButtonComponent` component if `scrollButtons=\"auto\"`. */\n    scrollButtonsAuto: _defineProperty({}, theme.breakpoints.down('xs'), {\n      display: 'none'\n    }),\n\n    /* Styles applied to the `TabIndicator` component. */\n    indicator: {}\n  };\n};\n\nvar Tabs =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tabs, _React$Component);\n\n  function Tabs() {\n    var _this;\n\n    _classCallCheck(this, Tabs);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tabs).call(this));\n    _this.state = {\n      indicatorStyle: {},\n      scrollerStyle: {\n        overflow: 'hidden',\n        marginBottom: null\n      },\n      showLeftScroll: false,\n      showRightScroll: false,\n      mounted: false\n    };\n\n    _this.getConditionalElements = function () {\n      var _this$props = _this.props,\n          classes = _this$props.classes,\n          deprecatedScrollable = _this$props.scrollable,\n          ScrollButtonComponent = _this$props.ScrollButtonComponent,\n          scrollButtons = _this$props.scrollButtons,\n          theme = _this$props.theme,\n          variant = _this$props.variant;\n      var conditionalElements = {};\n      var scrollable = variant === 'scrollable' || deprecatedScrollable;\n      conditionalElements.scrollbarSizeListener = scrollable ? React.createElement(ScrollbarSize, {\n        onChange: _this.handleScrollbarSizeChange\n      }) : null;\n      var showScrollButtons = scrollable && (scrollButtons === 'auto' || scrollButtons === 'on');\n      conditionalElements.scrollButtonLeft = showScrollButtons ? React.createElement(ScrollButtonComponent, {\n        direction: theme && theme.direction === 'rtl' ? 'right' : 'left',\n        onClick: _this.handleLeftScrollClick,\n        visible: _this.state.showLeftScroll,\n        className: clsx(classes.scrollButtons, _defineProperty({}, classes.scrollButtonsAuto, scrollButtons === 'auto'))\n      }) : null;\n      conditionalElements.scrollButtonRight = showScrollButtons ? React.createElement(ScrollButtonComponent, {\n        direction: theme && theme.direction === 'rtl' ? 'left' : 'right',\n        onClick: _this.handleRightScrollClick,\n        visible: _this.state.showRightScroll,\n        className: clsx(classes.scrollButtons, _defineProperty({}, classes.scrollButtonsAuto, scrollButtons === 'auto'))\n      }) : null;\n      return conditionalElements;\n    };\n\n    _this.getTabsMeta = function (value, direction) {\n      var tabsMeta;\n\n      if (_this.tabsRef) {\n        var rect = _this.tabsRef.getBoundingClientRect(); // create a new object with ClientRect class props + scrollLeft\n\n\n        tabsMeta = {\n          clientWidth: _this.tabsRef.clientWidth,\n          scrollLeft: _this.tabsRef.scrollLeft,\n          scrollLeftNormalized: getNormalizedScrollLeft(_this.tabsRef, direction),\n          scrollWidth: _this.tabsRef.scrollWidth,\n          left: rect.left,\n          right: rect.right\n        };\n      }\n\n      var tabMeta;\n\n      if (_this.tabsRef && value !== false) {\n        var children = _this.tabsRef.children[0].children;\n\n        if (children.length > 0) {\n          var tab = children[_this.valueToIndex.get(value)];\n\n          process.env.NODE_ENV !== \"production\" ? warning(tab, [\"Material-UI: the value provided `\".concat(value, \"` to the Tabs component is invalid.\"), 'None of the Tabs children have this value.', _this.valueToIndex.keys ? \"You can provide one of the following values: \".concat(Array.from(_this.valueToIndex.keys()).join(', '), \".\") : null].join('\\n')) : void 0;\n          tabMeta = tab ? tab.getBoundingClientRect() : null;\n        }\n      }\n\n      return {\n        tabsMeta: tabsMeta,\n        tabMeta: tabMeta\n      };\n    };\n\n    _this.handleLeftScrollClick = function () {\n      _this.moveTabsScroll(-_this.tabsRef.clientWidth);\n    };\n\n    _this.handleRightScrollClick = function () {\n      _this.moveTabsScroll(_this.tabsRef.clientWidth);\n    };\n\n    _this.handleScrollbarSizeChange = function (scrollbarHeight) {\n      _this.setState({\n        scrollerStyle: {\n          overflow: null,\n          marginBottom: -scrollbarHeight\n        }\n      });\n    };\n\n    _this.handleTabsRef = function (ref) {\n      _this.tabsRef = ref;\n    };\n\n    _this.moveTabsScroll = function (delta) {\n      var theme = _this.props.theme;\n      var multiplier = theme.direction === 'rtl' ? -1 : 1;\n      var nextScrollLeft = _this.tabsRef.scrollLeft + delta * multiplier; // Fix for Edge\n\n      var invert = theme.direction === 'rtl' && detectScrollType() === 'reverse' ? -1 : 1;\n\n      _this.scroll(invert * nextScrollLeft);\n    };\n\n    _this.scrollSelectedIntoView = function () {\n      var _this$props2 = _this.props,\n          theme = _this$props2.theme,\n          value = _this$props2.value;\n\n      var _this$getTabsMeta = _this.getTabsMeta(value, theme.direction),\n          tabsMeta = _this$getTabsMeta.tabsMeta,\n          tabMeta = _this$getTabsMeta.tabMeta;\n\n      if (!tabMeta || !tabsMeta) {\n        return;\n      }\n\n      if (tabMeta.left < tabsMeta.left) {\n        // left side of button is out of view\n        var nextScrollLeft = tabsMeta.scrollLeft + (tabMeta.left - tabsMeta.left);\n\n        _this.scroll(nextScrollLeft);\n      } else if (tabMeta.right > tabsMeta.right) {\n        // right side of button is out of view\n        var _nextScrollLeft = tabsMeta.scrollLeft + (tabMeta.right - tabsMeta.right);\n\n        _this.scroll(_nextScrollLeft);\n      }\n    };\n\n    _this.scroll = function (value) {\n      animate('scrollLeft', _this.tabsRef, value);\n    };\n\n    _this.updateScrollButtonState = function () {\n      var _this$props3 = _this.props,\n          deprecatedScrollable = _this$props3.scrollable,\n          scrollButtons = _this$props3.scrollButtons,\n          theme = _this$props3.theme,\n          variant = _this$props3.variant;\n      var scrollable = variant === 'scrollable' || deprecatedScrollable;\n\n      if (scrollable && scrollButtons !== 'off') {\n        var _this$tabsRef = _this.tabsRef,\n            scrollWidth = _this$tabsRef.scrollWidth,\n            clientWidth = _this$tabsRef.clientWidth;\n        var scrollLeft = getNormalizedScrollLeft(_this.tabsRef, theme.direction); // use 1 for the potential rounding error with browser zooms.\n\n        var showLeftScroll = theme.direction === 'rtl' ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n        var showRightScroll = theme.direction !== 'rtl' ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n\n        if (showLeftScroll !== _this.state.showLeftScroll || showRightScroll !== _this.state.showRightScroll) {\n          _this.setState({\n            showLeftScroll: showLeftScroll,\n            showRightScroll: showRightScroll\n          });\n        }\n      }\n    };\n\n    if (typeof window !== 'undefined') {\n      _this.handleResize = debounce(function () {\n        _this.updateIndicatorState(_this.props);\n\n        _this.updateScrollButtonState();\n      }, 166); // Corresponds to 10 frames at 60 Hz.\n\n      _this.handleTabsScroll = debounce(function () {\n        _this.updateScrollButtonState();\n      }, 166); // Corresponds to 10 frames at 60 Hz.\n    }\n\n    return _this;\n  }\n\n  _createClass(Tabs, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        mounted: true\n      });\n      this.updateIndicatorState(this.props);\n      this.updateScrollButtonState();\n\n      if (this.props.action) {\n        this.props.action({\n          updateIndicator: this.handleResize\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      // The index might have changed at the same time.\n      // We need to check again the right indicator position.\n      this.updateIndicatorState(this.props);\n      this.updateScrollButtonState();\n\n      if (this.state.indicatorStyle !== prevState.indicatorStyle) {\n        this.scrollSelectedIntoView();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.handleResize.clear();\n      this.handleTabsScroll.clear();\n    }\n  }, {\n    key: \"updateIndicatorState\",\n    value: function updateIndicatorState(props) {\n      var theme = props.theme,\n          value = props.value;\n\n      var _this$getTabsMeta2 = this.getTabsMeta(value, theme.direction),\n          tabsMeta = _this$getTabsMeta2.tabsMeta,\n          tabMeta = _this$getTabsMeta2.tabMeta;\n\n      var left = 0;\n\n      if (tabMeta && tabsMeta) {\n        var correction = theme.direction === 'rtl' ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;\n        left = Math.round(tabMeta.left - tabsMeta.left + correction);\n      }\n\n      var indicatorStyle = {\n        left: left,\n        // May be wrong until the font is loaded.\n        width: tabMeta ? Math.round(tabMeta.width) : 0\n      };\n\n      if ((indicatorStyle.left !== this.state.indicatorStyle.left || indicatorStyle.width !== this.state.indicatorStyle.width) && !isNaN(indicatorStyle.left) && !isNaN(indicatorStyle.width)) {\n        this.setState({\n          indicatorStyle: indicatorStyle\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _clsx4,\n          _this2 = this;\n\n      var _this$props4 = this.props,\n          action = _this$props4.action,\n          centered = _this$props4.centered,\n          childrenProp = _this$props4.children,\n          classes = _this$props4.classes,\n          classNameProp = _this$props4.className,\n          Component = _this$props4.component,\n          _this$props4$fullWidt = _this$props4.fullWidth,\n          fullWidth = _this$props4$fullWidt === void 0 ? false : _this$props4$fullWidt,\n          indicatorColor = _this$props4.indicatorColor,\n          innerRef = _this$props4.innerRef,\n          onChange = _this$props4.onChange,\n          _this$props4$scrollab = _this$props4.scrollable,\n          deprecatedScrollable = _this$props4$scrollab === void 0 ? false : _this$props4$scrollab,\n          ScrollButtonComponent = _this$props4.ScrollButtonComponent,\n          scrollButtons = _this$props4.scrollButtons,\n          _this$props4$TabIndic = _this$props4.TabIndicatorProps,\n          TabIndicatorProps = _this$props4$TabIndic === void 0 ? {} : _this$props4$TabIndic,\n          textColor = _this$props4.textColor,\n          theme = _this$props4.theme,\n          value = _this$props4.value,\n          variant = _this$props4.variant,\n          other = _objectWithoutProperties(_this$props4, [\"action\", \"centered\", \"children\", \"classes\", \"className\", \"component\", \"fullWidth\", \"indicatorColor\", \"innerRef\", \"onChange\", \"scrollable\", \"ScrollButtonComponent\", \"scrollButtons\", \"TabIndicatorProps\", \"textColor\", \"theme\", \"value\", \"variant\"]);\n\n      var scrollable = variant === 'scrollable' || deprecatedScrollable;\n      process.env.NODE_ENV !== \"production\" ? warning(!centered || !scrollable, 'Material-UI: you can not use the `centered={true}` and `variant=\"scrollable\"` properties ' + 'at the same time on a `Tabs` component.') : void 0;\n      var className = clsx(classes.root, classNameProp);\n      var flexContainerClassName = clsx(classes.flexContainer, _defineProperty({}, classes.centered, centered && !scrollable));\n      var scrollerClassName = clsx(classes.scroller, (_clsx4 = {}, _defineProperty(_clsx4, classes.fixed, !scrollable), _defineProperty(_clsx4, classes.scrollable, scrollable), _clsx4));\n      var indicator = React.createElement(TabIndicator, _extends({\n        className: classes.indicator,\n        color: indicatorColor\n      }, TabIndicatorProps, {\n        style: _extends({}, this.state.indicatorStyle, TabIndicatorProps.style)\n      }));\n      this.valueToIndex = new Map();\n      var childIndex = 0;\n      var children = React.Children.map(childrenProp, function (child) {\n        if (!React.isValidElement(child)) {\n          return null;\n        }\n\n        process.env.NODE_ENV !== \"production\" ? warning(child.type !== React.Fragment, [\"Material-UI: the Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n')) : void 0;\n        var childValue = child.props.value === undefined ? childIndex : child.props.value;\n\n        _this2.valueToIndex.set(childValue, childIndex);\n\n        var selected = childValue === value;\n        childIndex += 1;\n        return React.cloneElement(child, {\n          fullWidth: variant === 'fullWidth' || fullWidth,\n          indicator: selected && !_this2.state.mounted && indicator,\n          selected: selected,\n          onChange: onChange,\n          textColor: textColor,\n          value: childValue\n        });\n      });\n      var conditionalElements = this.getConditionalElements();\n      return React.createElement(Component, _extends({\n        className: className,\n        ref: innerRef\n      }, other), React.createElement(EventListener, {\n        target: \"window\",\n        onResize: this.handleResize\n      }), conditionalElements.scrollbarSizeListener, React.createElement(\"div\", {\n        className: classes.flexContainer\n      }, conditionalElements.scrollButtonLeft, React.createElement(\"div\", {\n        className: scrollerClassName,\n        style: this.state.scrollerStyle,\n        ref: this.handleTabsRef,\n        role: \"tablist\",\n        onScroll: this.handleTabsScroll\n      }, React.createElement(\"div\", {\n        className: flexContainerClassName\n      }, children), this.state.mounted && indicator), conditionalElements.scrollButtonRight));\n    }\n  }]);\n\n  return Tabs;\n}(React.Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes = {\n  /**\n   * Callback fired when the component mounts.\n   * This is useful when you want to trigger an action programmatically.\n   * It currently only supports `updateIndicator()` action.\n   *\n   * @param {object} actions This object contains all possible actions\n   * that can be triggered programmatically.\n   */\n  action: PropTypes.func,\n\n  /**\n   * If `true`, the tabs will be centered.\n   * This property is intended for large views.\n   */\n  centered: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the tabs will grow to use all the available space.\n   * This property is intended for small views, like on mobile.\n   */\n  fullWidth: deprecatedPropType(PropTypes.bool, 'Instead, use the `variant=\"fullWidth\"` property.'),\n\n  /**\n   * Determines the color of the indicator.\n   */\n  indicatorColor: PropTypes.oneOf(['secondary', 'primary']),\n\n  /**\n   * @ignore\n   * from `withForwardRef`\n   */\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback\n   * @param {number} value We default to the index of the child\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, it will invoke scrolling properties and allow for horizontally\n   * scrolling (or swiping) of the tab bar.\n   */\n  scrollable: deprecatedPropType(PropTypes.bool, 'Instead, use the `variant=\"scrollable\"` property.'),\n\n  /**\n   * The component used to render the scroll buttons.\n   */\n  ScrollButtonComponent: PropTypes.elementType,\n\n  /**\n   * Determine behavior of scroll buttons when tabs are set to scroll\n   * `auto` will only present them on medium and larger viewports\n   * `on` will always present them\n   * `off` will never present them\n   */\n  scrollButtons: PropTypes.oneOf(['auto', 'on', 'off']),\n\n  /**\n   * Properties applied to the `TabIndicator` element.\n   */\n  TabIndicatorProps: PropTypes.object,\n\n  /**\n   * Determines the color of the `Tab`.\n   */\n  textColor: PropTypes.oneOf(['secondary', 'primary', 'inherit']),\n\n  /**\n   * @ignore\n   */\n  theme: PropTypes.object.isRequired,\n\n  /**\n   * The value of the currently selected `Tab`.\n   * If you don't want any selected `Tab`, you can set this property to `false`.\n   */\n  value: PropTypes.any,\n\n  /**\n   *  Determines additional display behavior of the tabs:\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\n   *  scrolling (or swiping) of the tab bar.\n   *  -`fullWidth` will make the tabs grow to use all the available space,\n   *  which should be used for small views, like on mobile.\n   *  - `standard` will render the default state.\n   */\n  variant: PropTypes.oneOf(['standard', 'scrollable', 'fullWidth'])\n} : void 0;\nTabs.defaultProps = {\n  centered: false,\n  component: 'div',\n  indicatorColor: 'secondary',\n  ScrollButtonComponent: TabScrollButton,\n  scrollButtons: 'auto',\n  textColor: 'inherit',\n  variant: 'standard'\n};\nexport default withStyles(styles, {\n  name: 'MuiTabs',\n  withTheme: true\n})(withForwardedRef(Tabs));"]},"metadata":{},"sourceType":"module"}