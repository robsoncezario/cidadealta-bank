{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport ownerWindow from '../utils/ownerWindow';\nimport withForwardedRef from '../utils/withForwardedRef';\nimport { setRef } from '../utils/reactHelpers';\nimport withStyles from '../styles/withStyles';\nimport NoSsr from '../NoSsr';\nimport { listenForFocusKeys, detectFocusVisible } from './focusVisible';\nimport TouchRipple from './TouchRipple';\nimport createRippleHandler from './createRippleHandler';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'relative',\n    // Remove grey highlight\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 'none',\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    textDecoration: 'none',\n    // So we take precedent over the style of a native <a /> element.\n    color: 'inherit',\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$disabled': {\n      pointerEvents: 'none',\n      // Disable link interactions\n      cursor: 'default'\n    }\n  },\n\n  /* Styles applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Styles applied to the root element if keyboard focused. */\n  focusVisible: {}\n};\n/**\n * `ButtonBase` contains as few styles as possible.\n * It aims to be a simple building block for creating a button.\n * It contains a load of style reset and some focus/ripple logic.\n */\n\nvar ButtonBase = /*#__PURE__*/function (_React$Component) {\n  _inherits(ButtonBase, _React$Component);\n\n  function ButtonBase() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ButtonBase);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ButtonBase)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n    _this.buttonRef = React.createRef();\n    _this.keyDown = false;\n    _this.focusVisibleCheckTime = 50;\n    _this.focusVisibleMaxCheckTimes = 5;\n    _this.handleMouseDown = createRippleHandler(_assertThisInitialized(_this), 'MouseDown', 'start', function () {\n      clearTimeout(_this.focusVisibleTimeout);\n\n      if (_this.state.focusVisible) {\n        _this.setState({\n          focusVisible: false\n        });\n      }\n    });\n    _this.handleMouseUp = createRippleHandler(_assertThisInitialized(_this), 'MouseUp', 'stop');\n    _this.handleMouseLeave = createRippleHandler(_assertThisInitialized(_this), 'MouseLeave', 'stop', function (event) {\n      if (_this.state.focusVisible) {\n        event.preventDefault();\n      }\n    });\n    _this.handleTouchStart = createRippleHandler(_assertThisInitialized(_this), 'TouchStart', 'start');\n    _this.handleTouchEnd = createRippleHandler(_assertThisInitialized(_this), 'TouchEnd', 'stop');\n    _this.handleTouchMove = createRippleHandler(_assertThisInitialized(_this), 'TouchMove', 'stop');\n    _this.handleContextMenu = createRippleHandler(_assertThisInitialized(_this), 'ContextMenu', 'stop');\n    _this.handleBlur = createRippleHandler(_assertThisInitialized(_this), 'Blur', 'stop', function () {\n      clearTimeout(_this.focusVisibleTimeout);\n\n      if (_this.state.focusVisible) {\n        _this.setState({\n          focusVisible: false\n        });\n      }\n    });\n\n    _this.onRippleRef = function (node) {\n      _this.ripple = node;\n    };\n\n    _this.onFocusVisibleHandler = function (event) {\n      _this.keyDown = false;\n\n      _this.setState({\n        focusVisible: true\n      });\n\n      if (_this.props.onFocusVisible) {\n        _this.props.onFocusVisible(event);\n      }\n    };\n\n    _this.handleKeyDown = function (event) {\n      var _this$props = _this.props,\n          component = _this$props.component,\n          focusRipple = _this$props.focusRipple,\n          onKeyDown = _this$props.onKeyDown,\n          onClick = _this$props.onClick; // Check if key is already down to avoid repeats being counted as multiple activations\n\n      if (focusRipple && !_this.keyDown && _this.state.focusVisible && _this.ripple && event.key === ' ') {\n        _this.keyDown = true;\n        event.persist();\n\n        _this.ripple.stop(event, function () {\n          _this.ripple.start(event);\n        });\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event);\n      }\n\n      var button = _this.getButtonNode(); // Keyboard accessibility for non interactive elements\n\n\n      if (event.target === event.currentTarget && component && component !== 'button' && (event.key === ' ' || event.key === 'Enter') && !(button.tagName === 'A' && button.href)) {\n        event.preventDefault();\n\n        if (onClick) {\n          onClick(event);\n        }\n      }\n    };\n\n    _this.handleKeyUp = function (event) {\n      if (_this.props.focusRipple && event.key === ' ' && _this.ripple && _this.state.focusVisible) {\n        _this.keyDown = false;\n        event.persist();\n\n        _this.ripple.stop(event, function () {\n          _this.ripple.pulsate(event);\n        });\n      }\n\n      if (_this.props.onKeyUp) {\n        _this.props.onKeyUp(event);\n      }\n    };\n\n    _this.handleFocus = function (event) {\n      if (_this.props.disabled) {\n        return;\n      } // Fix for https://github.com/facebook/react/issues/7769\n\n\n      if (!_this.buttonRef.current) {\n        _this.buttonRef.current = event.currentTarget;\n      }\n\n      event.persist();\n      detectFocusVisible(_assertThisInitialized(_this), _this.getButtonNode(), function () {\n        _this.onFocusVisibleHandler(event);\n      });\n\n      if (_this.props.onFocus) {\n        _this.props.onFocus(event);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ButtonBase, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      listenForFocusKeys(ownerWindow(this.getButtonNode()));\n\n      if (this.props.action) {\n        this.props.action({\n          focusVisible: function focusVisible() {\n            _this2.setState({\n              focusVisible: true\n            });\n\n            _this2.getButtonNode().focus();\n          }\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.focusRipple && !this.props.disableRipple && !prevState.focusVisible && this.state.focusVisible) {\n        this.ripple.pulsate();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.focusVisibleTimeout);\n    }\n  }, {\n    key: \"getButtonNode\",\n    value: function getButtonNode() {\n      return ReactDOM.findDOMNode(this.buttonRef.current);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _clsx,\n          _this3 = this;\n\n      var _this$props2 = this.props,\n          action = _this$props2.action,\n          buttonRef = _this$props2.buttonRef,\n          centerRipple = _this$props2.centerRipple,\n          children = _this$props2.children,\n          classes = _this$props2.classes,\n          classNameProp = _this$props2.className,\n          component = _this$props2.component,\n          disabled = _this$props2.disabled,\n          disableRipple = _this$props2.disableRipple,\n          disableTouchRipple = _this$props2.disableTouchRipple,\n          focusRipple = _this$props2.focusRipple,\n          focusVisibleClassName = _this$props2.focusVisibleClassName,\n          innerRef = _this$props2.innerRef,\n          onBlur = _this$props2.onBlur,\n          onFocus = _this$props2.onFocus,\n          onFocusVisible = _this$props2.onFocusVisible,\n          onKeyDown = _this$props2.onKeyDown,\n          onKeyUp = _this$props2.onKeyUp,\n          onMouseDown = _this$props2.onMouseDown,\n          onMouseLeave = _this$props2.onMouseLeave,\n          onMouseUp = _this$props2.onMouseUp,\n          onTouchEnd = _this$props2.onTouchEnd,\n          onTouchMove = _this$props2.onTouchMove,\n          onTouchStart = _this$props2.onTouchStart,\n          tabIndex = _this$props2.tabIndex,\n          TouchRippleProps = _this$props2.TouchRippleProps,\n          type = _this$props2.type,\n          other = _objectWithoutProperties(_this$props2, [\"action\", \"buttonRef\", \"centerRipple\", \"children\", \"classes\", \"className\", \"component\", \"disabled\", \"disableRipple\", \"disableTouchRipple\", \"focusRipple\", \"focusVisibleClassName\", \"innerRef\", \"onBlur\", \"onFocus\", \"onFocusVisible\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onMouseLeave\", \"onMouseUp\", \"onTouchEnd\", \"onTouchMove\", \"onTouchStart\", \"tabIndex\", \"TouchRippleProps\", \"type\"]);\n\n      var className = clsx(classes.root, (_clsx = {}, _defineProperty(_clsx, classes.disabled, disabled), _defineProperty(_clsx, classes.focusVisible, this.state.focusVisible), _defineProperty(_clsx, focusVisibleClassName, this.state.focusVisible), _clsx), classNameProp);\n      var ComponentProp = component;\n\n      if (ComponentProp === 'button' && other.href) {\n        ComponentProp = 'a';\n      }\n\n      var buttonProps = {};\n\n      if (ComponentProp === 'button') {\n        buttonProps.type = type;\n        buttonProps.disabled = disabled;\n      } else {\n        buttonProps.role = 'button';\n        buttonProps['aria-disabled'] = disabled;\n      }\n\n      return React.createElement(ComponentProp, _extends({\n        className: className,\n        onBlur: this.handleBlur,\n        onFocus: this.handleFocus,\n        onKeyDown: this.handleKeyDown,\n        onKeyUp: this.handleKeyUp,\n        onMouseDown: this.handleMouseDown,\n        onMouseLeave: this.handleMouseLeave,\n        onMouseUp: this.handleMouseUp,\n        onTouchEnd: this.handleTouchEnd,\n        onTouchMove: this.handleTouchMove,\n        onTouchStart: this.handleTouchStart,\n        ref: function ref(_ref) {\n          setRef(_this3.buttonRef, _ref);\n          setRef(buttonRef, _ref);\n          setRef(innerRef, _ref);\n        },\n        tabIndex: disabled ? '-1' : tabIndex\n      }, buttonProps, other), children, !disableRipple && !disabled ? React.createElement(NoSsr, null, React.createElement(TouchRipple, _extends({\n        innerRef: this.onRippleRef,\n        center: centerRipple\n      }, TouchRippleProps))) : null);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (typeof prevState.focusVisible === 'undefined') {\n        return {\n          focusVisible: false,\n          lastDisabled: nextProps.disabled\n        };\n      } // The blur won't fire when the disabled state is set on a focused input.\n      // We need to book keep the focused state manually.\n\n\n      if (!prevState.prevState && nextProps.disabled && prevState.focusVisible) {\n        return {\n          focusVisible: false,\n          lastDisabled: nextProps.disabled\n        };\n      }\n\n      return {\n        lastDisabled: nextProps.disabled\n      };\n    }\n  }]);\n\n  return ButtonBase;\n}(React.Component);\n\nprocess.env.NODE_ENV !== \"production\" ? ButtonBase.propTypes = {\n  /**\n   * Callback fired when the component mounts.\n   * This is useful when you want to trigger an action programmatically.\n   * It currently only supports `focusVisible()` action.\n   *\n   * @param {object} actions This object contains all possible actions\n   * that can be triggered programmatically.\n   */\n  action: PropTypes.func,\n\n  /**\n   * Use that property to pass a ref callback to the native button component.\n   * @deprecated Use `ref` instead\n   */\n  buttonRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * If `true`, the ripples will be centered.\n   * They won't start at the cursor interaction position.\n   */\n  centerRipple: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * If `true`, the base button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the touch ripple effect will be disabled.\n   */\n  disableTouchRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the base button will have a keyboard focus ripple.\n   * `disableRipple` must also be `false`.\n   */\n  focusRipple: PropTypes.bool,\n\n  /**\n   * This property can help a person know which element has the keyboard focus.\n   * The class name will be applied when the element gain the focus through a keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/master/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   * from `withForwardRef`\n   */\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component is focused with a keyboard.\n   * We trigger a `onFocus` callback too.\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchMove: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Properties applied to the `TouchRipple` element.\n   */\n  TouchRippleProps: PropTypes.object,\n\n  /**\n   * Used to control the button's purpose.\n   * This property passes the value to the `type` attribute of the native button component.\n   */\n  type: PropTypes.oneOf(['submit', 'reset', 'button'])\n} : void 0;\nButtonBase.defaultProps = {\n  centerRipple: false,\n  component: 'button',\n  disableRipple: false,\n  disableTouchRipple: false,\n  focusRipple: false,\n  tabIndex: '0',\n  type: 'button'\n};\nexport default withStyles(styles, {\n  name: 'MuiButtonBase'\n})(withForwardedRef(ButtonBase));","map":{"version":3,"sources":["C:/Users/robson/Desktop/cidadealta/cidadealta-app/node_modules/@material-ui/core/esm/ButtonBase/ButtonBase.js"],"names":["_extends","_defineProperty","_objectWithoutProperties","_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_inherits","React","PropTypes","ReactDOM","clsx","elementTypeAcceptingRef","ownerWindow","withForwardedRef","setRef","withStyles","NoSsr","listenForFocusKeys","detectFocusVisible","TouchRipple","createRippleHandler","styles","root","display","alignItems","justifyContent","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","textDecoration","color","borderStyle","pointerEvents","disabled","focusVisible","ButtonBase","_React$Component","_getPrototypeOf2","_this","_len","arguments","length","args","Array","_key","call","apply","concat","state","buttonRef","createRef","keyDown","focusVisibleCheckTime","focusVisibleMaxCheckTimes","handleMouseDown","clearTimeout","focusVisibleTimeout","setState","handleMouseUp","handleMouseLeave","event","preventDefault","handleTouchStart","handleTouchEnd","handleTouchMove","handleContextMenu","handleBlur","onRippleRef","node","ripple","onFocusVisibleHandler","props","onFocusVisible","handleKeyDown","_this$props","component","focusRipple","onKeyDown","onClick","key","persist","stop","start","button","getButtonNode","target","currentTarget","tagName","href","handleKeyUp","pulsate","onKeyUp","handleFocus","current","onFocus","value","componentDidMount","_this2","action","focus","componentDidUpdate","prevProps","prevState","disableRipple","componentWillUnmount","findDOMNode","render","_clsx","_this3","_this$props2","centerRipple","children","classes","classNameProp","className","disableTouchRipple","focusVisibleClassName","innerRef","onBlur","onMouseDown","onMouseLeave","onMouseUp","onTouchEnd","onTouchMove","onTouchStart","tabIndex","TouchRippleProps","type","other","ComponentProp","buttonProps","role","createElement","ref","_ref","center","getDerivedStateFromProps","nextProps","lastDisabled","Component","process","env","NODE_ENV","propTypes","func","oneOfType","object","bool","isRequired","string","number","oneOf","defaultProps","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport ownerWindow from '../utils/ownerWindow';\nimport withForwardedRef from '../utils/withForwardedRef';\nimport { setRef } from '../utils/reactHelpers';\nimport withStyles from '../styles/withStyles';\nimport NoSsr from '../NoSsr';\nimport { listenForFocusKeys, detectFocusVisible } from './focusVisible';\nimport TouchRipple from './TouchRipple';\nimport createRippleHandler from './createRippleHandler';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'relative',\n    // Remove grey highlight\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 'none',\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    textDecoration: 'none',\n    // So we take precedent over the style of a native <a /> element.\n    color: 'inherit',\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$disabled': {\n      pointerEvents: 'none',\n      // Disable link interactions\n      cursor: 'default'\n    }\n  },\n\n  /* Styles applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Styles applied to the root element if keyboard focused. */\n  focusVisible: {}\n};\n/**\n * `ButtonBase` contains as few styles as possible.\n * It aims to be a simple building block for creating a button.\n * It contains a load of style reset and some focus/ripple logic.\n */\n\nvar ButtonBase =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ButtonBase, _React$Component);\n\n  function ButtonBase() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ButtonBase);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ButtonBase)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n    _this.buttonRef = React.createRef();\n    _this.keyDown = false;\n    _this.focusVisibleCheckTime = 50;\n    _this.focusVisibleMaxCheckTimes = 5;\n    _this.handleMouseDown = createRippleHandler(_assertThisInitialized(_this), 'MouseDown', 'start', function () {\n      clearTimeout(_this.focusVisibleTimeout);\n\n      if (_this.state.focusVisible) {\n        _this.setState({\n          focusVisible: false\n        });\n      }\n    });\n    _this.handleMouseUp = createRippleHandler(_assertThisInitialized(_this), 'MouseUp', 'stop');\n    _this.handleMouseLeave = createRippleHandler(_assertThisInitialized(_this), 'MouseLeave', 'stop', function (event) {\n      if (_this.state.focusVisible) {\n        event.preventDefault();\n      }\n    });\n    _this.handleTouchStart = createRippleHandler(_assertThisInitialized(_this), 'TouchStart', 'start');\n    _this.handleTouchEnd = createRippleHandler(_assertThisInitialized(_this), 'TouchEnd', 'stop');\n    _this.handleTouchMove = createRippleHandler(_assertThisInitialized(_this), 'TouchMove', 'stop');\n    _this.handleContextMenu = createRippleHandler(_assertThisInitialized(_this), 'ContextMenu', 'stop');\n    _this.handleBlur = createRippleHandler(_assertThisInitialized(_this), 'Blur', 'stop', function () {\n      clearTimeout(_this.focusVisibleTimeout);\n\n      if (_this.state.focusVisible) {\n        _this.setState({\n          focusVisible: false\n        });\n      }\n    });\n\n    _this.onRippleRef = function (node) {\n      _this.ripple = node;\n    };\n\n    _this.onFocusVisibleHandler = function (event) {\n      _this.keyDown = false;\n\n      _this.setState({\n        focusVisible: true\n      });\n\n      if (_this.props.onFocusVisible) {\n        _this.props.onFocusVisible(event);\n      }\n    };\n\n    _this.handleKeyDown = function (event) {\n      var _this$props = _this.props,\n          component = _this$props.component,\n          focusRipple = _this$props.focusRipple,\n          onKeyDown = _this$props.onKeyDown,\n          onClick = _this$props.onClick; // Check if key is already down to avoid repeats being counted as multiple activations\n\n      if (focusRipple && !_this.keyDown && _this.state.focusVisible && _this.ripple && event.key === ' ') {\n        _this.keyDown = true;\n        event.persist();\n\n        _this.ripple.stop(event, function () {\n          _this.ripple.start(event);\n        });\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event);\n      }\n\n      var button = _this.getButtonNode(); // Keyboard accessibility for non interactive elements\n\n\n      if (event.target === event.currentTarget && component && component !== 'button' && (event.key === ' ' || event.key === 'Enter') && !(button.tagName === 'A' && button.href)) {\n        event.preventDefault();\n\n        if (onClick) {\n          onClick(event);\n        }\n      }\n    };\n\n    _this.handleKeyUp = function (event) {\n      if (_this.props.focusRipple && event.key === ' ' && _this.ripple && _this.state.focusVisible) {\n        _this.keyDown = false;\n        event.persist();\n\n        _this.ripple.stop(event, function () {\n          _this.ripple.pulsate(event);\n        });\n      }\n\n      if (_this.props.onKeyUp) {\n        _this.props.onKeyUp(event);\n      }\n    };\n\n    _this.handleFocus = function (event) {\n      if (_this.props.disabled) {\n        return;\n      } // Fix for https://github.com/facebook/react/issues/7769\n\n\n      if (!_this.buttonRef.current) {\n        _this.buttonRef.current = event.currentTarget;\n      }\n\n      event.persist();\n      detectFocusVisible(_assertThisInitialized(_this), _this.getButtonNode(), function () {\n        _this.onFocusVisibleHandler(event);\n      });\n\n      if (_this.props.onFocus) {\n        _this.props.onFocus(event);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ButtonBase, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      listenForFocusKeys(ownerWindow(this.getButtonNode()));\n\n      if (this.props.action) {\n        this.props.action({\n          focusVisible: function focusVisible() {\n            _this2.setState({\n              focusVisible: true\n            });\n\n            _this2.getButtonNode().focus();\n          }\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.focusRipple && !this.props.disableRipple && !prevState.focusVisible && this.state.focusVisible) {\n        this.ripple.pulsate();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.focusVisibleTimeout);\n    }\n  }, {\n    key: \"getButtonNode\",\n    value: function getButtonNode() {\n      return ReactDOM.findDOMNode(this.buttonRef.current);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _clsx,\n          _this3 = this;\n\n      var _this$props2 = this.props,\n          action = _this$props2.action,\n          buttonRef = _this$props2.buttonRef,\n          centerRipple = _this$props2.centerRipple,\n          children = _this$props2.children,\n          classes = _this$props2.classes,\n          classNameProp = _this$props2.className,\n          component = _this$props2.component,\n          disabled = _this$props2.disabled,\n          disableRipple = _this$props2.disableRipple,\n          disableTouchRipple = _this$props2.disableTouchRipple,\n          focusRipple = _this$props2.focusRipple,\n          focusVisibleClassName = _this$props2.focusVisibleClassName,\n          innerRef = _this$props2.innerRef,\n          onBlur = _this$props2.onBlur,\n          onFocus = _this$props2.onFocus,\n          onFocusVisible = _this$props2.onFocusVisible,\n          onKeyDown = _this$props2.onKeyDown,\n          onKeyUp = _this$props2.onKeyUp,\n          onMouseDown = _this$props2.onMouseDown,\n          onMouseLeave = _this$props2.onMouseLeave,\n          onMouseUp = _this$props2.onMouseUp,\n          onTouchEnd = _this$props2.onTouchEnd,\n          onTouchMove = _this$props2.onTouchMove,\n          onTouchStart = _this$props2.onTouchStart,\n          tabIndex = _this$props2.tabIndex,\n          TouchRippleProps = _this$props2.TouchRippleProps,\n          type = _this$props2.type,\n          other = _objectWithoutProperties(_this$props2, [\"action\", \"buttonRef\", \"centerRipple\", \"children\", \"classes\", \"className\", \"component\", \"disabled\", \"disableRipple\", \"disableTouchRipple\", \"focusRipple\", \"focusVisibleClassName\", \"innerRef\", \"onBlur\", \"onFocus\", \"onFocusVisible\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onMouseLeave\", \"onMouseUp\", \"onTouchEnd\", \"onTouchMove\", \"onTouchStart\", \"tabIndex\", \"TouchRippleProps\", \"type\"]);\n\n      var className = clsx(classes.root, (_clsx = {}, _defineProperty(_clsx, classes.disabled, disabled), _defineProperty(_clsx, classes.focusVisible, this.state.focusVisible), _defineProperty(_clsx, focusVisibleClassName, this.state.focusVisible), _clsx), classNameProp);\n      var ComponentProp = component;\n\n      if (ComponentProp === 'button' && other.href) {\n        ComponentProp = 'a';\n      }\n\n      var buttonProps = {};\n\n      if (ComponentProp === 'button') {\n        buttonProps.type = type;\n        buttonProps.disabled = disabled;\n      } else {\n        buttonProps.role = 'button';\n        buttonProps['aria-disabled'] = disabled;\n      }\n\n      return React.createElement(ComponentProp, _extends({\n        className: className,\n        onBlur: this.handleBlur,\n        onFocus: this.handleFocus,\n        onKeyDown: this.handleKeyDown,\n        onKeyUp: this.handleKeyUp,\n        onMouseDown: this.handleMouseDown,\n        onMouseLeave: this.handleMouseLeave,\n        onMouseUp: this.handleMouseUp,\n        onTouchEnd: this.handleTouchEnd,\n        onTouchMove: this.handleTouchMove,\n        onTouchStart: this.handleTouchStart,\n        ref: function ref(_ref) {\n          setRef(_this3.buttonRef, _ref);\n          setRef(buttonRef, _ref);\n          setRef(innerRef, _ref);\n        },\n        tabIndex: disabled ? '-1' : tabIndex\n      }, buttonProps, other), children, !disableRipple && !disabled ? React.createElement(NoSsr, null, React.createElement(TouchRipple, _extends({\n        innerRef: this.onRippleRef,\n        center: centerRipple\n      }, TouchRippleProps))) : null);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (typeof prevState.focusVisible === 'undefined') {\n        return {\n          focusVisible: false,\n          lastDisabled: nextProps.disabled\n        };\n      } // The blur won't fire when the disabled state is set on a focused input.\n      // We need to book keep the focused state manually.\n\n\n      if (!prevState.prevState && nextProps.disabled && prevState.focusVisible) {\n        return {\n          focusVisible: false,\n          lastDisabled: nextProps.disabled\n        };\n      }\n\n      return {\n        lastDisabled: nextProps.disabled\n      };\n    }\n  }]);\n\n  return ButtonBase;\n}(React.Component);\n\nprocess.env.NODE_ENV !== \"production\" ? ButtonBase.propTypes = {\n  /**\n   * Callback fired when the component mounts.\n   * This is useful when you want to trigger an action programmatically.\n   * It currently only supports `focusVisible()` action.\n   *\n   * @param {object} actions This object contains all possible actions\n   * that can be triggered programmatically.\n   */\n  action: PropTypes.func,\n\n  /**\n   * Use that property to pass a ref callback to the native button component.\n   * @deprecated Use `ref` instead\n   */\n  buttonRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * If `true`, the ripples will be centered.\n   * They won't start at the cursor interaction position.\n   */\n  centerRipple: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * If `true`, the base button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the touch ripple effect will be disabled.\n   */\n  disableTouchRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the base button will have a keyboard focus ripple.\n   * `disableRipple` must also be `false`.\n   */\n  focusRipple: PropTypes.bool,\n\n  /**\n   * This property can help a person know which element has the keyboard focus.\n   * The class name will be applied when the element gain the focus through a keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/master/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   * from `withForwardRef`\n   */\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component is focused with a keyboard.\n   * We trigger a `onFocus` callback too.\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchMove: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Properties applied to the `TouchRipple` element.\n   */\n  TouchRippleProps: PropTypes.object,\n\n  /**\n   * Used to control the button's purpose.\n   * This property passes the value to the `type` attribute of the native button component.\n   */\n  type: PropTypes.oneOf(['submit', 'reset', 'button'])\n} : void 0;\nButtonBase.defaultProps = {\n  centerRipple: false,\n  component: 'button',\n  disableRipple: false,\n  disableTouchRipple: false,\n  focusRipple: false,\n  tabIndex: '0',\n  type: 'button'\n};\nexport default withStyles(styles, {\n  name: 'MuiButtonBase'\n})(withForwardedRef(ButtonBase));"]},"metadata":{},"sourceType":"module"}