{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withFormControlContext from '../FormControl/withFormControlContext';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport { capitalize } from '../utils/helpers';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      // Remove grey highlight\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = React.forwardRef(function FormControlLabel(props, ref) {\n  var _clsx;\n\n  var checked = props.checked,\n      classes = props.classes,\n      classNameProp = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      labelPlacement = props.labelPlacement,\n      muiFormControl = props.muiFormControl,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"muiFormControl\", \"name\", \"onChange\", \"value\"]);\n\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return React.createElement(\"label\", _extends({\n    className: clsx(classes.root, (_clsx = {}, _defineProperty(_clsx, classes[\"labelPlacement\".concat(capitalize(labelPlacement))], labelPlacement !== 'end'), _defineProperty(_clsx, classes.disabled, disabled), _clsx), classNameProp),\n    ref: ref\n  }, other), React.cloneElement(control, controlProps), React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, _defineProperty({}, classes.disabled, disabled))\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * This property can be used to pass a ref callback to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['end', 'start', 'top', 'bottom']),\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nFormControlLabel.defaultProps = {\n  labelPlacement: 'end'\n};\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(withFormControlContext(FormControlLabel));","map":{"version":3,"sources":["C:/Users/robson/Desktop/cidadealta/cidadealta-app/node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js"],"names":["_extends","_defineProperty","_objectWithoutProperties","React","PropTypes","clsx","withFormControlContext","withStyles","Typography","capitalize","styles","theme","root","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","disabled","label","color","palette","text","FormControlLabel","forwardRef","props","ref","_clsx","checked","classes","classNameProp","className","control","disabledProp","inputRef","labelPlacement","muiFormControl","name","onChange","value","other","controlProps","forEach","key","createElement","concat","cloneElement","component","process","env","NODE_ENV","propTypes","bool","object","isRequired","string","element","oneOfType","func","node","oneOf","any","defaultProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withFormControlContext from '../FormControl/withFormControlContext';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport { capitalize } from '../utils/helpers';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      // Remove grey highlight\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = React.forwardRef(function FormControlLabel(props, ref) {\n  var _clsx;\n\n  var checked = props.checked,\n      classes = props.classes,\n      classNameProp = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      labelPlacement = props.labelPlacement,\n      muiFormControl = props.muiFormControl,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"muiFormControl\", \"name\", \"onChange\", \"value\"]);\n\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return React.createElement(\"label\", _extends({\n    className: clsx(classes.root, (_clsx = {}, _defineProperty(_clsx, classes[\"labelPlacement\".concat(capitalize(labelPlacement))], labelPlacement !== 'end'), _defineProperty(_clsx, classes.disabled, disabled), _clsx), classNameProp),\n    ref: ref\n  }, other), React.cloneElement(control, controlProps), React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, _defineProperty({}, classes.disabled, disabled))\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * This property can be used to pass a ref callback to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['end', 'start', 'top', 'bottom']),\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nFormControlLabel.defaultProps = {\n  labelPlacement: 'end'\n};\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(withFormControlContext(FormControlLabel));"]},"metadata":{},"sourceType":"module"}