{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nvar RADIUS = 10;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'inline-flex',\n      // For correct alignment with the text.\n      verticalAlign: 'middle'\n    },\n\n    /* Styles applied to the badge `span` element. */\n    badge: {\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      alignContent: 'center',\n      alignItems: 'center',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      boxSizing: 'border-box',\n      fontFamily: theme.typography.fontFamily,\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.pxToRem(12),\n      minWidth: RADIUS * 2,\n      padding: '0 4px',\n      height: RADIUS * 2,\n      borderRadius: RADIUS,\n      backgroundColor: theme.palette.color,\n      color: theme.palette.textColor,\n      zIndex: 1,\n      // Render the badge on top of potential ripples.\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      backgroundColor: theme.palette.error.main,\n      color: theme.palette.error.contrastText\n    },\n\n    /* Styles applied to the badge `span` element if `invisible={true}`. */\n    invisible: {\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      transform: 'scale(0) translate(50%, -50%)',\n      transformOrigin: '100% 0%'\n    },\n\n    /* Styles applied to the root element if `variant=\"dot\"`. */\n    dot: {\n      height: 6,\n      minWidth: 6,\n      padding: 0\n    }\n  };\n};\nvar Badge = React.forwardRef(function Badge(props, ref) {\n  var _clsx;\n\n  var badgeContent = props.badgeContent,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      color = props.color,\n      ComponentProp = props.component,\n      invisibleProp = props.invisible,\n      showZero = props.showZero,\n      max = props.max,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"badgeContent\", \"children\", \"classes\", \"className\", \"color\", \"component\", \"invisible\", \"showZero\", \"max\", \"variant\"]);\n\n  var invisible = invisibleProp;\n\n  if (invisibleProp == null && Number(badgeContent) === 0 && !showZero) {\n    invisible = true;\n  }\n\n  var badgeClassName = clsx(classes.badge, (_clsx = {}, _defineProperty(_clsx, classes[\"color\".concat(capitalize(color))], color !== 'default'), _defineProperty(_clsx, classes.invisible, invisible), _defineProperty(_clsx, classes.dot, variant === 'dot'), _clsx));\n  var displayValue = '';\n\n  if (variant !== 'dot') {\n    displayValue = badgeContent > max ? \"\".concat(max, \"+\") : badgeContent;\n  }\n\n  return React.createElement(ComponentProp, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children, React.createElement(\"span\", {\n    className: badgeClassName\n  }, displayValue));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes = {\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the badge will be invisible.\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   */\n  max: PropTypes.number,\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'dot'])\n} : void 0;\nBadge.defaultProps = {\n  color: 'default',\n  component: 'span',\n  max: 99,\n  showZero: false,\n  variant: 'standard'\n};\nexport default withStyles(styles, {\n  name: 'MuiBadge'\n})(Badge);","map":{"version":3,"sources":["C:/Users/robson/Desktop/cidadealta/cidadealta-app/node_modules/@material-ui/core/esm/Badge/Badge.js"],"names":["_extends","_defineProperty","_objectWithoutProperties","React","PropTypes","clsx","withStyles","capitalize","RADIUS","styles","theme","root","position","display","verticalAlign","badge","flexDirection","flexWrap","justifyContent","alignContent","alignItems","top","right","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","padding","height","borderRadius","backgroundColor","palette","color","textColor","zIndex","transform","transformOrigin","transition","transitions","create","easing","easeInOut","duration","enteringScreen","colorPrimary","primary","main","contrastText","colorSecondary","secondary","colorError","error","invisible","leavingScreen","dot","Badge","forwardRef","props","ref","_clsx","badgeContent","children","classes","className","ComponentProp","component","invisibleProp","showZero","max","variant","other","Number","badgeClassName","concat","displayValue","createElement","process","env","NODE_ENV","propTypes","node","isRequired","object","string","oneOf","elementType","bool","number","defaultProps","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nvar RADIUS = 10;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'inline-flex',\n      // For correct alignment with the text.\n      verticalAlign: 'middle'\n    },\n\n    /* Styles applied to the badge `span` element. */\n    badge: {\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      alignContent: 'center',\n      alignItems: 'center',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      boxSizing: 'border-box',\n      fontFamily: theme.typography.fontFamily,\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.pxToRem(12),\n      minWidth: RADIUS * 2,\n      padding: '0 4px',\n      height: RADIUS * 2,\n      borderRadius: RADIUS,\n      backgroundColor: theme.palette.color,\n      color: theme.palette.textColor,\n      zIndex: 1,\n      // Render the badge on top of potential ripples.\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      backgroundColor: theme.palette.error.main,\n      color: theme.palette.error.contrastText\n    },\n\n    /* Styles applied to the badge `span` element if `invisible={true}`. */\n    invisible: {\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      transform: 'scale(0) translate(50%, -50%)',\n      transformOrigin: '100% 0%'\n    },\n\n    /* Styles applied to the root element if `variant=\"dot\"`. */\n    dot: {\n      height: 6,\n      minWidth: 6,\n      padding: 0\n    }\n  };\n};\nvar Badge = React.forwardRef(function Badge(props, ref) {\n  var _clsx;\n\n  var badgeContent = props.badgeContent,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      color = props.color,\n      ComponentProp = props.component,\n      invisibleProp = props.invisible,\n      showZero = props.showZero,\n      max = props.max,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"badgeContent\", \"children\", \"classes\", \"className\", \"color\", \"component\", \"invisible\", \"showZero\", \"max\", \"variant\"]);\n\n  var invisible = invisibleProp;\n\n  if (invisibleProp == null && Number(badgeContent) === 0 && !showZero) {\n    invisible = true;\n  }\n\n  var badgeClassName = clsx(classes.badge, (_clsx = {}, _defineProperty(_clsx, classes[\"color\".concat(capitalize(color))], color !== 'default'), _defineProperty(_clsx, classes.invisible, invisible), _defineProperty(_clsx, classes.dot, variant === 'dot'), _clsx));\n  var displayValue = '';\n\n  if (variant !== 'dot') {\n    displayValue = badgeContent > max ? \"\".concat(max, \"+\") : badgeContent;\n  }\n\n  return React.createElement(ComponentProp, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children, React.createElement(\"span\", {\n    className: badgeClassName\n  }, displayValue));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes = {\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the badge will be invisible.\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   */\n  max: PropTypes.number,\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'dot'])\n} : void 0;\nBadge.defaultProps = {\n  color: 'default',\n  component: 'span',\n  max: 99,\n  showZero: false,\n  variant: 'standard'\n};\nexport default withStyles(styles, {\n  name: 'MuiBadge'\n})(Badge);"]},"metadata":{},"sourceType":"module"}