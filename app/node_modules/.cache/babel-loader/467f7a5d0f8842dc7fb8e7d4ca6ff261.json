{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robson\\\\Desktop\\\\cidadealta\\\\cidadealta-app\\\\src\\\\screens\\\\Bills\\\\index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { useRecoilState } from 'recoil';\nimport * as atoms from '../../navigation/atoms';\nimport CustomDateRangePicker from '../../components/CustomDateRangePicker';\nimport { BankService } from '../../services/service';\nimport Loader from '../../components/Loader';\nconst styles = {\n  container: {\n    width: '100%',\n    height: '65vh',\n    display: 'flex',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    flexDirection: 'column'\n  },\n  pickerContainer: {\n    width: '50%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    alignSelf: 'flex-end',\n    padding: '1vh'\n  },\n  table: {\n    marginTop: '5vh'\n  }\n};\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: '50vh'\n  }\n});\nconst columns = [{\n  id: 'amount',\n  label: 'Quantia',\n  minWidth: '15vw',\n  format: value => new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  }).format(value)\n}, {\n  id: 'target',\n  label: 'Para quem',\n  minWidth: '20vw',\n  format: value => {\n    if (value === null || value === undefined) {\n      return '';\n    }\n\n    return value.name;\n  }\n}, {\n  id: 'type',\n  label: 'Tipo',\n  minWidth: '10vw',\n  format: value => {\n    switch (value) {\n      case 1:\n        return 'DepÃ³sito';\n\n      case 2:\n        return 'Saque';\n\n      case 3:\n        return 'Envio';\n\n      case 4:\n        return 'Recebido';\n    }\n  }\n}, {\n  id: 'createdAt',\n  label: 'Quando',\n  minWidth: '15vw',\n  format: value => {\n    const date = new Date(value);\n    return new Intl.DateTimeFormat('pt-BR', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric'\n    }).format(date).replaceAll('.', '');\n  }\n}];\n\nconst BillsScreen = () => {\n  var _ref, _data$pageData, _ref2, _data$pageData2, _data$pageData2$itemL, _ref3, _data$pageData3;\n\n  const [page, setPage] = useState(0);\n  const [{\n    account\n  }, setAccount] = useRecoilState(atoms.navigationAtom);\n  const [data, setData] = useState({\n    pageData: undefined,\n    isAsyncRequesting: true\n  });\n\n  const receiptService = () => {\n    async function receiptSubscriber() {\n      const pageData = await BankService.getBalance(account.id, 1);\n      setData({\n        pageData: pageData,\n        isAsyncRequesting: false\n      });\n      console.log(pageData);\n    }\n\n    receiptSubscriber();\n  };\n\n  useEffect(receiptService, []);\n  const classes = useStyles();\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    data.pageData.pageSize = +event.target.value;\n    setData(data);\n  };\n\n  return React.createElement(\"div\", {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: styles.pickerContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(CustomDateRangePicker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: styles.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, data.isAsyncRequesting === true && React.createElement(Loader, {\n    stroke: 1,\n    size: 15,\n    color: 'rgb(255, 178, 33)',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }), data.isAsyncRequesting === false && React.createElement(React.Fragment, null, React.createElement(TableContainer, {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, columns.map(column => React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, column.label)))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, ((_ref = data === null || data === void 0 ? void 0 : (_data$pageData = data.pageData) === null || _data$pageData === void 0 ? void 0 : _data$pageData.itemList) !== null && _ref !== void 0 ? _ref : []).slice(page * data.pageData.pageSize, page * data.pageData.pageSize + data.pageData.pageSize).map(row => {\n    return React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, columns.map(column => {\n      const value = row[column.id];\n      return React.createElement(TableCell, {\n        key: column.id,\n        align: column.align,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, column.format && value ? column.format(value) : value);\n    }));\n  })))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: (_ref2 = data === null || data === void 0 ? void 0 : (_data$pageData2 = data.pageData) === null || _data$pageData2 === void 0 ? void 0 : (_data$pageData2$itemL = _data$pageData2.itemList) === null || _data$pageData2$itemL === void 0 ? void 0 : _data$pageData2$itemL.length) !== null && _ref2 !== void 0 ? _ref2 : 0,\n    rowsPerPage: (_ref3 = data === null || data === void 0 ? void 0 : (_data$pageData3 = data.pageData) === null || _data$pageData3 === void 0 ? void 0 : _data$pageData3.pageSize) !== null && _ref3 !== void 0 ? _ref3 : 0,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }))));\n};\n\nexport default BillsScreen;","map":{"version":3,"sources":["C:/Users/robson/Desktop/cidadealta/cidadealta-app/src/screens/Bills/index.tsx"],"names":["React","useState","useEffect","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","useRecoilState","atoms","CustomDateRangePicker","BankService","Loader","styles","container","width","height","display","alignItems","justifyContent","flexDirection","pickerContainer","alignSelf","padding","table","marginTop","useStyles","root","maxHeight","columns","id","label","minWidth","format","value","Intl","NumberFormat","style","currency","undefined","name","date","Date","DateTimeFormat","year","month","day","hour","minute","replaceAll","BillsScreen","page","setPage","account","setAccount","navigationAtom","data","setData","pageData","isAsyncRequesting","receiptService","receiptSubscriber","getBalance","console","log","classes","handleChangePage","event","newPage","handleChangeRowsPerPage","pageSize","target","map","column","align","itemList","slice","row","length"],"mappings":"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","sourcesContent":["import React, {\r\n  useState, \r\n  useEffect\r\n} from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport { useRecoilState } from 'recoil';\r\nimport * as atoms from '../../navigation/atoms';\r\nimport CustomDateRangePicker from '../../components/CustomDateRangePicker';\r\nimport { BankService } from '../../services/service';\r\nimport { Balance } from '../../models/Balance';\r\nimport Loader from '../../components/Loader';\r\nimport { User } from '../../models/User';\r\n\r\nconst styles = {\r\n  container: {\r\n    width: '100%',\r\n    height: '65vh',\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start',\r\n    flexDirection: 'column'\r\n  } as React.CSSProperties,\r\n\r\n  pickerContainer: {\r\n    width: '50%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    alignSelf: 'flex-end',\r\n    padding: '1vh'\r\n  } as React.CSSProperties,\r\n\r\n  table: {\r\n    marginTop: '5vh'\r\n  } as React.CSSProperties\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: '50vh',\r\n  },\r\n});\r\n\r\nconst columns: any[] = [\r\n  { \r\n    id: 'amount', \r\n    label: 'Quantia', \r\n    minWidth: '15vw',\r\n    format: (value: number) => new Intl.NumberFormat('en-US', { \r\n      style: 'currency', \r\n      currency: 'USD'\r\n    }).format(value)\r\n  },\r\n\r\n  {\r\n    id: 'target', \r\n    label: 'Para quem', \r\n    minWidth: '20vw',\r\n    format: (value: any) => {\r\n      if(value === null || value === undefined) {\r\n        return '';\r\n      }\r\n\r\n      return value.name;\r\n    }\r\n  },\r\n  {\r\n    id: 'type', \r\n    label: 'Tipo', \r\n    minWidth: '10vw',\r\n    format: (value: number) => {\r\n      switch(value) {\r\n        case 1: \r\n          return 'DepÃ³sito';\r\n        case 2: \r\n          return 'Saque';\r\n        case 3: \r\n          return 'Envio';\r\n        case 4: \r\n          return 'Recebido';\r\n      }\r\n    }\r\n  },\r\n\r\n  { \r\n    id: 'createdAt', \r\n    label: 'Quando', \r\n    minWidth: '15vw',\r\n    format: (value: string) => {\r\n      const date = new Date(value);\r\n\r\n      return new Intl.DateTimeFormat('pt-BR', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n        hour: 'numeric',\r\n        minute: 'numeric'\r\n      }).format(date)\r\n        .replaceAll('.','');\r\n    }\r\n  },\r\n];\r\n\r\ninterface IResponse {\r\n  isAsyncRequesting: boolean;\r\n  pageData?: IPage;\r\n}\r\n\r\ninterface IPage {\r\n  currentPage: number;\r\n  pageSize: number;\r\n  totalPages: number;\r\n  totalItems: number;\r\n  itemList: Array<Balance>;\r\n}\r\n\r\nconst BillsScreen = () => {\r\n  const [page, setPage] = useState(0);\r\n  const [{account}, setAccount] = useRecoilState(atoms.navigationAtom);\r\n  const [data, setData] = useState<IResponse | null>({\r\n    pageData: undefined,\r\n    isAsyncRequesting: true\r\n  });\r\n\r\n  const receiptService = () => {\r\n    async function receiptSubscriber() {\r\n      const pageData = await BankService.getBalance(account.id, 1);\r\n\r\n      setData({\r\n        pageData: pageData,\r\n        isAsyncRequesting: false \r\n      });\r\n\r\n      console.log(pageData);\r\n    }\r\n\r\n    receiptSubscriber();\r\n  }\r\n\r\n  useEffect(receiptService, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    data!.pageData!.pageSize = +event.target.value;\r\n    setData(data);\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <div style={styles.pickerContainer}>\r\n        <CustomDateRangePicker />\r\n      </div>  \r\n\r\n      <div style={styles.table}>\r\n        {data!.isAsyncRequesting === true && (\r\n          <Loader stroke={1}\r\n            size={15}\r\n            color={'rgb(255, 178, 33)'} /> \r\n        )}\r\n\r\n        {data!.isAsyncRequesting === false && (\r\n          <>\r\n            <TableContainer className={classes.container}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((column) => (\r\n                      <TableCell\r\n                        key={column.id}\r\n                        align={column.align}\r\n                        style={{minWidth: column.minWidth}}\r\n                      >\r\n                        {column.label}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {(data?.pageData?.itemList ?? []).slice(page * data!.pageData!.pageSize, page * data!.pageData!.pageSize + data!.pageData!.pageSize).map((row) => {\r\n                    return (\r\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                        {columns.map((column) => {\r\n                          const value = (row as any)[column.id];\r\n\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {column.format && value ? column.format(value) : value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n   \r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 25, 100]}\r\n              component=\"div\"\r\n              count={data?.pageData?.itemList?.length ?? 0}\r\n              rowsPerPage={data?.pageData?.pageSize ?? 0}\r\n              page={page}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </>\r\n        )}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BillsScreen;"]},"metadata":{},"sourceType":"module"}