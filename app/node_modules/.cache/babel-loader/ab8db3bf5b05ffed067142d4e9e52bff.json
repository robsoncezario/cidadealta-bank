{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robson\\\\Desktop\\\\cidadealta\\\\cidadealta-app\\\\src\\\\screens\\\\Bills\\\\index.tsx\";\nimport React, { useEffect } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { useRecoilState } from 'recoil';\nimport * as atoms from '../../navigation/atoms';\nimport CustomDateRangePicker from '../../components/CustomDateRangePicker';\nimport { BankService } from '../../services/service';\nconst styles = {\n  container: {\n    width: '100%',\n    height: '40vh',\n    display: 'flex',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    flexDirection: 'column'\n  },\n  pickerContainer: {\n    width: '50%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    alignSelf: 'flex-end',\n    padding: '1vh'\n  },\n  table: {\n    marginTop: '5vh'\n  }\n};\nconst columns = [{\n  id: 'amount',\n  label: 'Quantia',\n  minWidth: 170,\n  format: value => new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  }).format(value)\n}, {\n  id: 'createdAt',\n  label: 'Quando',\n  minWidth: 100,\n  format: value => new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  }).format(value)\n}, {\n  id: 'createdAt',\n  label: 'Quando',\n  minWidth: 100,\n  format: value => {\n    const date = new Date(value);\n    return new Intl.DateTimeFormat('pt-BR', {\n      weekday: 'short',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric'\n    }).format(date).replaceAll('.', '');\n  }\n}, {\n  id: 'size',\n  label: 'Size\\u00a0(km\\u00b2)',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'density',\n  label: 'Density',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toFixed(2)\n}];\n\nconst BillsScreen = () => {\n  const [{\n    account\n  }, setAccount] = useRecoilState(atoms.navigationAtom);\n\n  const receiptService = () => {\n    async function receiptSubscriber() {\n      await BankService.getBalance(account.id, 1);\n    }\n\n    receiptSubscriber();\n  };\n\n  useEffect(receiptService, []);\n  return React.createElement(\"div\", {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: styles.pickerContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(CustomDateRangePicker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: styles.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, columns.map(column => React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, column.label)))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, columns.map(column => {\n      const value = row[column.id];\n      return React.createElement(TableCell, {\n        key: column.id,\n        align: column.align,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, column.format && typeof value === 'number' ? column.format(value) : value);\n    }));\n  })))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  })));\n};\n\nexport default BillsScreen;","map":{"version":3,"sources":["C:/Users/robson/Desktop/cidadealta/cidadealta-app/src/screens/Bills/index.tsx"],"names":["React","useEffect","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","useRecoilState","atoms","CustomDateRangePicker","BankService","styles","container","width","height","display","alignItems","justifyContent","flexDirection","pickerContainer","alignSelf","padding","table","marginTop","columns","id","label","minWidth","format","value","Intl","NumberFormat","style","currency","date","Date","DateTimeFormat","weekday","year","month","day","hour","minute","second","replaceAll","align","toLocaleString","toFixed","BillsScreen","account","setAccount","navigationAtom","receiptService","receiptSubscriber","getBalance","classes","map","column","rows","slice","page","rowsPerPage","row","code","length","handleChangePage","handleChangeRowsPerPage"],"mappings":"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","sourcesContent":["import React, {\r\n  useState, \r\n  useEffect\r\n} from 'react';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport { useRecoilState } from 'recoil';\r\nimport * as atoms from '../../navigation/atoms';\r\nimport CustomDateRangePicker from '../../components/CustomDateRangePicker';\r\nimport { BankService } from '../../services/service';\r\n\r\nconst styles = {\r\n  container: {\r\n    width: '100%',\r\n    height: '40vh',\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start',\r\n    flexDirection: 'column'\r\n  } as React.CSSProperties,\r\n\r\n  pickerContainer: {\r\n    width: '50%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    alignSelf: 'flex-end',\r\n    padding: '1vh'\r\n  } as React.CSSProperties,\r\n\r\n  table: {\r\n    marginTop: '5vh'\r\n  } as React.CSSProperties\r\n}\r\n\r\nconst columns: Column[] = [\r\n  { \r\n    id: 'amount', \r\n    label: 'Quantia', \r\n    minWidth: 170,\r\n    format: (value: number) => new Intl.NumberFormat('en-US', { \r\n      style: 'currency', \r\n      currency: 'USD'\r\n    }).format(value)\r\n  },\r\n\r\n  { \r\n    id: 'createdAt', \r\n    label: 'Quando', \r\n    minWidth: 100,\r\n    format: (value: number) => new Intl.NumberFormat('en-US', { \r\n      style: 'currency', \r\n      currency: 'USD'\r\n    }).format(value)\r\n  },\r\n\r\n  {\r\n    id: 'createdAt', \r\n    label: 'Quando', \r\n    minWidth: 100,\r\n    format: (value: number) => {\r\n      const date = new Date(value);\r\n\r\n      return new Intl.DateTimeFormat('pt-BR', {\r\n          weekday: 'short',\r\n\t\t\t\tyear: 'numeric',\r\n\t\t\t\tmonth: 'long',\r\n\t\t\t\tday: 'numeric',\r\n\t\t\t\thour: 'numeric',\r\n\t\t\t\tminute: 'numeric',\r\n\t\t\t\tsecond: 'numeric',\r\n\t\t\t}).format(date)\r\n        .replaceAll('.','')\r\n    }\r\n  },\r\n  {\r\n    id: 'size',\r\n    label: 'Size\\u00a0(km\\u00b2)',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value: number) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'density',\r\n    label: 'Density',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value: number) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nconst BillsScreen = () => {\r\n  const [{account}, setAccount] = useRecoilState(atoms.navigationAtom);\r\n\r\n  const receiptService = () => {\r\n    async function receiptSubscriber() {\r\n      await BankService.getBalance(account.id, 1);\r\n    }\r\n\r\n    receiptSubscriber();\r\n  }\r\n\r\n  useEffect(receiptService, []);\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <div style={styles.pickerContainer}>\r\n        <CustomDateRangePicker />\r\n      </div>  \r\n\r\n      <div style={styles.table}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BillsScreen;"]},"metadata":{},"sourceType":"module"}