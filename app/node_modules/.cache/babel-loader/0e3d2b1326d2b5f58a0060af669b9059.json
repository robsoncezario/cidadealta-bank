{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport '../Button'; // So we don't have any override priority issue.\n\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end'\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > * + *': {\n      marginLeft: 8\n    }\n  }\n};\nvar ExpansionPanelActions = React.forwardRef(function ExpansionPanelActions(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      disableSpacing = props.disableSpacing,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"disableSpacing\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, _defineProperty({}, classes.spacing, !disableSpacing), className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanelActions.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nExpansionPanelActions.defaultProps = {\n  disableSpacing: false\n};\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanelActions'\n})(ExpansionPanelActions);","map":{"version":3,"sources":["C:/Users/robson/Desktop/cidadealta/cidadealta-app/node_modules/@material-ui/core/esm/ExpansionPanelActions/ExpansionPanelActions.js"],"names":["_extends","_defineProperty","_objectWithoutProperties","React","PropTypes","clsx","withStyles","styles","root","display","alignItems","padding","justifyContent","spacing","marginLeft","ExpansionPanelActions","forwardRef","props","ref","classes","className","disableSpacing","other","createElement","process","env","NODE_ENV","propTypes","children","node","isRequired","object","string","bool","defaultProps","name"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,wBAAP,MAAqC,gDAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAO,WAAP,C,CAAoB;;AAEpB,OAAO,IAAIC,MAAM,GAAG;AAClB;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,UAAU,EAAE,QAFR;AAGJC,IAAAA,OAAO,EAAE,CAHL;AAIJC,IAAAA,cAAc,EAAE;AAJZ,GAFY;;AASlB;AACAC,EAAAA,OAAO,EAAE;AACP,iBAAa;AACXC,MAAAA,UAAU,EAAE;AADD;AADN;AAVS,CAAb;AAgBP,IAAIC,qBAAqB,GAAGZ,KAAK,CAACa,UAAN,CAAiB,SAASD,qBAAT,CAA+BE,KAA/B,EAAsCC,GAAtC,EAA2C;AACtF,MAAIC,OAAO,GAAGF,KAAK,CAACE,OAApB;AAAA,MACIC,SAAS,GAAGH,KAAK,CAACG,SADtB;AAAA,MAEIC,cAAc,GAAGJ,KAAK,CAACI,cAF3B;AAAA,MAGIC,KAAK,GAAGpB,wBAAwB,CAACe,KAAD,EAAQ,CAAC,SAAD,EAAY,WAAZ,EAAyB,gBAAzB,CAAR,CAHpC;;AAKA,SAAOd,KAAK,CAACoB,aAAN,CAAoB,KAApB,EAA2BvB,QAAQ,CAAC;AACzCoB,IAAAA,SAAS,EAAEf,IAAI,CAACc,OAAO,CAACX,IAAT,EAAeP,eAAe,CAAC,EAAD,EAAKkB,OAAO,CAACN,OAAb,EAAsB,CAACQ,cAAvB,CAA9B,EAAsED,SAAtE,CAD0B;AAEzCF,IAAAA,GAAG,EAAEA;AAFoC,GAAD,EAGvCI,KAHuC,CAAnC,CAAP;AAID,CAV2B,CAA5B;AAWAE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCX,qBAAqB,CAACY,SAAtB,GAAkC;AACxE;;;AAGAC,EAAAA,QAAQ,EAAExB,SAAS,CAACyB,IAAV,CAAeC,UAJ+C;;AAMxE;;;;AAIAX,EAAAA,OAAO,EAAEf,SAAS,CAAC2B,MAAV,CAAiBD,UAV8C;;AAYxE;;;AAGAV,EAAAA,SAAS,EAAEhB,SAAS,CAAC4B,MAfmD;;AAiBxE;;;AAGAX,EAAAA,cAAc,EAAEjB,SAAS,CAAC6B;AApB8C,CAA1E,GAqBI,KAAK,CArBT;AAsBAlB,qBAAqB,CAACmB,YAAtB,GAAqC;AACnCb,EAAAA,cAAc,EAAE;AADmB,CAArC;AAGA,eAAef,UAAU,CAACC,MAAD,EAAS;AAChC4B,EAAAA,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZpB,qBAFY,CAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport '../Button'; // So we don't have any override priority issue.\n\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end'\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > * + *': {\n      marginLeft: 8\n    }\n  }\n};\nvar ExpansionPanelActions = React.forwardRef(function ExpansionPanelActions(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      disableSpacing = props.disableSpacing,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"disableSpacing\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, _defineProperty({}, classes.spacing, !disableSpacing), className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanelActions.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nExpansionPanelActions.defaultProps = {\n  disableSpacing: false\n};\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanelActions'\n})(ExpansionPanelActions);"]},"metadata":{},"sourceType":"module"}