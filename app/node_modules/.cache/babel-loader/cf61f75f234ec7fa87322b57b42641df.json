{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      userSelect: 'none',\n      width: '1em',\n      height: '1em',\n      display: 'inline-block',\n      fill: 'currentColor',\n      flexShrink: 0,\n      fontSize: theme.typography.pxToRem(24),\n      transition: theme.transitions.create('fill', {\n        duration: theme.transitions.duration.shorter\n      })\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"action\"`. */\n    colorAction: {\n      color: theme.palette.action.active\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `color=\"disabled\"`. */\n    colorDisabled: {\n      color: theme.palette.action.disabled\n    },\n\n    /* Styles applied to the root element if `fontSize=\"inherit\"`. */\n    fontSizeInherit: {\n      fontSize: 'inherit'\n    },\n\n    /* Styles applied to the root element if `fontSize=\"small\"`. */\n    fontSizeSmall: {\n      fontSize: theme.typography.pxToRem(20)\n    },\n\n    /* Styles applied to the root element if `fontSize=\"large\"`. */\n    fontSizeLarge: {\n      fontSize: theme.typography.pxToRem(35)\n    }\n  };\n};\nvar SvgIcon = React.forwardRef(function SvgIcon(props, ref) {\n  var _clsx;\n\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      color = props.color,\n      Component = props.component,\n      fontSize = props.fontSize,\n      htmlColor = props.htmlColor,\n      titleAccess = props.titleAccess,\n      viewBox = props.viewBox,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"titleAccess\", \"viewBox\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, (_clsx = {}, _defineProperty(_clsx, classes[\"color\".concat(capitalize(color))], color !== 'inherit'), _defineProperty(_clsx, classes[\"fontSize\".concat(capitalize(fontSize))], fontSize !== 'default'), _clsx), className),\n    focusable: \"false\",\n    viewBox: viewBox,\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? 'false' : 'true',\n    role: titleAccess ? 'img' : 'presentation',\n    ref: ref\n  }, other), children, titleAccess ? React.createElement(\"title\", null, titleAccess) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes = {\n  /**\n   * Node passed into the SVG element.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * You can use the `htmlColor` property to apply a color attribute to the SVG element.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary', 'action', 'error', 'disabled']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   */\n  fontSize: PropTypes.oneOf(['inherit', 'default', 'small', 'large']),\n\n  /**\n   * Applies a color attribute to the SVG element.\n   */\n  htmlColor: PropTypes.string,\n\n  /**\n   * The shape-rendering attribute. The behavior of the different options is described on the\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n   * If you are having issues with blurry icons you should investigate this property.\n   */\n  shapeRendering: PropTypes.string,\n\n  /**\n   * Provides a human-readable title for the element that contains it.\n   * https://www.w3.org/TR/SVG-access/#Equivalent\n   */\n  titleAccess: PropTypes.string,\n\n  /**\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\n   * For example, if the SVG element is 500 (width) by 200 (height),\n   * and you pass viewBox=\"0 0 50 20\",\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n   * to bottom right (50,20) and each unit will be worth 10px.\n   */\n  viewBox: PropTypes.string\n} : void 0;\nSvgIcon.defaultProps = {\n  color: 'inherit',\n  component: 'svg',\n  fontSize: 'default',\n  viewBox: '0 0 24 24'\n};\nSvgIcon.muiName = 'SvgIcon';\nexport default withStyles(styles, {\n  name: 'MuiSvgIcon'\n})(SvgIcon);","map":{"version":3,"sources":["C:/Users/robson/Desktop/cidadealta/cidadealta-app/node_modules/@material-ui/core/esm/SvgIcon/SvgIcon.js"],"names":["_extends","_defineProperty","_objectWithoutProperties","React","PropTypes","clsx","withStyles","capitalize","styles","theme","root","userSelect","width","height","display","fill","flexShrink","fontSize","typography","pxToRem","transition","transitions","create","duration","shorter","colorPrimary","color","palette","primary","main","colorSecondary","secondary","colorAction","action","active","colorError","error","colorDisabled","disabled","fontSizeInherit","fontSizeSmall","fontSizeLarge","SvgIcon","forwardRef","props","ref","_clsx","children","classes","className","Component","component","htmlColor","titleAccess","viewBox","other","createElement","concat","focusable","role","process","env","NODE_ENV","propTypes","node","isRequired","object","string","oneOf","elementType","shapeRendering","defaultProps","muiName","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      userSelect: 'none',\n      width: '1em',\n      height: '1em',\n      display: 'inline-block',\n      fill: 'currentColor',\n      flexShrink: 0,\n      fontSize: theme.typography.pxToRem(24),\n      transition: theme.transitions.create('fill', {\n        duration: theme.transitions.duration.shorter\n      })\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"action\"`. */\n    colorAction: {\n      color: theme.palette.action.active\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `color=\"disabled\"`. */\n    colorDisabled: {\n      color: theme.palette.action.disabled\n    },\n\n    /* Styles applied to the root element if `fontSize=\"inherit\"`. */\n    fontSizeInherit: {\n      fontSize: 'inherit'\n    },\n\n    /* Styles applied to the root element if `fontSize=\"small\"`. */\n    fontSizeSmall: {\n      fontSize: theme.typography.pxToRem(20)\n    },\n\n    /* Styles applied to the root element if `fontSize=\"large\"`. */\n    fontSizeLarge: {\n      fontSize: theme.typography.pxToRem(35)\n    }\n  };\n};\nvar SvgIcon = React.forwardRef(function SvgIcon(props, ref) {\n  var _clsx;\n\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      color = props.color,\n      Component = props.component,\n      fontSize = props.fontSize,\n      htmlColor = props.htmlColor,\n      titleAccess = props.titleAccess,\n      viewBox = props.viewBox,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"titleAccess\", \"viewBox\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, (_clsx = {}, _defineProperty(_clsx, classes[\"color\".concat(capitalize(color))], color !== 'inherit'), _defineProperty(_clsx, classes[\"fontSize\".concat(capitalize(fontSize))], fontSize !== 'default'), _clsx), className),\n    focusable: \"false\",\n    viewBox: viewBox,\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? 'false' : 'true',\n    role: titleAccess ? 'img' : 'presentation',\n    ref: ref\n  }, other), children, titleAccess ? React.createElement(\"title\", null, titleAccess) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes = {\n  /**\n   * Node passed into the SVG element.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * You can use the `htmlColor` property to apply a color attribute to the SVG element.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary', 'action', 'error', 'disabled']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   */\n  fontSize: PropTypes.oneOf(['inherit', 'default', 'small', 'large']),\n\n  /**\n   * Applies a color attribute to the SVG element.\n   */\n  htmlColor: PropTypes.string,\n\n  /**\n   * The shape-rendering attribute. The behavior of the different options is described on the\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n   * If you are having issues with blurry icons you should investigate this property.\n   */\n  shapeRendering: PropTypes.string,\n\n  /**\n   * Provides a human-readable title for the element that contains it.\n   * https://www.w3.org/TR/SVG-access/#Equivalent\n   */\n  titleAccess: PropTypes.string,\n\n  /**\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\n   * For example, if the SVG element is 500 (width) by 200 (height),\n   * and you pass viewBox=\"0 0 50 20\",\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n   * to bottom right (50,20) and each unit will be worth 10px.\n   */\n  viewBox: PropTypes.string\n} : void 0;\nSvgIcon.defaultProps = {\n  color: 'inherit',\n  component: 'svg',\n  fontSize: 'default',\n  viewBox: '0 0 24 24'\n};\nSvgIcon.muiName = 'SvgIcon';\nexport default withStyles(styles, {\n  name: 'MuiSvgIcon'\n})(SvgIcon);"]},"metadata":{},"sourceType":"module"}