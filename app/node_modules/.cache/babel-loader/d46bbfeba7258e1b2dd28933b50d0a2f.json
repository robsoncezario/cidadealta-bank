{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robson\\\\Desktop\\\\drip\\\\server-data\\\\resources\\\\[drip]\\\\drip_bank\\\\src\\\\components\\\\ActionButton\\\\index.tsx\";\nimport React, { useState } from 'react';\nimport { Button, Typography, withStyles } from '@material-ui/core';\nimport { useRecoilState } from 'recoil';\nimport * as atoms from '../../bottomNavigation/atoms';\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    flexDirection: 'column'\n  },\n  icon: {\n    width: '3vh',\n    height: '3vh'\n  },\n  endAligner: {\n    marginTop: '5vh'\n  },\n  dark: {\n    filter: 'brightness(0)'\n  }\n};\nconst TheButton = withStyles({\n  root: {\n    minWidth: '12vh',\n    maxWidth: '12vh',\n    width: '12vh  !important',\n    height: '12vh !important',\n    padding: '0 !important',\n    borderRadius: '0 !important',\n    border: 'none !important',\n    clipPath: 'polygon(5px 0, 100% 0, 100% 100%, 0 100%, 0 5px)',\n    backgroundColor: 'rgb(24, 24, 27)',\n    color: 'white'\n  },\n  label: {\n    '&:hover': {\n      color: 'black !important'\n    }\n  }\n})(Button);\n\nconst ActionButton = props => {\n  const [, setNavigation] = useRecoilState(atoms.bottomNavigationAtom);\n  const [isHover, setHover] = useState(false);\n\n  const handleTabIndex = () => {\n    setNavigation(prevState => ({ ...prevState,\n      index: props.index\n    }));\n  };\n\n  const handleOnMouseEnter = () => {\n    setHover(true);\n  };\n\n  const handleOnMouseLeave = () => {\n    setHover(false);\n  };\n\n  return React.createElement(TheButton, {\n    onClick: handleTabIndex,\n    onMouseEnter: handleOnMouseEnter,\n    onMouseLeave: handleOnMouseLeave,\n    variant: \"contained\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: isHover ? { ...styles.icon,\n      ...styles.dark\n    } : styles.icon,\n    src: process.env.PUBLIC_URL + '/media/ui/' + props.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"div\",\n    style: isHover ? { ...styles.endAligner,\n      ...styles.dark\n    } : styles.endAligner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, props.name)));\n};\n\nexport default ActionButton;","map":{"version":3,"sources":["C:/Users/robson/Desktop/drip/server-data/resources/[drip]/drip_bank/src/components/ActionButton/index.tsx"],"names":["React","useState","Button","Typography","withStyles","useRecoilState","atoms","styles","container","display","alignItems","justifyContent","flexDirection","icon","width","height","endAligner","marginTop","dark","filter","TheButton","root","minWidth","maxWidth","padding","borderRadius","border","clipPath","backgroundColor","color","label","ActionButton","props","setNavigation","bottomNavigationAtom","isHover","setHover","handleTabIndex","prevState","index","handleOnMouseEnter","handleOnMouseLeave","process","env","PUBLIC_URL","name"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { \r\n  Button,\r\n  Typography,\r\n  withStyles\r\n} from '@material-ui/core';\r\nimport { useRecoilState } from 'recoil';\r\nimport * as atoms from '../../bottomNavigation/atoms';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start',\r\n    flexDirection: 'column'\r\n  } as React.CSSProperties,\r\n\r\n  icon: {\r\n    width: '3vh',\r\n    height: '3vh'\r\n  } as React.CSSProperties,\r\n\r\n  endAligner: {\r\n    marginTop: '5vh'\r\n  } as React.CSSProperties,\r\n\r\n  dark: {\r\n    filter: 'brightness(0)'\r\n  } as React.CSSProperties\r\n}\r\n\r\nconst TheButton = withStyles({\r\n  root: {\r\n    minWidth: '12vh',\r\n    maxWidth: '12vh',\r\n    width: '12vh  !important',\r\n    height: '12vh !important',\r\n    padding: '0 !important',\r\n    borderRadius: '0 !important',\r\n    border: 'none !important',\r\n    clipPath: 'polygon(5px 0, 100% 0, 100% 100%, 0 100%, 0 5px)',\r\n    backgroundColor: 'rgb(24, 24, 27)',\r\n    color: 'white'\r\n  },\r\n\r\n  label: {\r\n    '&:hover': {\r\n      color: 'black !important'\r\n    }\r\n  }\r\n})(Button);\r\n\r\nconst ActionButton = (props: any) => {\r\n  const [, setNavigation] = useRecoilState(atoms.bottomNavigationAtom);\r\n  const [isHover, setHover] = useState<boolean>(false);\r\n  const handleTabIndex = () => {\r\n    setNavigation(prevState => ({ \r\n      ...prevState,\r\n      index: props.index\r\n    })); \r\n  };\r\n\r\n  const handleOnMouseEnter = () => {\r\n    setHover(true);\r\n  };\r\n\r\n  const handleOnMouseLeave = () => {\r\n    setHover(false);\r\n  };\r\n\r\n  return (\r\n    <TheButton \r\n            onClick={handleTabIndex}\r\n            onMouseEnter={handleOnMouseEnter}\r\n            onMouseLeave={handleOnMouseLeave}\r\n            variant='contained'\r\n            color='primary'>\r\n      <div style={styles.container}>\r\n        <img style={isHover ? {...styles.icon, ...styles.dark} : styles.icon} \r\n             src={process.env.PUBLIC_URL + '/media/ui/' + props.icon} /> \r\n\r\n        <Typography \r\n          variant='body2' \r\n          component='div'\r\n          style={isHover ? {...styles.endAligner, ...styles.dark} : styles.endAligner}>\r\n          {props.name}\r\n        </Typography>\r\n      </div>  \r\n    </TheButton>\r\n  );\r\n}\r\n\r\nexport default ActionButton;"]},"metadata":{},"sourceType":"module"}