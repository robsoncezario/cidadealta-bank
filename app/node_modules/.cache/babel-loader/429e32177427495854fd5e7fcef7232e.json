{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if there are children and not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover'\n    }\n  };\n};\nvar Avatar = React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      childrenClassNameProp = props.childrenClassName,\n      classes = props.classes,\n      classNameProp = props.className,\n      Component = props.component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"childrenClassName\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\"]);\n\n  var children = null;\n  var img = src || srcSet;\n\n  if (img) {\n    children = React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenClassNameProp && React.isValidElement(childrenProp)) {\n    children = React.cloneElement(childrenProp, {\n      className: clsx(childrenClassNameProp, childrenProp.props.className)\n    });\n  } else {\n    children = childrenProp;\n  }\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, _defineProperty({}, classes.colorDefault, !img), classNameProp),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar.\n   * `src` and `alt` props will not be used and no `img` will\n   * be rendered by default.\n   *\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   * The className of the child element.\n   * Used by Chip and ListItemIcon to style the Avatar icon.\n   */\n  childrenClassName: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component\n   * is used to display an image.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   */\n  srcSet: PropTypes.string\n} : void 0;\nAvatar.defaultProps = {\n  component: 'div'\n};\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","map":{"version":3,"sources":["C:/Users/robson/Desktop/cidadealta/cidadealta-app/node_modules/@material-ui/core/esm/Avatar/Avatar.js"],"names":["_defineProperty","_extends","_objectWithoutProperties","React","PropTypes","clsx","withStyles","styles","theme","root","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","borderRadius","overflow","userSelect","colorDefault","color","palette","background","default","backgroundColor","type","grey","img","textAlign","objectFit","Avatar","forwardRef","props","ref","alt","childrenProp","children","childrenClassNameProp","childrenClassName","classes","classNameProp","className","Component","component","imgProps","sizes","src","srcSet","other","createElement","isValidElement","cloneElement","system","process","env","NODE_ENV","propTypes","string","node","object","isRequired","elementType","defaultProps","name"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if there are children and not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover'\n    }\n  };\n};\nvar Avatar = React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      childrenClassNameProp = props.childrenClassName,\n      classes = props.classes,\n      classNameProp = props.className,\n      Component = props.component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"childrenClassName\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\"]);\n\n  var children = null;\n  var img = src || srcSet;\n\n  if (img) {\n    children = React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenClassNameProp && React.isValidElement(childrenProp)) {\n    children = React.cloneElement(childrenProp, {\n      className: clsx(childrenClassNameProp, childrenProp.props.className)\n    });\n  } else {\n    children = childrenProp;\n  }\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, _defineProperty({}, classes.colorDefault, !img), classNameProp),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar.\n   * `src` and `alt` props will not be used and no `img` will\n   * be rendered by default.\n   *\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   * The className of the child element.\n   * Used by Chip and ListItemIcon to style the Avatar icon.\n   */\n  childrenClassName: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component\n   * is used to display an image.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   */\n  srcSet: PropTypes.string\n} : void 0;\nAvatar.defaultProps = {\n  component: 'div'\n};\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);"]},"metadata":{},"sourceType":"module"}