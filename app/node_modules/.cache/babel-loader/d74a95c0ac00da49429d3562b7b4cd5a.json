{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport _objectWithoutProperties from '@babel/runtime/helpers/esm/objectWithoutProperties';\nimport React__default, { createElement, useMemo, useRef, useEffect, forwardRef } from 'react';\nimport { node, bool, object, func } from 'prop-types';\nimport { D as DIALOG_WIDTH, b as DIALOG_WIDTH_WIDER, u as useUtils, I as IS_TOUCH_DEVICE_MEDIA, M as MuiPickersAdapterContext } from './dimensions-91c32fe6.js';\nimport clsx from 'clsx';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { o as onSpaceOrEnter, e as executeInTheNextEventLoopTick } from './utils-ef34bcd7.js';\nimport { e as getDisplayDate, f as getTextFieldAriaText, K as KeyboardDateInput$1, p as parsePickerInputValue, P as Picker } from './Picker-019ee379.js';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Dialog from '@material-ui/core/Dialog';\nimport { W as WrapperVariantContext, I as IsStaticVariantContext } from './WrapperVariantContext-a0f5915b.js';\nimport Popover from '@material-ui/core/Popover';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport TrapFocus from '@material-ui/core/Modal/TrapFocus';\nimport Popper from '@material-ui/core/Popper';\nimport { a as useGlobalKeyDown, k as keycode } from './useKeyDown-9f8b37a0.js';\nimport { u as usePickerState } from './usePickerState-1c348703.js';\nvar useStyles = makeStyles({\n  dialogRoot: {\n    minWidth: DIALOG_WIDTH\n  },\n  dialogRootWider: {\n    minWidth: DIALOG_WIDTH_WIDER\n  },\n  dialogContainer: {\n    '&:focus > $dialogRoot': {\n      outline: 'auto',\n      '@media (pointer:coarse)': {\n        outline: 0\n      }\n    }\n  },\n  dialog: {\n    '&:first-child': {\n      padding: 0\n    }\n  },\n  withAdditionalAction: {\n    // set justifyContent to default value to fix IE11 layout bug\n    // see https://github.com/mui-org/material-ui-pickers/pull/267\n    justifyContent: 'flex-start',\n    '& > *:first-child': {\n      marginRight: 'auto'\n    }\n  }\n}, {\n  name: 'MuiPickersModal'\n});\n\nvar ModalDialog = function ModalDialog(_ref) {\n  var children = _ref.children,\n      onAccept = _ref.onAccept,\n      onDismiss = _ref.onDismiss,\n      onClear = _ref.onClear,\n      onSetToday = _ref.onSetToday,\n      okLabel = _ref.okLabel,\n      cancelLabel = _ref.cancelLabel,\n      clearLabel = _ref.clearLabel,\n      todayLabel = _ref.todayLabel,\n      clearable = _ref.clearable,\n      showTodayButton = _ref.showTodayButton,\n      showTabs = _ref.showTabs,\n      wider = _ref.wider,\n      other = _objectWithoutProperties(_ref, [\"children\", \"onAccept\", \"onDismiss\", \"onClear\", \"onSetToday\", \"okLabel\", \"cancelLabel\", \"clearLabel\", \"todayLabel\", \"clearable\", \"showTodayButton\", \"showTabs\", \"wider\"]);\n\n  var classes = useStyles();\n  return createElement(Dialog, _extends({\n    onClose: onDismiss,\n    classes: {\n      container: classes.dialogContainer,\n      paper: clsx(classes.dialogRoot, wider && classes.dialogRootWider)\n    }\n  }, other), createElement(DialogContent, {\n    children: children,\n    className: classes.dialog\n  }), createElement(DialogActions, {\n    className: clsx((clearable || showTodayButton) && classes.withAdditionalAction)\n  }, clearable && createElement(Button, {\n    \"data-mui-test\": \"clear-action-button\",\n    color: \"primary\",\n    onClick: onClear\n  }, clearLabel), showTodayButton && createElement(Button, {\n    \"data-mui-test\": \"today-action-button\",\n    color: \"primary\",\n    onClick: onSetToday\n  }, todayLabel), cancelLabel && createElement(Button, {\n    color: \"primary\",\n    onClick: onDismiss\n  }, cancelLabel), okLabel && createElement(Button, {\n    color: \"primary\",\n    onClick: onAccept\n  }, okLabel)));\n};\n\nModalDialog.displayName = 'ModalDialog';\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar PureDateInput = function PureDateInput(_ref) {\n  var inputFormat = _ref.inputFormat,\n      rawValue = _ref.rawValue,\n      validationError = _ref.validationError,\n      InputProps = _ref.InputProps,\n      onOpen = _ref.openPicker,\n      renderInput = _ref.renderInput,\n      forwardedRef = _ref.forwardedRef,\n      containerRef = _ref.containerRef,\n      _ref$getOpenDialogAri = _ref.getOpenDialogAriaText,\n      getOpenDialogAriaText = _ref$getOpenDialogAri === void 0 ? getTextFieldAriaText : _ref$getOpenDialogAri,\n      disabled = _ref.disabled,\n      label = _ref.label,\n      _ref$TextFieldProps = _ref.TextFieldProps,\n      TextFieldProps = _ref$TextFieldProps === void 0 ? {} : _ref$TextFieldProps;\n  var utils = useUtils();\n  var PureDateInputProps = useMemo(function () {\n    return _objectSpread({}, InputProps, {\n      readOnly: true\n    });\n  }, [InputProps]);\n  var inputValue = getDisplayDate(utils, rawValue, inputFormat);\n  return renderInput(_objectSpread({\n    label: label,\n    disabled: disabled,\n    ref: containerRef,\n    inputRef: forwardedRef,\n    error: validationError,\n    'aria-label': getOpenDialogAriaText(rawValue, utils),\n    onClick: onOpen,\n    value: inputValue,\n    InputProps: PureDateInputProps,\n    onKeyDown: onSpaceOrEnter(onOpen)\n  }, TextFieldProps));\n};\n\nPureDateInput.displayName = 'PureDateInput';\n\nvar MobileWrapper = function MobileWrapper(_ref) {\n  var open = _ref.open,\n      children = _ref.children,\n      okLabel = _ref.okLabel,\n      cancelLabel = _ref.cancelLabel,\n      clearLabel = _ref.clearLabel,\n      todayLabel = _ref.todayLabel,\n      showTodayButton = _ref.showTodayButton,\n      clearable = _ref.clearable,\n      DialogProps = _ref.DialogProps,\n      showTabs = _ref.showTabs,\n      wider = _ref.wider,\n      DateInputProps = _ref.DateInputProps,\n      onClear = _ref.onClear,\n      onAccept = _ref.onAccept,\n      onDismiss = _ref.onDismiss,\n      onSetToday = _ref.onSetToday,\n      PopoverProps = _ref.PopoverProps,\n      displayStaticWrapperAs = _ref.displayStaticWrapperAs,\n      KeyboardDateInputComponent = _ref.KeyboardDateInputComponent,\n      _ref$PureDateInputCom = _ref.PureDateInputComponent,\n      PureDateInputComponent = _ref$PureDateInputCom === void 0 ? PureDateInput : _ref$PureDateInputCom,\n      other = _objectWithoutProperties(_ref, [\"open\", \"children\", \"okLabel\", \"cancelLabel\", \"clearLabel\", \"todayLabel\", \"showTodayButton\", \"clearable\", \"DialogProps\", \"showTabs\", \"wider\", \"DateInputProps\", \"onClear\", \"onAccept\", \"onDismiss\", \"onSetToday\", \"PopoverProps\", \"displayStaticWrapperAs\", \"KeyboardDateInputComponent\", \"PureDateInputComponent\"]);\n\n  return createElement(WrapperVariantContext.Provider, {\n    value: \"mobile\"\n  }, createElement(PureDateInputComponent, _extends({}, other, DateInputProps)), createElement(ModalDialog, _extends({\n    wider: wider,\n    showTabs: showTabs,\n    open: open,\n    onClear: onClear,\n    onAccept: onAccept,\n    onDismiss: onDismiss,\n    onSetToday: onSetToday,\n    clearLabel: clearLabel,\n    todayLabel: todayLabel,\n    okLabel: okLabel,\n    cancelLabel: cancelLabel,\n    clearable: clearable,\n    showTodayButton: showTodayButton,\n    children: children,\n    \"data-mui-test\": \"mobile-wrapper-dialog\"\n  }, DialogProps)));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? MobileWrapper.propTypes = {\n  okLabel: node,\n  cancelLabel: node,\n  clearLabel: node,\n  clearable: bool,\n  todayLabel: node,\n  showTodayButton: bool,\n  DialogProps: object\n} : void 0;\nMobileWrapper.defaultProps = {\n  okLabel: 'OK',\n  cancelLabel: 'Cancel',\n  clearLabel: 'Clear',\n  todayLabel: 'Today',\n  clearable: false,\n  showTodayButton: false\n};\nvar useStyles$1 = makeStyles({\n  popover: {\n    '&:focus': _defineProperty({\n      outline: 'auto'\n    }, IS_TOUCH_DEVICE_MEDIA, {\n      outline: 0\n    })\n  }\n});\n\nvar DesktopWrapper = function DesktopWrapper(_ref) {\n  var open = _ref.open,\n      children = _ref.children,\n      PopoverProps = _ref.PopoverProps,\n      onDismiss = _ref.onDismiss,\n      DateInputProps = _ref.DateInputProps,\n      _ref$KeyboardDateInpu = _ref.KeyboardDateInputComponent,\n      KeyboardDateInputComponent = _ref$KeyboardDateInpu === void 0 ? KeyboardDateInput$1 : _ref$KeyboardDateInpu;\n  var ref = useRef(null);\n  var classes = useStyles$1();\n  return createElement(WrapperVariantContext.Provider, {\n    value: \"desktop\"\n  }, createElement(KeyboardDateInputComponent, _extends({}, DateInputProps, {\n    containerRef: ref\n  })), createElement(Popover, _extends({\n    role: \"dialog\",\n    open: open,\n    onClose: onDismiss,\n    anchorEl: ref.current,\n    classes: {\n      paper: classes.popover\n    },\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    }\n  }, PopoverProps), children));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? DesktopWrapper.propTypes = {\n  onOpen: func,\n  onClose: func,\n  PopoverProps: object\n} : void 0;\nvar useStyles$2 = makeStyles(function (theme) {\n  return {\n    popper: {\n      zIndex: theme.zIndex.modal\n    },\n    paper: {\n      transformOrigin: 'top center',\n      '&:focus': _defineProperty({\n        outline: 'auto'\n      }, IS_TOUCH_DEVICE_MEDIA, {\n        outline: 0\n      })\n    },\n    topTransition: {\n      transformOrigin: 'bottom center'\n    }\n  };\n});\n\nvar DesktopPopperWrapper = function DesktopPopperWrapper(_ref) {\n  var open = _ref.open,\n      children = _ref.children,\n      PopperProps = _ref.PopperProps,\n      onDismiss = _ref.onDismiss,\n      DateInputProps = _ref.DateInputProps,\n      _ref$TransitionCompon = _ref.TransitionComponent,\n      TransitionComponent = _ref$TransitionCompon === void 0 ? Grow : _ref$TransitionCompon,\n      _ref$KeyboardDateInpu = _ref.KeyboardDateInputComponent,\n      KeyboardDateInputComponent = _ref$KeyboardDateInpu === void 0 ? KeyboardDateInput$1 : _ref$KeyboardDateInpu;\n  var classes = useStyles$2();\n  var inputRef = useRef(null);\n  var popperRef = useRef(null);\n  useGlobalKeyDown(open, _defineProperty({}, keycode.Esc, onDismiss));\n\n  var handleBlur = function handleBlur() {\n    executeInTheNextEventLoopTick(function () {\n      var _inputRef$current, _popperRef$current;\n\n      if (((_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.contains(document.activeElement)) || ((_popperRef$current = popperRef.current) === null || _popperRef$current === void 0 ? void 0 : _popperRef$current.contains(document.activeElement))) {\n        return;\n      }\n\n      onDismiss();\n    });\n  };\n\n  return createElement(WrapperVariantContext.Provider, {\n    value: \"desktop\"\n  }, createElement(KeyboardDateInputComponent, _extends({}, DateInputProps, {\n    containerRef: inputRef,\n    onBlur: handleBlur\n  })), createElement(Popper, _extends({\n    transition: true,\n    placement: \"bottom\",\n    open: open,\n    anchorEl: inputRef.current\n  }, PopperProps, {\n    className: clsx(classes.popper, PopperProps === null || PopperProps === void 0 ? void 0 : PopperProps.className)\n  }), function (_ref2) {\n    var TransitionProps = _ref2.TransitionProps,\n        placement = _ref2.placement;\n    return createElement(TrapFocus, {\n      open: open,\n      disableAutoFocus: true,\n      disableEnforceFocus: true,\n      isEnabled: function isEnabled() {\n        return true;\n      },\n      getDoc: function getDoc() {\n        var _ref3, _popperRef$current2;\n\n        return (_ref3 = (_popperRef$current2 = popperRef.current) === null || _popperRef$current2 === void 0 ? void 0 : _popperRef$current2.ownerDocument) !== null && _ref3 !== void 0 ? _ref3 : document;\n      }\n    }, createElement(TransitionComponent, _extends({}, TransitionProps, {\n      timeout: 350\n    }), createElement(Paper, {\n      ref: popperRef,\n      onBlur: handleBlur,\n      tabIndex: -1,\n      elevation: 8,\n      className: clsx(classes.paper, placement === 'top' && classes.topTransition)\n    }, children)));\n  }));\n};\n\nvar makeResponsiveWrapper = function makeResponsiveWrapper(DesktopWrapperComponent, MobileWrapperComponent) {\n  var ResponsiveWrapper = function ResponsiveWrapper(_ref) {\n    var _ref$desktopModeMedia = _ref.desktopModeMediaQuery,\n        desktopModeMediaQuery = _ref$desktopModeMedia === void 0 ? IS_TOUCH_DEVICE_MEDIA : _ref$desktopModeMedia,\n        okLabel = _ref.okLabel,\n        cancelLabel = _ref.cancelLabel,\n        clearLabel = _ref.clearLabel,\n        todayLabel = _ref.todayLabel,\n        showTodayButton = _ref.showTodayButton,\n        clearable = _ref.clearable,\n        DialogProps = _ref.DialogProps,\n        PopoverProps = _ref.PopoverProps,\n        PopperProps = _ref.PopperProps,\n        TransitionComponent = _ref.TransitionComponent,\n        displayStaticWrapperAs = _ref.displayStaticWrapperAs,\n        other = _objectWithoutProperties(_ref, [\"desktopModeMediaQuery\", \"okLabel\", \"cancelLabel\", \"clearLabel\", \"todayLabel\", \"showTodayButton\", \"clearable\", \"DialogProps\", \"PopoverProps\", \"PopperProps\", \"TransitionComponent\", \"displayStaticWrapperAs\"]);\n\n    var isDesktop = useMediaQuery(desktopModeMediaQuery);\n    return isDesktop ? createElement(DesktopWrapperComponent, _extends({\n      PopperProps: PopperProps,\n      TransitionComponent: TransitionComponent,\n      PopoverProps: PopoverProps\n    }, other)) : createElement(MobileWrapperComponent, _extends({\n      okLabel: okLabel,\n      cancelLabel: cancelLabel,\n      clearLabel: clearLabel,\n      todayLabel: todayLabel,\n      showTodayButton: showTodayButton,\n      clearable: clearable,\n      DialogProps: DialogProps\n    }, other));\n  };\n\n  return ResponsiveWrapper;\n};\n\nvar ResponsiveWrapper = makeResponsiveWrapper(DesktopWrapper, MobileWrapper);\nvar ResponsivePopperWrapper = makeResponsiveWrapper(DesktopPopperWrapper, MobileWrapper);\nvar useStyles$3 = makeStyles(function (theme) {\n  return {\n    staticWrapperRoot: {\n      overflow: 'hidden',\n      minWidth: DIALOG_WIDTH,\n      display: 'flex',\n      flexDirection: 'column',\n      backgroundColor: theme.palette.background.paper\n    }\n  };\n}, {\n  name: 'MuiPickersStaticWrapper'\n});\n\nvar StaticWrapper = function StaticWrapper(_ref) {\n  var _ref$displayStaticWra = _ref.displayStaticWrapperAs,\n      displayStaticWrapperAs = _ref$displayStaticWra === void 0 ? 'static' : _ref$displayStaticWra,\n      children = _ref.children;\n  var classes = useStyles$3();\n  return createElement(IsStaticVariantContext.Provider, {\n    value: true\n  }, createElement(WrapperVariantContext.Provider, {\n    value: displayStaticWrapperAs\n  }, createElement(\"div\", {\n    className: classes.staticWrapperRoot,\n    children: children\n  })));\n};\n\nvar defaultIsSameError = function defaultIsSameError(a, b) {\n  return a === b;\n};\n\nfunction makeValidationHook(validateFn) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      defaultValidationError = _ref.defaultValidationError,\n      _ref$isSameError = _ref.isSameError,\n      isSameError = _ref$isSameError === void 0 ? defaultIsSameError : _ref$isSameError;\n\n  return function (value, props) {\n    var utils = useUtils();\n    var previousValidationErrorRef = useRef(defaultValidationError || null);\n    var validationError = validateFn(utils, value, props);\n    useEffect(function () {\n      if (props.onError && !isSameError(validationError, previousValidationErrorRef.current)) {\n        props.onError(validationError, value);\n      }\n\n      previousValidationErrorRef.current = validationError;\n    }, [previousValidationErrorRef, props, validationError, value]);\n    return validationError;\n  };\n}\n\nfunction withDateAdapterProp(Component) {\n  return function (_ref) {\n    var dateAdapter = _ref.dateAdapter,\n        other = _objectWithoutProperties(_ref, [\"dateAdapter\"]);\n\n    if (dateAdapter) {\n      return createElement(MuiPickersAdapterContext.Provider, {\n        value: dateAdapter\n      }, createElement(Component, other));\n    }\n\n    return createElement(Component, other);\n  };\n}\n/** Creates a component that rendering modal/popover/nothing and spreading props down to text field */\n\n\nfunction makeWrapperComponent(Wrapper, _ref) {\n  var KeyboardDateInputComponent = _ref.KeyboardDateInputComponent,\n      PureDateInputComponent = _ref.PureDateInputComponent;\n\n  function WrapperComponent(props) {\n    var open = props.open,\n        value = props.value,\n        autoOk = props.autoOk,\n        inputFormat = props.inputFormat,\n        defaultHighlight = props.defaultHighlight,\n        onChange = props.onChange,\n        children = props.children,\n        clearable = props.clearable,\n        clearLabel = props.clearLabel,\n        DialogProps = props.DialogProps,\n        PopoverProps = props.PopoverProps,\n        okLabel = props.okLabel,\n        cancelLabel = props.cancelLabel,\n        todayLabel = props.todayLabel,\n        DateInputProps = props.DateInputProps,\n        wrapperProps = props.wrapperProps,\n        wider = props.wider,\n        showTabs = props.showTabs,\n        onAccept = props.onAccept,\n        onClose = props.onClose,\n        onOpen = props.onOpen,\n        displayStaticWrapperAs = props.displayStaticWrapperAs,\n        restPropsForTextField = _objectWithoutProperties(props, [\"open\", \"value\", \"autoOk\", \"inputFormat\", \"defaultHighlight\", \"onChange\", \"children\", \"clearable\", \"clearLabel\", \"DialogProps\", \"PopoverProps\", \"okLabel\", \"cancelLabel\", \"todayLabel\", \"DateInputProps\", \"wrapperProps\", \"wider\", \"showTabs\", \"onAccept\", \"onClose\", \"onOpen\", \"displayStaticWrapperAs\"]);\n\n    var WrapperComponent = Wrapper;\n    return React__default.createElement(WrapperComponent, _extends({\n      clearable: clearable,\n      clearLabel: clearLabel,\n      DialogProps: DialogProps,\n      okLabel: okLabel,\n      todayLabel: todayLabel,\n      cancelLabel: cancelLabel,\n      DateInputProps: DateInputProps // @ts-ignore\n      ,\n      KeyboardDateInputComponent: KeyboardDateInputComponent // @ts-ignore\n      ,\n      PureDateInputComponent: PureDateInputComponent,\n      wider: wider,\n      showTabs: showTabs,\n      displayStaticWrapperAs: displayStaticWrapperAs\n    }, wrapperProps, restPropsForTextField), children);\n  }\n\n  return WrapperComponent;\n}\n\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys$1(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$1(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction makePickerWithStateAndWrapper(Wrapper, _ref) {\n  var useInterceptProps = _ref.useInterceptProps,\n      useValidation = _ref.useValidation,\n      DefaultToolbarComponent = _ref.DefaultToolbarComponent;\n  var PickerWrapper = makeWrapperComponent(Wrapper, {\n    KeyboardDateInputComponent: KeyboardDateInput$1,\n    PureDateInputComponent: PureDateInput\n  });\n\n  function PickerWithState(__props) {\n    var utils = useUtils();\n    var allProps = useInterceptProps(__props);\n    var validationError = useValidation(allProps.value, allProps) !== null;\n\n    var _usePickerState = usePickerState(allProps, {\n      emptyValue: null,\n      parseInput: parsePickerInputValue,\n      areValuesEqual: function areValuesEqual(a, b) {\n        return utils.isEqual(a, b);\n      }\n    }),\n        pickerProps = _usePickerState.pickerProps,\n        inputProps = _usePickerState.inputProps,\n        wrapperProps = _usePickerState.wrapperProps; // Note that we are passing down all the value without spread.\n    // It saves us >1kb gzip and make any prop available automatically on any level down.\n\n\n    var value = allProps.value,\n        onChange = allProps.onChange,\n        other = _objectWithoutProperties(allProps, [\"value\", \"onChange\"]);\n\n    var DateInputProps = _objectSpread$1({}, inputProps, {}, other, {\n      validationError: validationError\n    });\n\n    return createElement(PickerWrapper, _extends({\n      DateInputProps: DateInputProps,\n      wrapperProps: wrapperProps\n    }, other), createElement(Picker, _extends({}, pickerProps, {\n      toolbarTitle: allProps.label || allProps.toolbarTitle,\n      DateInputProps: DateInputProps,\n      ToolbarComponent: other.ToolbarComponent || DefaultToolbarComponent\n    }, other)));\n  }\n\n  var FinalPickerComponent = withDateAdapterProp(PickerWithState);\n  return forwardRef(function (props, ref) {\n    return createElement(FinalPickerComponent, _extends({}, props, {\n      forwardedRef: ref\n    }));\n  });\n}\n\nexport { DesktopWrapper as D, MobileWrapper as M, ResponsiveWrapper as R, StaticWrapper as S, makePickerWithStateAndWrapper as a, makeWrapperComponent as b, ResponsivePopperWrapper as c, DesktopPopperWrapper as d, makeValidationHook as m };","map":{"version":3,"sources":["../src/_shared/ModalDialog.tsx","../src/_shared/PureDateInput.tsx","../src/wrappers/MobileWrapper.tsx","../src/wrappers/DesktopWrapper.tsx","../src/wrappers/DesktopPopperWrapper.tsx","../src/wrappers/ResponsiveWrapper.tsx","../src/wrappers/StaticWrapper.tsx","../src/_shared/hooks/useValidation.ts","../src/_shared/withDateAdapterProp.tsx","../src/wrappers/makeWrapperComponent.tsx","../src/Picker/makePickerWithState.tsx"],"names":["useStyles","makeStyles","dialogRoot","minWidth","DIALOG_WIDTH","dialogRootWider","DIALOG_WIDTH_WIDER","dialogContainer","outline","dialog","padding","withAdditionalAction","justifyContent","marginRight","name","ModalDialog","children","onAccept","onDismiss","onClear","onSetToday","okLabel","cancelLabel","clearLabel","todayLabel","clearable","showTodayButton","showTabs","wider","other","classes","container","paper","clsx","React.createElement","PureDateInput","inputFormat","rawValue","validationError","InputProps","openPicker","onOpen","renderInput","forwardedRef","containerRef","getOpenDialogAriaText","getTextFieldAriaText","disabled","label","TextFieldProps","utils","useUtils","PureDateInputProps","readOnly","inputValue","getDisplayDate","ref","inputRef","error","onClick","value","onKeyDown","onSpaceOrEnter","MobileWrapper","open","DialogProps","DateInputProps","PopoverProps","displayStaticWrapperAs","KeyboardDateInputComponent","PureDateInputComponent","PropTypes","popover","DesktopWrapper","KeyboardDateInput","React","vertical","horizontal","onClose","popper","zIndex","theme","modal","transformOrigin","topTransition","DesktopPopperWrapper","PopperProps","TransitionComponent","Grow","popperRef","useGlobalKeyDown","keycode","handleBlur","executeInTheNextEventLoopTick","document","current","TransitionProps","placement","makeResponsiveWrapper","ResponsiveWrapper","desktopModeMediaQuery","IS_TOUCH_DEVICE_MEDIA","isDesktop","useMediaQuery","ResponsivePopperWrapper","staticWrapperRoot","overflow","display","flexDirection","backgroundColor","StaticWrapper","defaultIsSameError","a","defaultValidationError","isSameError","previousValidationErrorRef","validateFn","props","dateAdapter","autoOk","defaultHighlight","onChange","wrapperProps","restPropsForTextField","WrapperComponent","useInterceptProps","useValidation","DefaultToolbarComponent","PickerWrapper","makeWrapperComponent","allProps","pickerProps","inputProps","usePickerState","emptyValue","parseInput","areValuesEqual","FinalPickerComponent","withDateAdapterProp"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Dialog, { DialogProps } from '@material-ui/core/Dialog';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DIALOG_WIDTH, DIALOG_WIDTH_WIDER } from '../constants/dimensions';\n\nexport interface ModalDialogProps extends DialogProps {\n  onAccept: () => void;\n  onDismiss: () => void;\n  onClear: () => void;\n  onSetToday: () => void;\n  okLabel?: React.ReactNode;\n  cancelLabel?: React.ReactNode;\n  clearLabel?: React.ReactNode;\n  todayLabel?: React.ReactNode;\n  clearable?: boolean;\n  showTodayButton?: boolean;\n  showTabs?: boolean;\n  wider?: boolean;\n}\n\nexport const useStyles = makeStyles(\n  {\n    dialogRoot: {\n      minWidth: DIALOG_WIDTH,\n    },\n    dialogRootWider: {\n      minWidth: DIALOG_WIDTH_WIDER,\n    },\n    dialogContainer: {\n      '&:focus > $dialogRoot': {\n        outline: 'auto',\n        '@media (pointer:coarse)': {\n          outline: 0,\n        },\n      },\n    },\n    dialog: {\n      '&:first-child': {\n        padding: 0,\n      },\n    },\n    withAdditionalAction: {\n      // set justifyContent to default value to fix IE11 layout bug\n      // see https://github.com/mui-org/material-ui-pickers/pull/267\n      justifyContent: 'flex-start',\n\n      '& > *:first-child': {\n        marginRight: 'auto',\n      },\n    },\n  },\n  { name: 'MuiPickersModal' }\n);\n\nexport const ModalDialog: React.FC<ModalDialogProps> = ({\n  children,\n  onAccept,\n  onDismiss,\n  onClear,\n  onSetToday,\n  okLabel,\n  cancelLabel,\n  clearLabel,\n  todayLabel,\n  clearable,\n  showTodayButton,\n  showTabs,\n  wider,\n  ...other\n}) => {\n  const classes = useStyles();\n  return (\n    <Dialog\n      onClose={onDismiss}\n      classes={{\n        container: classes.dialogContainer,\n        paper: clsx(classes.dialogRoot, {\n          [classes.dialogRootWider]: wider,\n        }),\n      }}\n      {...other}\n    >\n      <DialogContent children={children} className={classes.dialog} />\n\n      <DialogActions\n        className={clsx({\n          [classes.withAdditionalAction]: clearable || showTodayButton,\n        })}\n      >\n        {clearable && (\n          <Button data-mui-test=\"clear-action-button\" color=\"primary\" onClick={onClear}>\n            {clearLabel}\n          </Button>\n        )}\n\n        {showTodayButton && (\n          <Button data-mui-test=\"today-action-button\" color=\"primary\" onClick={onSetToday}>\n            {todayLabel}\n          </Button>\n        )}\n\n        {cancelLabel && (\n          <Button color=\"primary\" onClick={onDismiss}>\n            {cancelLabel}\n          </Button>\n        )}\n\n        {okLabel && (\n          <Button color=\"primary\" onClick={onAccept}>\n            {okLabel}\n          </Button>\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nModalDialog.displayName = 'ModalDialog';\n\nexport default ModalDialog;\n","import * as React from 'react';\nimport { onSpaceOrEnter } from '../_helpers/utils';\nimport { ParsableDate } from '../constants/prop-types';\nimport { MaterialUiPickersDate } from '../typings/date';\nimport { TextFieldProps } from '@material-ui/core/TextField';\nimport { IconButtonProps } from '@material-ui/core/IconButton';\nimport { useUtils, MuiPickersAdapter } from './hooks/useUtils';\nimport { InputAdornmentProps } from '@material-ui/core/InputAdornment';\nimport { getDisplayDate, getTextFieldAriaText } from '../_helpers/text-field-helper';\n\nexport type MuiTextFieldProps = TextFieldProps | Omit<TextFieldProps, 'variant'>;\n\nexport interface DateInputProps<TInputValue = ParsableDate, TDateValue = MaterialUiPickersDate> {\n  open: boolean;\n  rawValue: TInputValue;\n  inputFormat: string;\n  onChange: (date: TDateValue, keyboardInputValue?: string) => void;\n  openPicker: () => void;\n  readOnly?: boolean;\n  disabled?: boolean;\n  validationError?: boolean;\n  label?: TextFieldProps['label'];\n  InputProps?: TextFieldProps['InputProps'];\n  TextFieldProps?: Partial<MuiTextFieldProps>;\n  // lib/src/wrappers/DesktopPopperWrapper.tsx:87\n  onBlur?: () => void;\n  // ?? TODO when it will be possible to display \"empty\" date in datepicker use it instead of ignoring invalid inputs\n  ignoreInvalidInputs?: boolean;\n  /**\n   * Render input component. Where `props` – [TextField](https://material-ui.com/api/text-field/#textfield-api) component props\n   * @example ```jsx\n   * renderInput={props => <TextField {...props} />}\n   * ````\n   */\n  renderInput: (props: MuiTextFieldProps) => React.ReactElement;\n  /** Icon displaying for open picker button */\n  openPickerIcon?: React.ReactNode;\n  /**\n   * Custom mask. Can be used to override generate from format. (e.g. __/__/____ __:__ or __/__/____ __:__ _M)\n   */\n  mask?: string;\n  /**\n   *Regular expression to detect \"accepted\" symbols\n   * @default /\\dap/gi\n   */\n  acceptRegex?: RegExp;\n  /**\n   * Props to pass to keyboard input adornment\n   * @type {Partial<InputAdornmentProps>}\n   */\n  InputAdornmentProps?: Partial<InputAdornmentProps>;\n  /**\n   * Props to pass to keyboard adornment button\n   * @type {Partial<IconButtonProps>}\n   */\n  OpenPickerButtonProps?: Partial<IconButtonProps>;\n  /** Custom formatter to be passed into Rifm component */\n  rifmFormatter?: (str: string) => string;\n  /**\n   * Do not render open picker button (renders only text field with validation)\n   * @default false\n   */\n  disableOpenPicker?: boolean;\n  /**\n   * Disable mask on the keyboard, this should be used rarely. Consider passing proper mask for your format\n   * @default false\n   */\n  disableMaskedInput?: boolean;\n  /**\n   * Get aria-label text for control that opens picker dialog. Aria-label text must include selected date.\n   * @default (value, utils) => `Choose date, selected date is ${utils.format(utils.date(value), 'fullDate')}`\n   */\n  getOpenDialogAriaText?: (value: ParsableDate, utils: MuiPickersAdapter) => string;\n}\n\nexport type ExportedDateInputProps<TInputValue, TDateValue> = Omit<\n  DateInputProps<TInputValue, TDateValue>,\n  | 'openPicker'\n  | 'inputValue'\n  | 'onChange'\n  | 'inputFormat'\n  | 'validationError'\n  | 'rawValue'\n  | 'forwardedRef'\n  | 'open'\n  | 'TextFieldProps'\n  | 'onBlur'\n>;\n\nexport interface DateInputRefs {\n  containerRef?: React.Ref<HTMLDivElement>;\n  forwardedRef?: React.Ref<HTMLInputElement>;\n}\n\nexport const PureDateInput: React.FC<DateInputProps & DateInputRefs> = ({\n  inputFormat,\n  rawValue,\n  validationError,\n  InputProps,\n  openPicker: onOpen,\n  renderInput,\n  forwardedRef,\n  containerRef,\n  getOpenDialogAriaText = getTextFieldAriaText,\n  disabled,\n  label,\n  TextFieldProps = {},\n}) => {\n  const utils = useUtils();\n  const PureDateInputProps = React.useMemo(\n    () => ({\n      ...InputProps,\n      readOnly: true,\n    }),\n    [InputProps]\n  );\n\n  const inputValue = getDisplayDate(utils, rawValue, inputFormat);\n\n  return renderInput({\n    label,\n    disabled,\n    ref: containerRef,\n    inputRef: forwardedRef,\n    error: validationError,\n    'aria-label': getOpenDialogAriaText(rawValue, utils),\n    onClick: onOpen,\n    value: inputValue,\n    InputProps: PureDateInputProps,\n    onKeyDown: onSpaceOrEnter(onOpen),\n    ...TextFieldProps,\n  });\n};\n\nPureDateInput.displayName = 'PureDateInput';\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport ModalDialog from '../_shared/ModalDialog';\nimport { WrapperProps } from './Wrapper';\nimport { StaticWrapperProps } from './StaticWrapper';\nimport { PureDateInput } from '../_shared/PureDateInput';\nimport { InnerDesktopWrapperProps } from './DesktopWrapper';\nimport { WrapperVariantContext } from './WrapperVariantContext';\nimport { DialogProps as MuiDialogProps } from '@material-ui/core/Dialog';\n\nexport interface InnerMobileWrapperProps {\n  /**\n   * \"OK\" label message\n   * @default \"OK\"\n   */\n  okLabel?: React.ReactNode;\n  /**\n   * \"CANCEL\" label message\n   * @default \"CANCEL\"\n   */\n  cancelLabel?: React.ReactNode;\n  /**\n   * \"CLEAR\" label message\n   * @default \"CLEAR\"\n   */\n  clearLabel?: React.ReactNode;\n  /**\n   * \"TODAY\" label message\n   * @default \"TODAY\"\n   */\n  todayLabel?: React.ReactNode;\n  /**\n   * If true today button will be displayed. **Note** that clear button has higher priority\n   * @default false\n   */\n  showTodayButton?: boolean;\n  /**\n   * Show clear action in picker dialog\n   * @default false\n   */\n  clearable?: boolean;\n  /**\n   * Props to be passed directly to material-ui Dialog\n   * @type {Partial<MuiDialogProps>}\n   */\n  DialogProps?: Partial<Omit<MuiDialogProps, 'classes'>>;\n  showTabs?: boolean;\n  wider?: boolean;\n}\n\nexport interface MobileWrapperProps\n  extends InnerMobileWrapperProps,\n    WrapperProps,\n    Partial<InnerDesktopWrapperProps & StaticWrapperProps> {}\n\nexport const MobileWrapper: React.FC<MobileWrapperProps> = ({\n  open,\n  children,\n  okLabel,\n  cancelLabel,\n  clearLabel,\n  todayLabel,\n  showTodayButton,\n  clearable,\n  DialogProps,\n  showTabs,\n  wider,\n  DateInputProps,\n  onClear,\n  onAccept,\n  onDismiss,\n  onSetToday,\n  PopoverProps,\n  displayStaticWrapperAs,\n  KeyboardDateInputComponent,\n  PureDateInputComponent = PureDateInput,\n  ...other\n}) => {\n  return (\n    <WrapperVariantContext.Provider value=\"mobile\">\n      <PureDateInputComponent {...other} {...DateInputProps} />\n\n      <ModalDialog\n        wider={wider}\n        showTabs={showTabs}\n        open={open}\n        onClear={onClear}\n        onAccept={onAccept}\n        onDismiss={onDismiss}\n        onSetToday={onSetToday}\n        clearLabel={clearLabel}\n        todayLabel={todayLabel}\n        okLabel={okLabel}\n        cancelLabel={cancelLabel}\n        clearable={clearable}\n        showTodayButton={showTodayButton}\n        children={children}\n        data-mui-test=\"mobile-wrapper-dialog\"\n        {...DialogProps}\n      />\n    </WrapperVariantContext.Provider>\n  );\n};\n\nMobileWrapper.propTypes = {\n  okLabel: PropTypes.node,\n  cancelLabel: PropTypes.node,\n  clearLabel: PropTypes.node,\n  clearable: PropTypes.bool,\n  todayLabel: PropTypes.node,\n  showTodayButton: PropTypes.bool,\n  DialogProps: PropTypes.object,\n} as any;\n\nMobileWrapper.defaultProps = {\n  okLabel: 'OK',\n  cancelLabel: 'Cancel',\n  clearLabel: 'Clear',\n  todayLabel: 'Today',\n  clearable: false,\n  showTodayButton: false,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport KeyboardDateInput from '../_shared/KeyboardDateInput';\nimport Popover, { PopoverProps } from '@material-ui/core/Popover';\nimport { WrapperProps } from './Wrapper';\nimport { StaticWrapperProps } from './StaticWrapper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { InnerMobileWrapperProps } from './MobileWrapper';\nimport { WrapperVariantContext } from './WrapperVariantContext';\nimport { IS_TOUCH_DEVICE_MEDIA } from '../constants/dimensions';\nimport { InnerDesktopPopperWrapperProps } from './DesktopPopperWrapper';\n\nexport interface InnerDesktopWrapperProps {\n  /** Popover props passed to material-ui Popover */\n  PopoverProps?: Partial<PopoverProps>;\n}\n\nexport interface DesktopWrapperProps\n  extends InnerDesktopWrapperProps,\n    WrapperProps,\n    Partial<InnerMobileWrapperProps & InnerDesktopPopperWrapperProps & StaticWrapperProps> {}\n\nconst useStyles = makeStyles({\n  popover: {\n    '&:focus': {\n      outline: 'auto',\n      [IS_TOUCH_DEVICE_MEDIA]: {\n        outline: 0,\n      },\n    },\n  },\n});\n\nexport const DesktopWrapper: React.FC<DesktopWrapperProps> = ({\n  open,\n  children,\n  PopoverProps,\n  onDismiss,\n  DateInputProps,\n  KeyboardDateInputComponent = KeyboardDateInput,\n}) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const classes = useStyles();\n\n  return (\n    <WrapperVariantContext.Provider value=\"desktop\">\n      <KeyboardDateInputComponent {...DateInputProps} containerRef={ref} />\n\n      <Popover\n        role=\"dialog\"\n        open={open}\n        onClose={onDismiss}\n        anchorEl={ref.current}\n        classes={{ paper: classes.popover }}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n        {...PopoverProps}\n      >\n        {children}\n      </Popover>\n    </WrapperVariantContext.Provider>\n  );\n};\n\nDesktopWrapper.propTypes = {\n  onOpen: PropTypes.func,\n  onClose: PropTypes.func,\n  PopoverProps: PropTypes.object,\n} as any;\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\n// @ts-ignore TODO make definitions\nimport TrapFocus from '@material-ui/core/Modal/TrapFocus';\nimport Popper, { PopperProps } from '@material-ui/core/Popper';\nimport { WrapperProps } from './Wrapper';\nimport { StaticWrapperProps } from './StaticWrapper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { InnerMobileWrapperProps } from './MobileWrapper';\nimport { InnerDesktopWrapperProps } from './DesktopWrapper';\nimport { WrapperVariantContext } from './WrapperVariantContext';\nimport { IS_TOUCH_DEVICE_MEDIA } from '../constants/dimensions';\nimport { KeyboardDateInput } from '../_shared/KeyboardDateInput';\nimport { executeInTheNextEventLoopTick } from '../_helpers/utils';\nimport { useGlobalKeyDown, keycode } from '../_shared/hooks/useKeyDown';\nimport { TransitionProps } from '@material-ui/core/transitions/transition';\n\nexport interface InnerDesktopPopperWrapperProps {\n  /** Popper props passed to material-ui [Popper](https://material-ui.com/api/popper/#popper-api) */\n  PopperProps?: Partial<PopperProps>;\n  /** Custom component for [transition](https://material-ui.com/components/transitions/#transitioncomponent-prop)  */\n  TransitionComponent?: React.ComponentType<TransitionProps>;\n}\n\nexport interface DesktopPopperWrapperProps\n  extends InnerDesktopPopperWrapperProps,\n    WrapperProps,\n    Partial<InnerMobileWrapperProps & StaticWrapperProps & InnerDesktopWrapperProps> {}\n\nconst useStyles = makeStyles(theme => ({\n  popper: {\n    zIndex: theme.zIndex.modal,\n  },\n  paper: {\n    transformOrigin: 'top center',\n    '&:focus': {\n      outline: 'auto',\n      [IS_TOUCH_DEVICE_MEDIA]: {\n        outline: 0,\n      },\n    },\n  },\n  topTransition: {\n    transformOrigin: 'bottom center',\n  },\n}));\n\nexport const DesktopPopperWrapper: React.FC<DesktopPopperWrapperProps> = ({\n  open,\n  children,\n  PopperProps,\n  onDismiss,\n  DateInputProps,\n  TransitionComponent = Grow,\n  KeyboardDateInputComponent = KeyboardDateInput,\n}) => {\n  const classes = useStyles();\n  const inputRef = React.useRef<HTMLDivElement>(null);\n  const popperRef = React.useRef<HTMLElement>(null);\n\n  useGlobalKeyDown(open, {\n    [keycode.Esc]: onDismiss,\n  });\n\n  const handleBlur = () => {\n    executeInTheNextEventLoopTick(() => {\n      if (\n        inputRef.current?.contains(document.activeElement) ||\n        popperRef.current?.contains(document.activeElement)\n      ) {\n        return;\n      }\n\n      onDismiss();\n    });\n  };\n\n  return (\n    <WrapperVariantContext.Provider value=\"desktop\">\n      <KeyboardDateInputComponent {...DateInputProps} containerRef={inputRef} onBlur={handleBlur} />\n\n      <Popper\n        transition\n        placement=\"bottom\"\n        open={open}\n        anchorEl={inputRef.current}\n        {...PopperProps}\n        className={clsx(classes.popper, PopperProps?.className)}\n      >\n        {({ TransitionProps, placement }) => (\n          <TrapFocus\n            open={open}\n            disableAutoFocus\n            disableEnforceFocus\n            isEnabled={() => true}\n            getDoc={() => popperRef.current?.ownerDocument ?? document}\n          >\n            <TransitionComponent {...TransitionProps} timeout={350}>\n              <Paper\n                ref={popperRef}\n                onBlur={handleBlur}\n                tabIndex={-1}\n                elevation={8}\n                className={clsx(classes.paper, {\n                  [classes.topTransition]: placement === 'top',\n                })}\n              >\n                {children}\n              </Paper>\n            </TransitionComponent>\n          </TrapFocus>\n        )}\n      </Popper>\n    </WrapperVariantContext.Provider>\n  );\n};\n","import * as React from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { IS_TOUCH_DEVICE_MEDIA } from '../constants/dimensions';\nimport { MobileWrapperProps, MobileWrapper } from './MobileWrapper';\nimport { DesktopWrapperProps, DesktopWrapper } from './DesktopWrapper';\nimport { DesktopPopperWrapperProps, DesktopPopperWrapper } from './DesktopPopperWrapper';\n\nexport interface ResponsiveWrapperProps\n  extends DesktopWrapperProps,\n    DesktopPopperWrapperProps,\n    MobileWrapperProps {\n  /** Css media query when `Mobile` mode will be changed to `Desktop`\n   * @default \"@media (pointer: fine)\"\n   * @example \"@media (min-width: 720px)\" or theme.breakpoints.up(\"sm\")\n   */\n  desktopModeMediaQuery?: string;\n}\n\nexport const makeResponsiveWrapper = (\n  DesktopWrapperComponent: React.FC<DesktopWrapperProps | DesktopPopperWrapperProps>,\n  MobileWrapperComponent: React.FC<MobileWrapperProps>\n) => {\n  const ResponsiveWrapper: React.FC<ResponsiveWrapperProps> = ({\n    desktopModeMediaQuery = IS_TOUCH_DEVICE_MEDIA,\n    okLabel,\n    cancelLabel,\n    clearLabel,\n    todayLabel,\n    showTodayButton,\n    clearable,\n    DialogProps,\n    PopoverProps,\n    PopperProps,\n    TransitionComponent,\n    displayStaticWrapperAs,\n    ...other\n  }) => {\n    const isDesktop = useMediaQuery(desktopModeMediaQuery);\n\n    return isDesktop ? (\n      <DesktopWrapperComponent\n        PopperProps={PopperProps}\n        TransitionComponent={TransitionComponent}\n        PopoverProps={PopoverProps}\n        {...other}\n      />\n    ) : (\n      <MobileWrapperComponent\n        okLabel={okLabel}\n        cancelLabel={cancelLabel}\n        clearLabel={clearLabel}\n        todayLabel={todayLabel}\n        showTodayButton={showTodayButton}\n        clearable={clearable}\n        DialogProps={DialogProps}\n        {...other}\n      />\n    );\n  };\n\n  return ResponsiveWrapper;\n};\n\nexport const ResponsiveWrapper = makeResponsiveWrapper(DesktopWrapper, MobileWrapper);\n\nexport const ResponsivePopperWrapper = makeResponsiveWrapper(DesktopPopperWrapper, MobileWrapper);\n","import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DIALOG_WIDTH } from '../constants/dimensions';\nimport { WrapperVariantContext, IsStaticVariantContext } from './WrapperVariantContext';\n\nconst useStyles = makeStyles(\n  theme => ({\n    staticWrapperRoot: {\n      overflow: 'hidden',\n      minWidth: DIALOG_WIDTH,\n      display: 'flex',\n      flexDirection: 'column',\n      backgroundColor: theme.palette.background.paper,\n    },\n  }),\n  { name: 'MuiPickersStaticWrapper' }\n);\n\nexport interface StaticWrapperProps {\n  /**\n   * Force static wrapper inner components to be rendered in mobile or desktop mode\n   * @default \"static\"\n   */\n  displayStaticWrapperAs?: 'desktop' | 'mobile' | 'static';\n}\n\nexport const StaticWrapper: React.FC<StaticWrapperProps> = ({\n  displayStaticWrapperAs = 'static',\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <IsStaticVariantContext.Provider value={true}>\n      <WrapperVariantContext.Provider value={displayStaticWrapperAs}>\n        <div className={classes.staticWrapperRoot} children={children} />\n      </WrapperVariantContext.Provider>\n    </IsStaticVariantContext.Provider>\n  );\n};\n","import * as React from 'react';\nimport { useUtils, MuiPickersAdapter } from './useUtils';\n\nexport interface ValidationProps<TError, TDateValue> {\n  /**\n   * Callback that fired when input value or new `value` prop validation returns **new** validation error (or value is valid after error).\n   * In case of validation error detected `reason` prop return non-null value and `TextField` must be displayed in `error` state.\n   * This can be used to render appropriate form error.\n   *\n   * [Read the guide](https://next.material-ui-pickers.dev/guides/forms) about form integration and error displaying.\n   * @DateIOType\n   */\n  onError?: (reason: TError, value: TDateValue) => void;\n}\n\nexport interface ValidationHookOptions<TError> {\n  defaultValidationError?: TError;\n  isSameError?: (a: TError, b: TError) => boolean;\n}\n\nconst defaultIsSameError = (a: unknown, b: unknown) => a === b;\n\nexport function makeValidationHook<\n  TError,\n  TDateValue,\n  TProps extends ValidationProps<TError, TDateValue>\n>(\n  validateFn: (utils: MuiPickersAdapter, value: TDateValue, props: TProps) => TError,\n  { defaultValidationError, isSameError = defaultIsSameError }: ValidationHookOptions<TError> = {}\n) {\n  return (value: TDateValue, props: TProps) => {\n    const utils = useUtils();\n    const previousValidationErrorRef = React.useRef<TError>(\n      defaultValidationError || null\n    ) as React.MutableRefObject<TError>;\n\n    const validationError = validateFn(utils, value, props);\n\n    React.useEffect(() => {\n      if (props.onError && !isSameError(validationError, previousValidationErrorRef.current)) {\n        props.onError(validationError, value);\n      }\n\n      previousValidationErrorRef.current = validationError;\n    }, [previousValidationErrorRef, props, validationError, value]);\n\n    return validationError;\n  };\n}\n","import * as React from 'react';\nimport { MuiPickersAdapter } from './hooks/useUtils';\nimport { MuiPickersAdapterContext } from '../LocalizationProvider';\n\nexport interface WithDateAdapterProps {\n  /**\n   * Allows to pass configured date-io adapter directly. More info [here](https://material-ui-pickers.dev/guides/date-adapter-passing)\n   * ```jsx\n   * dateAdapter={new DateFnsAdapter({ locale: ruLocale })}\n   * ```\n   */\n  dateAdapter?: MuiPickersAdapter;\n}\n\nexport function withDateAdapterProp<T>(\n  Component: React.ComponentType<T>\n): React.FC<T & WithDateAdapterProps> {\n  return ({ dateAdapter, ...other }: T & WithDateAdapterProps) => {\n    if (dateAdapter) {\n      return (\n        <MuiPickersAdapterContext.Provider value={dateAdapter}>\n          <Component {...(other as T)} />\n        </MuiPickersAdapterContext.Provider>\n      );\n    }\n    return <Component {...(other as T)} />;\n  };\n}\n","import React from 'react';\nimport { StaticWrapperProps } from './StaticWrapper';\nimport { BasePickerProps } from '../typings/BasePicker';\nimport { DateInputProps } from '../_shared/PureDateInput';\nimport { ResponsiveWrapperProps } from './ResponsiveWrapper';\nimport { OmitInnerWrapperProps, SomeWrapper, WrapperProps, DateInputPropsLike } from './Wrapper';\n\ninterface MakePickerOptions<TInputProps> {\n  PureDateInputComponent?: React.FC<TInputProps>;\n  KeyboardDateInputComponent?: React.FC<TInputProps>;\n}\n\ninterface WithWrapperProps<TInputProps = DateInputProps> {\n  children: React.ReactNode;\n  DateInputProps: TInputProps;\n  wrapperProps: Omit<WrapperProps, 'DateInputProps'>;\n}\n\n/** Creates a component that rendering modal/popover/nothing and spreading props down to text field */\nexport function makeWrapperComponent<\n  TInputProps extends DateInputPropsLike<TInputValue, TDateValue>,\n  TInputValue,\n  TDateValue,\n  TWrapper extends SomeWrapper = any\n>(\n  Wrapper: TWrapper,\n  { KeyboardDateInputComponent, PureDateInputComponent }: MakePickerOptions<TInputProps>\n) {\n  function WrapperComponent(\n    props: Partial<BasePickerProps<TInputValue, TDateValue>> &\n      WithWrapperProps<TInputProps> &\n      Partial<OmitInnerWrapperProps<ResponsiveWrapperProps> & StaticWrapperProps>\n  ) {\n    const {\n      open,\n      value,\n      autoOk,\n      inputFormat,\n      defaultHighlight,\n      onChange,\n      children,\n      clearable,\n      clearLabel,\n      DialogProps,\n      PopoverProps,\n      okLabel,\n      cancelLabel,\n      todayLabel,\n      DateInputProps,\n      wrapperProps,\n      wider,\n      showTabs,\n      onAccept,\n      onClose,\n      onOpen,\n      displayStaticWrapperAs,\n      ...restPropsForTextField\n    } = props;\n\n    const WrapperComponent = Wrapper as SomeWrapper;\n\n    return (\n      <WrapperComponent\n        clearable={clearable}\n        clearLabel={clearLabel}\n        DialogProps={DialogProps}\n        okLabel={okLabel}\n        todayLabel={todayLabel}\n        cancelLabel={cancelLabel}\n        DateInputProps={DateInputProps}\n        // @ts-ignore\n        KeyboardDateInputComponent={KeyboardDateInputComponent}\n        // @ts-ignore\n        PureDateInputComponent={PureDateInputComponent}\n        wider={wider}\n        showTabs={showTabs}\n        displayStaticWrapperAs={displayStaticWrapperAs}\n        {...wrapperProps}\n        {...restPropsForTextField}\n      >\n        {children}\n      </WrapperComponent>\n    );\n  }\n\n  return WrapperComponent;\n}\n","import * as React from 'react';\nimport { useUtils } from '../_shared/hooks/useUtils';\nimport { ParsableDate } from '../constants/prop-types';\nimport { MaterialUiPickersDate } from '../typings/date';\nimport { parsePickerInputValue } from '../_helpers/date-utils';\nimport { KeyboardDateInput } from '../_shared/KeyboardDateInput';\nimport { usePickerState } from '../_shared/hooks/usePickerState';\nimport { ResponsiveWrapper } from '../wrappers/ResponsiveWrapper';\nimport { withDateAdapterProp } from '../_shared/withDateAdapterProp';\nimport { makeWrapperComponent } from '../wrappers/makeWrapperComponent';\nimport { PureDateInput, DateInputProps } from '../_shared/PureDateInput';\nimport { AnyPickerView, AllSharedPickerProps } from './SharedPickerProps';\nimport { SomeWrapper, ExtendWrapper, WrapperProps } from '../wrappers/Wrapper';\nimport { Picker, ToolbarComponentProps, ExportedPickerProps, PickerProps } from './Picker';\n\ntype AllAvailableForOverrideProps = ExportedPickerProps<AnyPickerView>;\n\nexport type AllPickerProps<T, TWrapper extends SomeWrapper = SomeWrapper> = T &\n  AllSharedPickerProps &\n  ExtendWrapper<TWrapper>;\n\nexport interface MakePickerOptions<T extends unknown> {\n  /** Hook that running validation for the `value` and input */\n  useValidation: (value: ParsableDate, props: T) => string | null;\n  /** Intercept props to override or inject default props specifically for picker */\n  useInterceptProps: (props: AllPickerProps<T>) => AllPickerProps<T> & { inputFormat: string };\n  DefaultToolbarComponent: React.ComponentType<ToolbarComponentProps>;\n}\n\nexport function makePickerWithStateAndWrapper<\n  T extends AllAvailableForOverrideProps,\n  TWrapper extends SomeWrapper = typeof ResponsiveWrapper\n>(\n  Wrapper: TWrapper,\n  { useInterceptProps, useValidation, DefaultToolbarComponent }: MakePickerOptions<T>\n) {\n  const PickerWrapper = makeWrapperComponent<DateInputProps, ParsableDate, MaterialUiPickersDate>(\n    Wrapper,\n    {\n      KeyboardDateInputComponent: KeyboardDateInput,\n      PureDateInputComponent: PureDateInput,\n    }\n  );\n\n  function PickerWithState(__props: T & AllSharedPickerProps & ExtendWrapper<TWrapper>) {\n    const utils = useUtils();\n    const allProps = useInterceptProps(__props) as AllPickerProps<T, TWrapper>;\n\n    const validationError = useValidation(allProps.value, allProps) !== null;\n    const { pickerProps, inputProps, wrapperProps } = usePickerState<\n      ParsableDate,\n      MaterialUiPickersDate\n    >(allProps, {\n      emptyValue: null,\n      parseInput: parsePickerInputValue,\n      areValuesEqual: (a, b) => utils.isEqual(a, b),\n    });\n\n    // Note that we are passing down all the value without spread.\n    // It saves us >1kb gzip and make any prop available automatically on any level down.\n    const { value, onChange, ...other } = allProps;\n    const DateInputProps = { ...inputProps, ...other, validationError };\n\n    return (\n      <PickerWrapper\n        DateInputProps={DateInputProps}\n        wrapperProps={wrapperProps}\n        {...((other as unknown) as WrapperProps)}\n      >\n        <Picker\n          {...pickerProps}\n          toolbarTitle={allProps.label || allProps.toolbarTitle}\n          DateInputProps={DateInputProps}\n          ToolbarComponent={other.ToolbarComponent || DefaultToolbarComponent}\n          {...((other as unknown) as PickerProps<any>)}\n        />\n      </PickerWrapper>\n    );\n  }\n\n  const FinalPickerComponent = withDateAdapterProp(PickerWithState);\n  return React.forwardRef<HTMLInputElement, React.ComponentProps<typeof FinalPickerComponent>>(\n    (props, ref) => <FinalPickerComponent {...(props as any)} forwardedRef={ref} />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}