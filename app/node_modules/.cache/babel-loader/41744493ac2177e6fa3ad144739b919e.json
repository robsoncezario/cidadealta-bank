{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\robson\\\\Desktop\\\\cidadealta\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\robson\\\\Desktop\\\\cidadealta\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"C:\\\\Users\\\\robson\\\\Desktop\\\\cidadealta\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\robson\\\\Desktop\\\\cidadealta\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"C:\\\\Users\\\\robson\\\\Desktop\\\\cidadealta\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";import React,{useState}from'react';import{Typography,TextField}from'@material-ui/core';import NumberFormat from'react-number-format';import{useRecoilState}from'recoil';import*as atoms from'../../navigation/atoms';import SubmitButtonWithSelector from'../../components/SubmitButtonWithSelector';import{BankService}from'../../services/service';var styles={container:{width:'100%',height:'65vh',display:'flex',alignItems:'center',justifyContent:'center',flexDirection:'column'},buttonContainer:{width:'100%',display:'flex',alignItems:'center',justifyContent:'center',flexDirection:'column',boxSizing:'border-box',padding:'1vh'},icon:{width:'3vh',height:'3vh'},withDescription:{display:'flex',alignItems:'flex-start',justifyContent:'flex-start',flexDirection:'column'},wrapper:{marginTop:'1vh',width:'30vw'}};function NumberFormatCustom(props){var inputRef=props.inputRef,onChange=props.onChange,other=_objectWithoutProperties(props,[\"inputRef\",\"onChange\"]);return React.createElement(NumberFormat,Object.assign({},other,{getInputRef:inputRef,onValueChange:function onValueChange(values){onChange({target:{name:props.name,value:values.value}});},thousandSeparator:true,isNumericString:true,prefix:\"$\"}));}var TransferScreen=function TransferScreen(){var _useRecoilState=useRecoilState(atoms.navigationAtom),_useRecoilState2=_slicedToArray(_useRecoilState,2),data=_useRecoilState2[0],setAccount=_useRecoilState2[1];var _useState=useState(data.account.bankMoney.toString()),_useState2=_slicedToArray(_useState,2),amount=_useState2[0],setAmount=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),playerId=_useState4[0],setPlayerId=_useState4[1];var isDisabled=!(data.account.bankMoney>=parseInt(amount)&&parseInt(amount)>=1)||!playerId||parseInt(playerId)===data.account.id||parseInt(playerId)>10000||parseInt(playerId)<1;var handleChangePlayerId=function handleChangePlayerId(event){setPlayerId(event.target.value);};var handleOnInput=function handleOnInput(event){event.target.value=(event.target.value||' ').replace(/\\D+/g,'').trim();};var handleChange=function handleChange(event){setAmount(event.target.value);};var handleTransfer=function handleTransfer(){var value=parseInt(amount);setAccount(function(prevState){return _objectSpread({},prevState,{account:_objectSpread({},prevState.account,{},{bankMoney:data.account.bankMoney-value}),isAsyncRequesting:true});});function transfer(){return _transfer.apply(this,arguments);}function _transfer(){_transfer=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return BankService.transfer(data.account.id,parseInt(playerId),value);case 2:result=_context.sent;console.log(result);if(result.status===400){setAccount(function(prevState){return _objectSpread({},prevState,{account:_objectSpread({},prevState.account,{},{bankMoney:data.account.bankMoney}),isAsyncRequesting:false});});}else{setAccount(function(prevState){return _objectSpread({},prevState,{isAsyncRequesting:false});});}case 5:case\"end\":return _context.stop();}}},_callee);}));return _transfer.apply(this,arguments);}transfer();};return React.createElement(\"div\",{style:styles.container},React.createElement(\"div\",{style:styles.buttonContainer},React.createElement(\"div\",{style:styles.withDescription},React.createElement(Typography,{variant:\"subtitle2\",component:\"div\"},\"Para quem gostaria de transferir?\"),React.createElement(TextField,{label:\"ID do personagem\",value:playerId,onChange:handleChangePlayerId,onInput:handleOnInput,autoFocus:true}),React.createElement(Typography,{variant:\"subtitle2\",component:\"div\"},\"Quanto voc\\xEA gostaria de transferir?\"),React.createElement(Typography,{variant:\"body2\",component:\"div\"},\"Voc\\xEA tem \",new Intl.NumberFormat('en-US',{style:'currency',currency:'USD'}).format(data.account.bankMoney),\" dispon\\xEDvel\"),React.createElement(TextField,{label:\"\",value:amount,onChange:handleChange,InputProps:{inputComponent:NumberFormatCustom}}))),React.createElement(\"div\",{style:styles.wrapper},React.createElement(SubmitButtonWithSelector,{label:\"Transferir \\u279D\",isDisabled:isDisabled,onClick:handleTransfer,fullWidth:true})));};export default TransferScreen;","map":{"version":3,"sources":["C:/Users/robson/Desktop/cidadealta/app/src/screens/Transfer/index.tsx"],"names":["React","useState","Typography","TextField","NumberFormat","useRecoilState","atoms","SubmitButtonWithSelector","BankService","styles","container","width","height","display","alignItems","justifyContent","flexDirection","buttonContainer","boxSizing","padding","icon","withDescription","wrapper","marginTop","NumberFormatCustom","props","inputRef","onChange","other","values","target","name","value","TransferScreen","navigationAtom","data","setAccount","account","bankMoney","toString","amount","setAmount","playerId","setPlayerId","isDisabled","parseInt","id","handleChangePlayerId","event","handleOnInput","replace","trim","handleChange","handleTransfer","prevState","isAsyncRequesting","transfer","result","console","log","status","Intl","style","currency","format","inputComponent"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { \r\n  Typography,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport NumberFormat from 'react-number-format';\r\nimport { useRecoilState } from 'recoil';\r\nimport * as atoms from '../../navigation/atoms';\r\nimport SubmitButtonWithSelector from '../../components/SubmitButtonWithSelector';\r\nimport { BankService } from '../../services/service';\r\n\r\nconst styles = {\r\n  container: {\r\n    width: '100%',\r\n    height: '65vh',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column'\r\n  } as React.CSSProperties,\r\n\r\n  buttonContainer: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    boxSizing: 'border-box',\r\n    padding: '1vh'\r\n  } as React.CSSProperties,\r\n\r\n  icon: {\r\n    width: '3vh',\r\n    height: '3vh'\r\n  } as React.CSSProperties,\r\n\r\n  withDescription: {\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start',\r\n    flexDirection: 'column'\r\n  } as React.CSSProperties,\r\n\r\n  wrapper: {\r\n    marginTop: '1vh',\r\n    width: '30vw'\r\n  } as React.CSSProperties\r\n}\r\n\r\ninterface NumberFormatCustomProps {\r\n  inputRef: (instance: NumberFormat | null) => void;\r\n  onChange: (event: { target: { name: string; value: string } }) => void;\r\n  name: string;\r\n}\r\n\r\nfunction NumberFormatCustom(props: NumberFormatCustomProps) {\r\n  const {inputRef, onChange, ...other} = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      isNumericString\r\n      prefix=\"$\"\r\n    />\r\n  );\r\n}\r\n\r\nconst TransferScreen = () => {\r\n  const [data, setAccount] = useRecoilState(atoms.navigationAtom);\r\n  const [amount, setAmount] = useState(data.account.bankMoney.toString());\r\n  const [playerId, setPlayerId] = useState<string | null>(null);\r\n\r\n  const isDisabled = !(data.account.bankMoney >= parseInt(amount) &&   \r\n                     parseInt(amount) >= 1) ||\r\n                     !playerId ||\r\n                     parseInt(playerId) === data.account.id ||\r\n                     (parseInt(playerId as string) > 10000) ||\r\n                     (parseInt(playerId as string) < 1);\r\n\r\n  const handleChangePlayerId = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPlayerId(event.target.value as string);\r\n  };\r\n\r\n  const handleOnInput = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    event.target.value = (event.target.value || ' ').replace(/\\D+/g, '').trim()\r\n  };\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAmount(event.target.value as string);\r\n  };\r\n\r\n  const handleTransfer = () => {\r\n    const value = parseInt(amount);\r\n\r\n    setAccount(prevState => ({ \r\n      ...prevState,\r\n      account: {\r\n        ...prevState.account, \r\n        ...{\r\n          bankMoney: data.account.bankMoney - value\r\n        }\r\n      },\r\n      isAsyncRequesting: true\r\n    }));\r\n\r\n    async function transfer() {\r\n      const result = await BankService.transfer(data.account.id, parseInt(playerId as string), value);\r\n\r\n      console.log(result);\r\n\r\n      if(result.status === 400) {\r\n        setAccount(prevState => ({ \r\n          ...prevState,\r\n          account: {\r\n            ...prevState.account, \r\n            ...{\r\n              bankMoney: data.account.bankMoney\r\n            }\r\n          },\r\n          isAsyncRequesting: false\r\n        }));\r\n      } else {\r\n        setAccount(prevState => ({ \r\n          ...prevState,\r\n          isAsyncRequesting: false\r\n        }));\r\n      }\r\n    }\r\n\r\n    transfer();\r\n  }\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <div style={styles.buttonContainer}>\r\n        <div style={styles.withDescription}>\r\n          <Typography \r\n            variant='subtitle2' \r\n            component='div'>\r\n            Para quem gostaria de transferir?\r\n          </Typography>\r\n\r\n          <TextField\r\n            label=\"ID do personagem\"\r\n            value={playerId}\r\n            onChange={handleChangePlayerId}\r\n            onInput={handleOnInput}\r\n            autoFocus={true}\r\n          />\r\n\r\n          <Typography \r\n            variant='subtitle2' \r\n            component='div'>\r\n            Quanto você gostaria de transferir?\r\n          </Typography>\r\n\r\n          <Typography \r\n            variant='body2' \r\n            component='div'>\r\n            Você tem {new Intl.NumberFormat('en-US', { \r\n              style: 'currency', \r\n              currency: 'USD'\r\n            }).format(data.account.bankMoney)} disponível\r\n          </Typography>\r\n\r\n          <TextField\r\n            label=\"\"\r\n            value={amount}\r\n            onChange={handleChange}\r\n            InputProps={{\r\n              inputComponent: NumberFormatCustom as any,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>  \r\n\r\n      <div style={styles.wrapper}>\r\n        <SubmitButtonWithSelector\r\n          label='Transferir ➝'\r\n          isDisabled={isDisabled}\r\n          onClick={handleTransfer}\r\n          fullWidth={true} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransferScreen;"]},"metadata":{},"sourceType":"module"}