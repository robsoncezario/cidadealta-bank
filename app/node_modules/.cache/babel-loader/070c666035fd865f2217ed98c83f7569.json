{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@material-ui/utils';\nvar useEnhancedEffect = typeof window !== 'undefined' && process.env.NODE_ENV !== 'test' ? React.useLayoutEffect : React.useEffect;\n/**\n * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).\n *\n * This component can be useful in a variety of situations:\n * - Escape hatch for broken dependencies not supporting SSR.\n * - Improve the time-to-first paint on the client by only rendering above the fold.\n * - Reduce the rendering time on the server.\n * - Under too heavy server load, you can turn on service degradation.\n */\n\nfunction NoSsr(props) {\n  var children = props.children,\n      defer = props.defer,\n      fallback = props.fallback;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mountedState = _React$useState2[0],\n      setMountedState = _React$useState2[1];\n\n  useEnhancedEffect(function () {\n    if (!defer) {\n      setMountedState(true);\n    }\n  }, [defer]);\n  React.useEffect(function () {\n    if (defer) {\n      setMountedState(true);\n    }\n  }, [defer]); // We need the Fragment here to force react-docgen to recognise NoSsr as a component.\n\n  return React.createElement(React.Fragment, null, mountedState ? children : fallback);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? NoSsr.propTypes = {\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * If `true`, the component will not only prevent server-side rendering.\n   * It will also defer the rendering of the children into a different screen frame.\n   */\n  defer: PropTypes.bool,\n\n  /**\n   * The fallback content to display.\n   */\n  fallback: PropTypes.node\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  NoSsr['propTypes' + ''] = exactProp(NoSsr.propTypes);\n}\n\nNoSsr.defaultProps = {\n  defer: false,\n  fallback: null\n};\nexport default NoSsr;","map":{"version":3,"sources":["C:/Users/robson/Desktop/cidadealta/cidadealta-app/node_modules/@material-ui/core/esm/NoSsr/NoSsr.js"],"names":["_slicedToArray","React","PropTypes","exactProp","useEnhancedEffect","window","process","env","NODE_ENV","useLayoutEffect","useEffect","NoSsr","props","children","defer","fallback","_React$useState","useState","_React$useState2","mountedState","setMountedState","createElement","Fragment","propTypes","node","isRequired","bool","defaultProps"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,sCAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,IAAIC,iBAAiB,GAAG,OAAOC,MAAP,KAAkB,WAAlB,IAAiCC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAA1D,GAAmEP,KAAK,CAACQ,eAAzE,GAA2FR,KAAK,CAACS,SAAzH;AACA;;;;;;;;;;AAUA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MACIC,KAAK,GAAGF,KAAK,CAACE,KADlB;AAAA,MAEIC,QAAQ,GAAGH,KAAK,CAACG,QAFrB;;AAIA,MAAIC,eAAe,GAAGf,KAAK,CAACgB,QAAN,CAAe,KAAf,CAAtB;AAAA,MACIC,gBAAgB,GAAGlB,cAAc,CAACgB,eAAD,EAAkB,CAAlB,CADrC;AAAA,MAEIG,YAAY,GAAGD,gBAAgB,CAAC,CAAD,CAFnC;AAAA,MAGIE,eAAe,GAAGF,gBAAgB,CAAC,CAAD,CAHtC;;AAKAd,EAAAA,iBAAiB,CAAC,YAAY;AAC5B,QAAI,CAACU,KAAL,EAAY;AACVM,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD;AACF,GAJgB,EAId,CAACN,KAAD,CAJc,CAAjB;AAKAb,EAAAA,KAAK,CAACS,SAAN,CAAgB,YAAY;AAC1B,QAAII,KAAJ,EAAW;AACTM,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD;AACF,GAJD,EAIG,CAACN,KAAD,CAJH,EAfoB,CAmBP;;AAEb,SAAOb,KAAK,CAACoB,aAAN,CAAoBpB,KAAK,CAACqB,QAA1B,EAAoC,IAApC,EAA0CH,YAAY,GAAGN,QAAH,GAAcE,QAApE,CAAP;AACD;;AAEDT,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCG,KAAK,CAACY,SAAN,GAAkB;AACxD;;;AAGAV,EAAAA,QAAQ,EAAEX,SAAS,CAACsB,IAAV,CAAeC,UAJ+B;;AAMxD;;;;AAIAX,EAAAA,KAAK,EAAEZ,SAAS,CAACwB,IAVuC;;AAYxD;;;AAGAX,EAAAA,QAAQ,EAAEb,SAAS,CAACsB;AAfoC,CAA1D,GAgBI,KAAK,CAhBT;;AAkBA,IAAIlB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC;AACAG,EAAAA,KAAK,CAAC,cAAc,EAAf,CAAL,GAA0BR,SAAS,CAACQ,KAAK,CAACY,SAAP,CAAnC;AACD;;AAEDZ,KAAK,CAACgB,YAAN,GAAqB;AACnBb,EAAAA,KAAK,EAAE,KADY;AAEnBC,EAAAA,QAAQ,EAAE;AAFS,CAArB;AAIA,eAAeJ,KAAf","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@material-ui/utils';\nvar useEnhancedEffect = typeof window !== 'undefined' && process.env.NODE_ENV !== 'test' ? React.useLayoutEffect : React.useEffect;\n/**\n * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).\n *\n * This component can be useful in a variety of situations:\n * - Escape hatch for broken dependencies not supporting SSR.\n * - Improve the time-to-first paint on the client by only rendering above the fold.\n * - Reduce the rendering time on the server.\n * - Under too heavy server load, you can turn on service degradation.\n */\n\nfunction NoSsr(props) {\n  var children = props.children,\n      defer = props.defer,\n      fallback = props.fallback;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mountedState = _React$useState2[0],\n      setMountedState = _React$useState2[1];\n\n  useEnhancedEffect(function () {\n    if (!defer) {\n      setMountedState(true);\n    }\n  }, [defer]);\n  React.useEffect(function () {\n    if (defer) {\n      setMountedState(true);\n    }\n  }, [defer]); // We need the Fragment here to force react-docgen to recognise NoSsr as a component.\n\n  return React.createElement(React.Fragment, null, mountedState ? children : fallback);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? NoSsr.propTypes = {\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * If `true`, the component will not only prevent server-side rendering.\n   * It will also defer the rendering of the children into a different screen frame.\n   */\n  defer: PropTypes.bool,\n\n  /**\n   * The fallback content to display.\n   */\n  fallback: PropTypes.node\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  NoSsr['propTypes' + ''] = exactProp(NoSsr.propTypes);\n}\n\nNoSsr.defaultProps = {\n  defer: false,\n  fallback: null\n};\nexport default NoSsr;"]},"metadata":{},"sourceType":"module"}