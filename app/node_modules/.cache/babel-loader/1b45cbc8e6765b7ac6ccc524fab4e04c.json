{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robson\\\\Desktop\\\\cidadealta\\\\cidadealta-app\\\\src\\\\components\\\\ActionButton\\\\index.tsx\";\nimport React, { useState } from 'react';\nimport { Button, Typography, withStyles } from '@material-ui/core';\nimport { useRecoilState } from 'recoil';\nimport * as atoms from '../../bottomNavigation/atoms';\nconst styles = {\n  container: {\n    position: 'relative',\n    width: '100%',\n    height: '10vh',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    boxSizing: 'border-box',\n    padding: '1vh'\n  },\n  icon: {\n    width: '6vh',\n    height: '6vh'\n  },\n  endAligner: {\n    marginTop: 'auto'\n  },\n  dark: {\n    filter: 'brightness(0)'\n  }\n};\nconst TheButton = withStyles({\n  root: {\n    minWidth: '15vh',\n    maxWidth: '15vh',\n    width: '15vh  !important',\n    height: '15vh !important',\n    padding: '0 !important',\n    borderRadius: '50% !important',\n    border: 'none !important',\n    backgroundColor: '#ffe7bb'\n  },\n  label: {\n    color: 'black !important',\n    fontWeight: 'bold',\n    '&:hover': {\n      color: 'black !important'\n    }\n  }\n})(Button);\nconst HoveredButton = withStyles({\n  root: {\n    minWidth: '15vh',\n    maxWidth: '15vh',\n    width: '15vh  !important',\n    height: '15vh !important',\n    padding: '0 !important',\n    borderRadius: '50% !important',\n    border: 'none !important',\n    backgroundColor: 'rgb(255, 178, 33)'\n  }\n})(Button);\n\nconst ActionButton = props => {\n  const [navigation, setNavigation] = useRecoilState(atoms.bottomNavigationAtom);\n  const [isHover, setHover] = useState(false);\n\n  const handleTabIndex = () => {\n    setNavigation(prevState => ({ ...prevState,\n      index: props.index\n    }));\n    setHover(false);\n  };\n\n  const handleOnMouseEnter = () => {\n    setHover(true);\n  };\n\n  const handleOnMouseLeave = () => {\n    setHover(false);\n  };\n\n  return React.createElement(React.Fragment, null, navigation.index === props.index && React.createElement(HoveredButton, {\n    onClick: handleTabIndex,\n    onMouseEnter: handleOnMouseEnter,\n    onMouseLeave: handleOnMouseLeave,\n    variant: \"contained\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: { ...styles.icon,\n      ...styles.dark\n    },\n    src: process.env.PUBLIC_URL + '/media/ui/' + props.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"div\",\n    style: { ...styles.endAligner,\n      ...styles.dark\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, props.name))), navigation.index !== props.index && React.createElement(TheButton, {\n    onClick: handleTabIndex,\n    onMouseEnter: handleOnMouseEnter,\n    onMouseLeave: handleOnMouseLeave,\n    variant: \"contained\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: isHover ? { ...styles.icon,\n      ...styles.dark\n    } : styles.icon,\n    src: process.env.PUBLIC_URL + '/media/ui/' + props.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"div\",\n    style: isHover ? { ...styles.endAligner,\n      ...styles.dark\n    } : styles.endAligner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, props.name))));\n};\n\nexport default ActionButton;","map":{"version":3,"sources":["C:/Users/robson/Desktop/cidadealta/cidadealta-app/src/components/ActionButton/index.tsx"],"names":["React","useState","Button","Typography","withStyles","useRecoilState","atoms","styles","container","position","width","height","display","alignItems","justifyContent","flexDirection","boxSizing","padding","icon","endAligner","marginTop","dark","filter","TheButton","root","minWidth","maxWidth","borderRadius","border","backgroundColor","label","color","fontWeight","HoveredButton","ActionButton","props","navigation","setNavigation","bottomNavigationAtom","isHover","setHover","handleTabIndex","prevState","index","handleOnMouseEnter","handleOnMouseLeave","process","env","PUBLIC_URL","name"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { \r\n  Button,\r\n  Typography,\r\n  withStyles\r\n} from '@material-ui/core';\r\nimport { useRecoilState } from 'recoil';\r\nimport * as atoms from '../../bottomNavigation/atoms';\r\n\r\nconst styles = {\r\n  container: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: '10vh',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    boxSizing: 'border-box',\r\n    padding: '1vh'\r\n  } as React.CSSProperties,\r\n\r\n  icon: {\r\n    width: '6vh',\r\n    height: '6vh'\r\n  } as React.CSSProperties,\r\n\r\n  endAligner: {\r\n    marginTop: 'auto'\r\n  } as React.CSSProperties,\r\n\r\n  dark: {\r\n    filter: 'brightness(0)'\r\n  } as React.CSSProperties\r\n}\r\n\r\nconst TheButton = withStyles({\r\n  root: {\r\n    minWidth: '15vh',\r\n    maxWidth: '15vh',\r\n    width: '15vh  !important',\r\n    height: '15vh !important',\r\n    padding: '0 !important',\r\n    borderRadius: '50% !important',\r\n    border: 'none !important',\r\n    backgroundColor: '#ffe7bb'\r\n  },\r\n\r\n  label: {\r\n    color: 'black !important',\r\n    fontWeight: 'bold',\r\n\r\n    '&:hover': {\r\n      color: 'black !important'\r\n    }\r\n  }\r\n})(Button);\r\n\r\nconst HoveredButton = withStyles({\r\n  root: {\r\n    minWidth: '15vh',\r\n    maxWidth: '15vh',\r\n    width: '15vh  !important',\r\n    height: '15vh !important',\r\n    padding: '0 !important',\r\n    borderRadius: '50% !important',\r\n    border: 'none !important',\r\n    backgroundColor: 'rgb(255, 178, 33)'\r\n  }\r\n})(Button);\r\n\r\nconst ActionButton = (props: any) => {\r\n  const [navigation, setNavigation] = useRecoilState(atoms.bottomNavigationAtom);\r\n  const [isHover, setHover] = useState<boolean>(false);\r\n\r\n  const handleTabIndex = () => {\r\n    setNavigation(prevState => ({ \r\n      ...prevState,\r\n      index: props.index\r\n    })); \r\n    setHover(false);\r\n  };\r\n\r\n  const handleOnMouseEnter = () => {\r\n    setHover(true);\r\n  };\r\n\r\n  const handleOnMouseLeave = () => {\r\n    setHover(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {navigation.index === props.index && (\r\n        <HoveredButton \r\n            onClick={handleTabIndex}\r\n            onMouseEnter={handleOnMouseEnter}\r\n            onMouseLeave={handleOnMouseLeave}\r\n            variant='contained'\r\n            color='primary'>\r\n          <div style={styles.container}>\r\n            <img style={{...styles.icon, ...styles.dark}} \r\n                src={process.env.PUBLIC_URL + '/media/ui/' + props.icon} /> \r\n\r\n            <Typography \r\n              variant='body2' \r\n              component='div'\r\n              style={{...styles.endAligner, ...styles.dark}}>\r\n              {props.name}\r\n            </Typography>\r\n          </div>  \r\n        </HoveredButton>\r\n      )}\r\n\r\n      {navigation.index !== props.index && (\r\n        <TheButton \r\n            onClick={handleTabIndex}\r\n            onMouseEnter={handleOnMouseEnter}\r\n            onMouseLeave={handleOnMouseLeave}\r\n            variant='contained'\r\n            color='primary'>\r\n          <div style={styles.container}>\r\n            <img style={isHover ? {...styles.icon, ...styles.dark} : styles.icon} \r\n                src={process.env.PUBLIC_URL + '/media/ui/' + props.icon} /> \r\n\r\n            <Typography \r\n              variant='body2' \r\n              component='div'\r\n              style={isHover ? {...styles.endAligner, ...styles.dark} : styles.endAligner}>\r\n              {props.name}\r\n            </Typography>\r\n          </div>  \r\n        </TheButton>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ActionButton;"]},"metadata":{},"sourceType":"module"}