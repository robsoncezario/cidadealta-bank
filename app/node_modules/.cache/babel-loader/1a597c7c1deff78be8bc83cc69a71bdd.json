{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\"; // @inheritedComponent Popover\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport Popover from '../Popover';\nimport MenuList from '../MenuList';\nvar RTL_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'right'\n};\nvar LTR_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'left'\n};\nexport var styles = {\n  /* Styles applied to the `Paper` component. */\n  paper: {\n    // specZ: The maximum height of a simple menu should be one or more rows less than the view\n    // height. This ensures a tapable area outside of the simple menu with which to dismiss\n    // the menu.\n    maxHeight: 'calc(100% - 96px)',\n    // Add iOS momentum scrolling.\n    WebkitOverflowScrolling: 'touch'\n  }\n};\nvar Menu = React.forwardRef(function Menu(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      disableAutoFocusItem = props.disableAutoFocusItem,\n      MenuListProps = props.MenuListProps,\n      onClose = props.onClose,\n      onEntering = props.onEntering,\n      open = props.open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      PopoverClasses = props.PopoverClasses,\n      theme = props.theme,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"disableAutoFocusItem\", \"MenuListProps\", \"onClose\", \"onEntering\", \"open\", \"PaperProps\", \"PopoverClasses\", \"theme\"]);\n\n  var menuListActionsRef = React.useRef();\n\n  var getContentAnchorEl = function getContentAnchorEl() {\n    return menuListActionsRef.current.getContentAnchorEl();\n  };\n\n  var handleEntering = function handleEntering(element) {\n    if (menuListActionsRef.current) {\n      // Focus so the scroll computation of the Popover works as expected.\n      if (disableAutoFocusItem !== true) {\n        menuListActionsRef.current.focus();\n      }\n\n      menuListActionsRef.current.adjustStyleForScrollbar(element, theme);\n    }\n\n    if (onEntering) {\n      onEntering(element);\n    }\n  };\n\n  var handleListKeyDown = function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n\n      if (onClose) {\n        onClose(event, 'tabKeyDown');\n      }\n    }\n  };\n\n  return React.createElement(Popover, _extends({\n    getContentAnchorEl: getContentAnchorEl,\n    classes: PopoverClasses,\n    onClose: onClose,\n    onEntering: handleEntering,\n    anchorOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,\n    transformOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,\n    PaperProps: _extends({}, PaperProps, {\n      classes: _extends({}, PaperProps.classes, {\n        root: classes.paper\n      })\n    }),\n    open: open,\n    ref: ref\n  }, other), React.createElement(MenuList, _extends({\n    onKeyDown: handleListKeyDown\n  }, MenuListProps, {\n    actions: menuListActionsRef\n  }), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes = {\n  /**\n   * The DOM element used to set the position of the menu.\n   */\n  anchorEl: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n\n  /**\n   * Menu contents, normally `MenuItem`s.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * If `true`, the selected / first menu item will not be auto focused.\n   */\n  disableAutoFocusItem: PropTypes.bool,\n\n  /**\n   * Properties applied to the [`MenuList`](/api/menu-list/) element.\n   */\n  MenuListProps: PropTypes.object,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback\n   * @param {string} reason Can be:`\"escapeKeyDown\"`, `\"backdropClick\"`, `\"tabKeyDown\"`\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the Menu enters.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the Menu has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the Menu is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired before the Menu exits.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the Menu has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the Menu is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * If `true`, the menu is visible.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * `classes` property applied to the [`Popover`](/api/popover/) element.\n   */\n  PopoverClasses: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  theme: PropTypes.object.isRequired,\n\n  /**\n   * The length of the transition in `ms`, or 'auto'\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  }), PropTypes.oneOf(['auto'])])\n} : void 0;\nMenu.defaultProps = {\n  disableAutoFocusItem: false,\n  transitionDuration: 'auto'\n};\nexport default withStyles(styles, {\n  name: 'MuiMenu',\n  withTheme: true\n})(Menu);","map":{"version":3,"sources":["C:/Users/robson/Desktop/cidadealta/cidadealta-app/node_modules/@material-ui/core/esm/Menu/Menu.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","withStyles","Popover","MenuList","RTL_ORIGIN","vertical","horizontal","LTR_ORIGIN","styles","paper","maxHeight","WebkitOverflowScrolling","Menu","forwardRef","props","ref","children","classes","disableAutoFocusItem","MenuListProps","onClose","onEntering","open","_props$PaperProps","PaperProps","PopoverClasses","theme","other","menuListActionsRef","useRef","getContentAnchorEl","current","handleEntering","element","focus","adjustStyleForScrollbar","handleListKeyDown","event","key","preventDefault","createElement","anchorOrigin","direction","transformOrigin","root","onKeyDown","actions","process","env","NODE_ENV","propTypes","anchorEl","oneOfType","object","func","node","isRequired","bool","onEnter","onEntered","onExit","onExited","onExiting","transitionDuration","number","shape","enter","exit","oneOf","defaultProps","name","withTheme"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n// @inheritedComponent Popover\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport Popover from '../Popover';\nimport MenuList from '../MenuList';\nvar RTL_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'right'\n};\nvar LTR_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'left'\n};\nexport var styles = {\n  /* Styles applied to the `Paper` component. */\n  paper: {\n    // specZ: The maximum height of a simple menu should be one or more rows less than the view\n    // height. This ensures a tapable area outside of the simple menu with which to dismiss\n    // the menu.\n    maxHeight: 'calc(100% - 96px)',\n    // Add iOS momentum scrolling.\n    WebkitOverflowScrolling: 'touch'\n  }\n};\nvar Menu = React.forwardRef(function Menu(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      disableAutoFocusItem = props.disableAutoFocusItem,\n      MenuListProps = props.MenuListProps,\n      onClose = props.onClose,\n      onEntering = props.onEntering,\n      open = props.open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      PopoverClasses = props.PopoverClasses,\n      theme = props.theme,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"disableAutoFocusItem\", \"MenuListProps\", \"onClose\", \"onEntering\", \"open\", \"PaperProps\", \"PopoverClasses\", \"theme\"]);\n\n  var menuListActionsRef = React.useRef();\n\n  var getContentAnchorEl = function getContentAnchorEl() {\n    return menuListActionsRef.current.getContentAnchorEl();\n  };\n\n  var handleEntering = function handleEntering(element) {\n    if (menuListActionsRef.current) {\n      // Focus so the scroll computation of the Popover works as expected.\n      if (disableAutoFocusItem !== true) {\n        menuListActionsRef.current.focus();\n      }\n\n      menuListActionsRef.current.adjustStyleForScrollbar(element, theme);\n    }\n\n    if (onEntering) {\n      onEntering(element);\n    }\n  };\n\n  var handleListKeyDown = function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n\n      if (onClose) {\n        onClose(event, 'tabKeyDown');\n      }\n    }\n  };\n\n  return React.createElement(Popover, _extends({\n    getContentAnchorEl: getContentAnchorEl,\n    classes: PopoverClasses,\n    onClose: onClose,\n    onEntering: handleEntering,\n    anchorOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,\n    transformOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,\n    PaperProps: _extends({}, PaperProps, {\n      classes: _extends({}, PaperProps.classes, {\n        root: classes.paper\n      })\n    }),\n    open: open,\n    ref: ref\n  }, other), React.createElement(MenuList, _extends({\n    onKeyDown: handleListKeyDown\n  }, MenuListProps, {\n    actions: menuListActionsRef\n  }), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes = {\n  /**\n   * The DOM element used to set the position of the menu.\n   */\n  anchorEl: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n\n  /**\n   * Menu contents, normally `MenuItem`s.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * If `true`, the selected / first menu item will not be auto focused.\n   */\n  disableAutoFocusItem: PropTypes.bool,\n\n  /**\n   * Properties applied to the [`MenuList`](/api/menu-list/) element.\n   */\n  MenuListProps: PropTypes.object,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback\n   * @param {string} reason Can be:`\"escapeKeyDown\"`, `\"backdropClick\"`, `\"tabKeyDown\"`\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the Menu enters.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the Menu has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the Menu is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired before the Menu exits.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the Menu has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the Menu is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * If `true`, the menu is visible.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * `classes` property applied to the [`Popover`](/api/popover/) element.\n   */\n  PopoverClasses: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  theme: PropTypes.object.isRequired,\n\n  /**\n   * The length of the transition in `ms`, or 'auto'\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  }), PropTypes.oneOf(['auto'])])\n} : void 0;\nMenu.defaultProps = {\n  disableAutoFocusItem: false,\n  transitionDuration: 'auto'\n};\nexport default withStyles(styles, {\n  name: 'MuiMenu',\n  withTheme: true\n})(Menu);"]},"metadata":{},"sourceType":"module"}