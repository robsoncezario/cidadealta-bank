{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\"; // @inheritedComponent TableCell\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary,\n      fontSize: theme.typography.pxToRem(12),\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      height: 56,\n      minHeight: 56,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n\n    /* Styles applied to the Select component `root` class. */\n    selectRoot: {\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {\n      top: 1\n    },\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = React.forwardRef(function TablePagination(props, ref) {\n  var ActionsComponent = props.ActionsComponent,\n      backIconButtonProps = props.backIconButtonProps,\n      classes = props.classes,\n      colSpanProp = props.colSpan,\n      Component = props.component,\n      count = props.count,\n      labelDisplayedRows = props.labelDisplayedRows,\n      labelRowsPerPage = props.labelRowsPerPage,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      rowsPerPageOptions = props.rowsPerPageOptions,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"classes\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return React.createElement(Component, _extends({\n    className: classes.root,\n    colSpan: colSpan,\n    ref: ref\n  }, other), React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"caption\",\n    className: classes.caption\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && React.createElement(Select, _extends({\n    classes: {\n      root: classes.selectRoot,\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: React.createElement(InputBase, {\n      className: classes.input\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption,\n      value: rowsPerPageOption\n    }, rowsPerPageOption);\n  })), React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"caption\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: Math.min(count, (page + 1) * rowsPerPage),\n    count: count,\n    page: page\n  })), React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: backIconButtonProps,\n    count: count,\n    nextIconButtonProps: nextIconButtonProps,\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a DOM element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Properties applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label.\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label. Invoked with a `{ from, to, count, page }`\n   * object.\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Properties applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback\n   * @param {number} page The page selected\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: the page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Properties applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nTablePagination.defaultProps = {\n  ActionsComponent: TablePaginationActions,\n  component: TableCell,\n  labelDisplayedRows: function labelDisplayedRows(_ref) {\n    var from = _ref.from,\n        to = _ref.to,\n        count = _ref.count;\n    return \"\".concat(from, \"-\").concat(to, \" of \").concat(count);\n  },\n  labelRowsPerPage: 'Rows per page:',\n  rowsPerPageOptions: [10, 25, 50, 100]\n};\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","map":{"version":3,"sources":["C:/Users/robson/Desktop/cidadealta/cidadealta-app/node_modules/@material-ui/core/esm/TablePagination/TablePagination.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","chainPropTypes","withStyles","InputBase","MenuItem","Select","TableCell","Toolbar","Typography","TablePaginationActions","styles","theme","root","color","palette","text","secondary","fontSize","typography","pxToRem","padding","toolbar","height","minHeight","paddingRight","spacer","flex","caption","flexShrink","selectRoot","marginRight","marginLeft","select","paddingLeft","textAlign","textAlignLast","selectIcon","top","input","menuItem","actions","TablePagination","forwardRef","props","ref","ActionsComponent","backIconButtonProps","classes","colSpanProp","colSpan","Component","component","count","labelDisplayedRows","labelRowsPerPage","nextIconButtonProps","onChangePage","onChangeRowsPerPage","page","rowsPerPage","rowsPerPageOptions","_props$SelectProps","SelectProps","other","MenuItemComponent","native","createElement","className","length","variant","icon","value","onChange","map","rowsPerPageOption","key","from","to","Math","min","process","env","NODE_ENV","propTypes","elementType","object","isRequired","number","func","node","newLastPage","max","ceil","Error","concat","array","defaultProps","_ref","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n// @inheritedComponent TableCell\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary,\n      fontSize: theme.typography.pxToRem(12),\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      height: 56,\n      minHeight: 56,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n\n    /* Styles applied to the Select component `root` class. */\n    selectRoot: {\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {\n      top: 1\n    },\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = React.forwardRef(function TablePagination(props, ref) {\n  var ActionsComponent = props.ActionsComponent,\n      backIconButtonProps = props.backIconButtonProps,\n      classes = props.classes,\n      colSpanProp = props.colSpan,\n      Component = props.component,\n      count = props.count,\n      labelDisplayedRows = props.labelDisplayedRows,\n      labelRowsPerPage = props.labelRowsPerPage,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      rowsPerPageOptions = props.rowsPerPageOptions,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"classes\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return React.createElement(Component, _extends({\n    className: classes.root,\n    colSpan: colSpan,\n    ref: ref\n  }, other), React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"caption\",\n    className: classes.caption\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && React.createElement(Select, _extends({\n    classes: {\n      root: classes.selectRoot,\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: React.createElement(InputBase, {\n      className: classes.input\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption,\n      value: rowsPerPageOption\n    }, rowsPerPageOption);\n  })), React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"caption\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: Math.min(count, (page + 1) * rowsPerPage),\n    count: count,\n    page: page\n  })), React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: backIconButtonProps,\n    count: count,\n    nextIconButtonProps: nextIconButtonProps,\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a DOM element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Properties applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label.\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label. Invoked with a `{ from, to, count, page }`\n   * object.\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Properties applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback\n   * @param {number} page The page selected\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: the page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Properties applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nTablePagination.defaultProps = {\n  ActionsComponent: TablePaginationActions,\n  component: TableCell,\n  labelDisplayedRows: function labelDisplayedRows(_ref) {\n    var from = _ref.from,\n        to = _ref.to,\n        count = _ref.count;\n    return \"\".concat(from, \"-\").concat(to, \" of \").concat(count);\n  },\n  labelRowsPerPage: 'Rows per page:',\n  rowsPerPageOptions: [10, 25, 50, 100]\n};\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);"]},"metadata":{},"sourceType":"module"}