{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      disableTypography = props.disableTypography,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : React.createElement(Typography, {\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nDialogTitle.defaultProps = {\n  disableTypography: false\n};\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);","map":{"version":3,"sources":["C:/Users/robson/Desktop/cidadealta/cidadealta-app/node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","withStyles","Typography","styles","root","margin","padding","flex","DialogTitle","forwardRef","props","ref","children","classes","className","disableTypography","other","createElement","variant","process","env","NODE_ENV","propTypes","node","isRequired","object","string","bool","defaultProps","name"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,wBAAP,MAAqC,gDAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAO,IAAIC,MAAM,GAAG;AAClB;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,CADJ;AAEJC,IAAAA,OAAO,EAAE,WAFL;AAGJC,IAAAA,IAAI,EAAE;AAHF;AAFY,CAAb;AAQP,IAAIC,WAAW,GAAGV,KAAK,CAACW,UAAN,CAAiB,SAASD,WAAT,CAAqBE,KAArB,EAA4BC,GAA5B,EAAiC;AAClE,MAAIC,QAAQ,GAAGF,KAAK,CAACE,QAArB;AAAA,MACIC,OAAO,GAAGH,KAAK,CAACG,OADpB;AAAA,MAEIC,SAAS,GAAGJ,KAAK,CAACI,SAFtB;AAAA,MAGIC,iBAAiB,GAAGL,KAAK,CAACK,iBAH9B;AAAA,MAIIC,KAAK,GAAGnB,wBAAwB,CAACa,KAAD,EAAQ,CAAC,UAAD,EAAa,SAAb,EAAwB,WAAxB,EAAqC,mBAArC,CAAR,CAJpC;;AAMA,SAAOZ,KAAK,CAACmB,aAAN,CAAoB,KAApB,EAA2BrB,QAAQ,CAAC;AACzCkB,IAAAA,SAAS,EAAEd,IAAI,CAACa,OAAO,CAACT,IAAT,EAAeU,SAAf,CAD0B;AAEzCH,IAAAA,GAAG,EAAEA;AAFoC,GAAD,EAGvCK,KAHuC,CAAnC,EAGID,iBAAiB,GAAGH,QAAH,GAAcd,KAAK,CAACmB,aAAN,CAAoBf,UAApB,EAAgC;AACxEgB,IAAAA,OAAO,EAAE;AAD+D,GAAhC,EAEvCN,QAFuC,CAHnC,CAAP;AAMD,CAbiB,CAAlB;AAcAO,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCb,WAAW,CAACc,SAAZ,GAAwB;AAC9D;;;AAGAV,EAAAA,QAAQ,EAAEb,SAAS,CAACwB,IAAV,CAAeC,UAJqC;;AAM9D;;;;AAIAX,EAAAA,OAAO,EAAEd,SAAS,CAAC0B,MAAV,CAAiBD,UAVoC;;AAY9D;;;AAGAV,EAAAA,SAAS,EAAEf,SAAS,CAAC2B,MAfyC;;AAiB9D;;;;AAIAX,EAAAA,iBAAiB,EAAEhB,SAAS,CAAC4B;AArBiC,CAAhE,GAsBI,KAAK,CAtBT;AAuBAnB,WAAW,CAACoB,YAAZ,GAA2B;AACzBb,EAAAA,iBAAiB,EAAE;AADM,CAA3B;AAGA,eAAed,UAAU,CAACE,MAAD,EAAS;AAChC0B,EAAAA,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZrB,WAFY,CAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      disableTypography = props.disableTypography,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : React.createElement(Typography, {\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nDialogTitle.defaultProps = {\n  disableTypography: false\n};\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);"]},"metadata":{},"sourceType":"module"}