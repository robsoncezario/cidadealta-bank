{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\n/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport warning from 'warning';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport withFormControlContext from '../FormControl/withFormControlContext';\nimport withStyles from '../styles/withStyles';\nimport { setRef } from '../utils/reactHelpers';\nimport withForwardedRef from '../utils/withForwardedRef';\nimport Textarea from './Textarea';\nimport { isFilled } from './utils';\nexport var styles = function styles(theme) {\n  var light = theme.palette.type === 'light';\n  var placeholder = {\n    color: 'currentColor',\n    opacity: light ? 0.42 : 0.5,\n    transition: theme.transitions.create('opacity', {\n      duration: theme.transitions.duration.shorter\n    })\n  };\n  var placeholderHidden = {\n    opacity: '0 !important'\n  };\n  var placeholderVisible = {\n    opacity: light ? 0.42 : 0.5\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      // Mimics the default input display property used by browsers for an input.\n      fontFamily: theme.typography.fontFamily,\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(16),\n      lineHeight: '1.1875em',\n      // Reset (19px), match the native input line-height\n      boxSizing: 'border-box',\n      // Prevent padding issue with fullWidth.\n      cursor: 'text',\n      display: 'inline-flex',\n      alignItems: 'center',\n      '&$disabled': {\n        color: theme.palette.text.disabled,\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if the component is a descendant of `FormControl`. */\n    formControl: {},\n\n    /* Styles applied to the root element if the component is focused. */\n    focused: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `startAdornment` is provided. */\n    adornedStart: {},\n\n    /* Styles applied to the root element if `endAdornment` is provided. */\n    adornedEnd: {},\n\n    /* Styles applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    marginDense: {},\n\n    /* Styles applied to the root element if `multiline={true}`. */\n    multiline: {\n      padding: \"\".concat(8 - 2, \"px 0 \").concat(8 - 1, \"px\")\n    },\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the `input` element. */\n    input: {\n      font: 'inherit',\n      color: 'currentColor',\n      padding: \"\".concat(8 - 2, \"px 0 \").concat(8 - 1, \"px\"),\n      border: 0,\n      boxSizing: 'content-box',\n      background: 'none',\n      height: '1.1875em',\n      // Reset (19px), match the native input line-height\n      margin: 0,\n      // Reset for Safari\n      // Remove grey highlight\n      WebkitTapHighlightColor: 'transparent',\n      display: 'block',\n      // Make the flex item shrink with Firefox\n      minWidth: 0,\n      width: '100%',\n      // Fix IE 11 width issue\n      '&::-webkit-input-placeholder': placeholder,\n      '&::-moz-placeholder': placeholder,\n      // Firefox 19+\n      '&:-ms-input-placeholder': placeholder,\n      // IE 11\n      '&::-ms-input-placeholder': placeholder,\n      // Edge\n      '&:focus': {\n        outline: 0\n      },\n      // Reset Firefox invalid required input style\n      '&:invalid': {\n        boxShadow: 'none'\n      },\n      '&::-webkit-search-decoration': {\n        // Remove the padding when type=search.\n        '-webkit-appearance': 'none'\n      },\n      // Show and hide the placeholder logic\n      'label[data-shrink=false] + $formControl &': {\n        '&::-webkit-input-placeholder': placeholderHidden,\n        '&::-moz-placeholder': placeholderHidden,\n        // Firefox 19+\n        '&:-ms-input-placeholder': placeholderHidden,\n        // IE 11\n        '&::-ms-input-placeholder': placeholderHidden,\n        // Edge\n        '&:focus::-webkit-input-placeholder': placeholderVisible,\n        '&:focus::-moz-placeholder': placeholderVisible,\n        // Firefox 19+\n        '&:focus:-ms-input-placeholder': placeholderVisible,\n        // IE 11\n        '&:focus::-ms-input-placeholder': placeholderVisible // Edge\n\n      },\n      '&$disabled': {\n        opacity: 1 // Reset iOS opacity\n\n      }\n    },\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    inputMarginDense: {\n      paddingTop: 4 - 1\n    },\n\n    /* Styles applied to the `input` element if `multiline={true}`. */\n    inputMultiline: {\n      height: 'auto',\n      resize: 'none',\n      padding: 0\n    },\n\n    /* Styles applied to the `input` element if `type=\"search\"`. */\n    inputTypeSearch: {\n      // Improve type search style.\n      '-moz-appearance': 'textfield',\n      '-webkit-appearance': 'textfield'\n    },\n\n    /* Styles applied to the `input` element if `startAdornment` is provided. */\n    inputAdornedStart: {},\n\n    /* Styles applied to the `input` element if `endAdornment` is provided. */\n    inputAdornedEnd: {}\n  };\n};\n/**\n * `InputBase` contains as few styles as possible.\n * It aims to be a simple building block for creating an input.\n * It contains a load of style reset and some state logic.\n */\n\nvar InputBase = /*#__PURE__*/function (_React$Component) {\n  _inherits(InputBase, _React$Component);\n\n  _createClass(InputBase, null, [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      // The blur won't fire when the disabled state is set on a focused input.\n      // We need to book keep the focused state manually.\n      if (props.disabled && state.focused) {\n        return {\n          focused: false\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  function InputBase(props) {\n    var _this;\n\n    _classCallCheck(this, InputBase);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InputBase).call(this, props));\n    _this.state = {\n      focused: false\n    };\n\n    _this.handleFocus = function (event) {\n      var muiFormControl = _this.props.muiFormControl; // Fix a bug with IE 11 where the focus/blur events are triggered\n      // while the input is disabled.\n\n      if (formControlState({\n        props: _this.props,\n        muiFormControl: muiFormControl,\n        states: ['disabled']\n      }).disabled) {\n        event.stopPropagation();\n        return;\n      }\n\n      _this.setState({\n        focused: true\n      });\n\n      if (_this.props.onFocus) {\n        _this.props.onFocus(event);\n      }\n\n      if (muiFormControl && muiFormControl.onFocus) {\n        muiFormControl.onFocus(event);\n      }\n    };\n\n    _this.handleBlur = function (event) {\n      _this.setState({\n        focused: false\n      });\n\n      if (_this.props.onBlur) {\n        _this.props.onBlur(event);\n      }\n\n      var muiFormControl = _this.props.muiFormControl;\n\n      if (muiFormControl && muiFormControl.onBlur) {\n        muiFormControl.onBlur(event);\n      }\n    };\n\n    _this.handleChange = function () {\n      if (!_this.isControlled) {\n        _this.checkDirty(_this.inputRef);\n      } // Perform in the willUpdate\n\n\n      if (_this.props.onChange) {\n        var _this$props;\n\n        (_this$props = _this.props).onChange.apply(_this$props, arguments);\n      }\n    };\n\n    _this.handleRefInput = function (ref) {\n      _this.inputRef = ref;\n      process.env.NODE_ENV !== \"production\" ? warning(!ref || ref instanceof HTMLInputElement || ref.focus, ['Material-UI: you have provided a `inputComponent` to the input component', 'that does not correctly handle the `inputRef` property.', 'Make sure the `inputRef` property is called with a HTMLInputElement.'].join('\\n')) : void 0;\n      var refProp;\n\n      if (_this.props.inputRef) {\n        refProp = _this.props.inputRef;\n      } else if (_this.props.inputProps && _this.props.inputProps.ref) {\n        refProp = _this.props.inputProps.ref;\n      }\n\n      setRef(refProp, ref);\n    };\n\n    _this.handleClick = function (event) {\n      if (_this.inputRef && event.currentTarget === event.target) {\n        _this.inputRef.focus();\n      }\n\n      if (_this.props.onClick) {\n        _this.props.onClick(event);\n      }\n    };\n\n    _this.isControlled = props.value != null;\n    return _this;\n  }\n\n  _createClass(InputBase, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.checkDirty(this.isControlled ? this.props : this.inputRef);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // Book keep the focused state.\n      if (!prevProps.disabled && this.props.disabled) {\n        var muiFormControl = this.props.muiFormControl;\n\n        if (muiFormControl && muiFormControl.onBlur) {\n          muiFormControl.onBlur();\n        }\n      }\n\n      if (this.isControlled) {\n        this.checkDirty(this.props);\n      } // else performed in the onChange\n\n    }\n  }, {\n    key: \"checkDirty\",\n    value: function checkDirty(obj) {\n      var muiFormControl = this.props.muiFormControl;\n\n      if (isFilled(obj)) {\n        if (muiFormControl && muiFormControl.onFilled) {\n          muiFormControl.onFilled();\n        }\n\n        if (this.props.onFilled) {\n          this.props.onFilled();\n        }\n\n        return;\n      }\n\n      if (muiFormControl && muiFormControl.onEmpty) {\n        muiFormControl.onEmpty();\n      }\n\n      if (this.props.onEmpty) {\n        this.props.onEmpty();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _clsx, _clsx2;\n\n      var _this$props2 = this.props,\n          autoComplete = _this$props2.autoComplete,\n          autoFocus = _this$props2.autoFocus,\n          classes = _this$props2.classes,\n          classNameProp = _this$props2.className,\n          defaultValue = _this$props2.defaultValue,\n          disabled = _this$props2.disabled,\n          endAdornment = _this$props2.endAdornment,\n          error = _this$props2.error,\n          fullWidth = _this$props2.fullWidth,\n          id = _this$props2.id,\n          innerRef = _this$props2.innerRef,\n          inputComponent = _this$props2.inputComponent,\n          _this$props2$inputPro = _this$props2.inputProps;\n      _this$props2$inputPro = _this$props2$inputPro === void 0 ? {} : _this$props2$inputPro;\n\n      var inputPropsClassName = _this$props2$inputPro.className,\n          inputPropsProp = _objectWithoutProperties(_this$props2$inputPro, [\"className\"]),\n          inputRef = _this$props2.inputRef,\n          margin = _this$props2.margin,\n          muiFormControl = _this$props2.muiFormControl,\n          multiline = _this$props2.multiline,\n          name = _this$props2.name,\n          onBlur = _this$props2.onBlur,\n          onChange = _this$props2.onChange,\n          onClick = _this$props2.onClick,\n          onEmpty = _this$props2.onEmpty,\n          onFilled = _this$props2.onFilled,\n          onFocus = _this$props2.onFocus,\n          onKeyDown = _this$props2.onKeyDown,\n          onKeyUp = _this$props2.onKeyUp,\n          placeholder = _this$props2.placeholder,\n          readOnly = _this$props2.readOnly,\n          renderPrefix = _this$props2.renderPrefix,\n          rows = _this$props2.rows,\n          rowsMax = _this$props2.rowsMax,\n          rowsMin = _this$props2.rowsMin,\n          startAdornment = _this$props2.startAdornment,\n          type = _this$props2.type,\n          value = _this$props2.value,\n          other = _objectWithoutProperties(_this$props2, [\"autoComplete\", \"autoFocus\", \"classes\", \"className\", \"defaultValue\", \"disabled\", \"endAdornment\", \"error\", \"fullWidth\", \"id\", \"innerRef\", \"inputComponent\", \"inputProps\", \"inputRef\", \"margin\", \"muiFormControl\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onClick\", \"onEmpty\", \"onFilled\", \"onFocus\", \"onKeyDown\", \"onKeyUp\", \"placeholder\", \"readOnly\", \"renderPrefix\", \"rows\", \"rowsMax\", \"rowsMin\", \"startAdornment\", \"type\", \"value\"]);\n\n      var ariaDescribedby = other['aria-describedby'];\n      delete other['aria-describedby'];\n      var fcs = formControlState({\n        props: this.props,\n        muiFormControl: muiFormControl,\n        states: ['disabled', 'error', 'margin', 'required', 'filled']\n      });\n      var focused = muiFormControl ? muiFormControl.focused : this.state.focused;\n      var className = clsx(classes.root, (_clsx = {}, _defineProperty(_clsx, classes.disabled, fcs.disabled), _defineProperty(_clsx, classes.error, fcs.error), _defineProperty(_clsx, classes.fullWidth, fullWidth), _defineProperty(_clsx, classes.focused, focused), _defineProperty(_clsx, classes.formControl, muiFormControl), _defineProperty(_clsx, classes.marginDense, fcs.margin === 'dense'), _defineProperty(_clsx, classes.multiline, multiline), _defineProperty(_clsx, classes.adornedStart, startAdornment), _defineProperty(_clsx, classes.adornedEnd, endAdornment), _clsx), classNameProp);\n      var inputClassName = clsx(classes.input, (_clsx2 = {}, _defineProperty(_clsx2, classes.disabled, fcs.disabled), _defineProperty(_clsx2, classes.inputTypeSearch, type === 'search'), _defineProperty(_clsx2, classes.inputMultiline, multiline), _defineProperty(_clsx2, classes.inputMarginDense, fcs.margin === 'dense'), _defineProperty(_clsx2, classes.inputAdornedStart, startAdornment), _defineProperty(_clsx2, classes.inputAdornedEnd, endAdornment), _clsx2), inputPropsClassName);\n      var InputComponent = inputComponent;\n\n      var inputProps = _extends({}, inputPropsProp, {\n        ref: this.handleRefInput\n      });\n\n      if (typeof InputComponent !== 'string') {\n        inputProps = _extends({\n          // Rename ref to inputRef as we don't know the\n          // provided `inputComponent` structure.\n          inputRef: this.handleRefInput,\n          type: type\n        }, inputProps, {\n          ref: null\n        });\n      } else if (multiline) {\n        if (rows && !rowsMax && !rowsMin) {\n          InputComponent = 'textarea';\n        } else {\n          inputProps = _extends({\n            rowsMax: rowsMax,\n            rowsMin: rowsMin\n          }, inputProps);\n          InputComponent = Textarea;\n        }\n      } else {\n        inputProps = _extends({\n          type: type\n        }, inputProps);\n      }\n\n      return React.createElement(\"div\", _extends({\n        className: className,\n        onClick: this.handleClick,\n        ref: innerRef\n      }, other), renderPrefix ? renderPrefix(_extends({}, fcs, {\n        startAdornment: startAdornment,\n        focused: focused\n      })) : null, startAdornment, React.createElement(FormControlContext.Provider, {\n        value: null\n      }, React.createElement(InputComponent, _extends({\n        \"aria-invalid\": fcs.error,\n        \"aria-describedby\": ariaDescribedby,\n        autoComplete: autoComplete,\n        autoFocus: autoFocus,\n        className: inputClassName,\n        defaultValue: defaultValue,\n        disabled: fcs.disabled,\n        id: id,\n        name: name,\n        onBlur: this.handleBlur,\n        onChange: this.handleChange,\n        onFocus: this.handleFocus,\n        onKeyDown: onKeyDown,\n        onKeyUp: onKeyUp,\n        placeholder: placeholder,\n        readOnly: readOnly,\n        required: fcs.required,\n        rows: rows,\n        value: value\n      }, inputProps))), endAdornment);\n    }\n  }]);\n\n  return InputBase;\n}(React.Component);\n\nprocess.env.NODE_ENV !== \"production\" ? InputBase.propTypes = {\n  /**\n   * This property helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The CSS class name of the wrapper element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default `input` element value, useful when not controlling the component.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * End `InputAdornment` for this component.\n   */\n  endAdornment: PropTypes.node,\n\n  /**\n   * If `true`, the input will indicate an error. This is normally obtained via context from\n   * FormControl.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * @ignore\n   * from `withForwardRef`\n   */\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * The component used for the `input` element.\n   * Either a string to use a DOM element or a component.\n   */\n  inputComponent: PropTypes.elementType,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * This property can be used to pass a ref callback to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense', 'none']),\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /**\n   * If `true`, a textarea element will be rendered.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value`.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEmpty: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFilled: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  renderPrefix: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  rowsMin: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Start `InputAdornment` for this component.\n   */\n  startAdornment: PropTypes.node,\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any\n} : void 0;\nInputBase.defaultProps = {\n  fullWidth: false,\n  inputComponent: 'input',\n  multiline: false,\n  type: 'text'\n};\nexport default withStyles(styles, {\n  name: 'MuiInputBase'\n})(withForwardedRef(withFormControlContext(InputBase)));","map":{"version":3,"sources":["C:/Users/robson/Desktop/cidadealta/cidadealta-app/node_modules/@material-ui/core/esm/InputBase/InputBase.js"],"names":["_extends","_defineProperty","_objectWithoutProperties","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","_createClass","_inherits","React","PropTypes","warning","clsx","formControlState","FormControlContext","withFormControlContext","withStyles","setRef","withForwardedRef","Textarea","isFilled","styles","theme","light","palette","type","placeholder","color","opacity","transition","transitions","create","duration","shorter","placeholderHidden","placeholderVisible","root","fontFamily","typography","text","primary","fontSize","pxToRem","lineHeight","boxSizing","cursor","display","alignItems","disabled","formControl","focused","adornedStart","adornedEnd","error","marginDense","multiline","padding","concat","fullWidth","width","input","font","border","background","height","margin","WebkitTapHighlightColor","minWidth","outline","boxShadow","inputMarginDense","paddingTop","inputMultiline","resize","inputTypeSearch","inputAdornedStart","inputAdornedEnd","InputBase","_React$Component","key","value","getDerivedStateFromProps","props","state","_this","call","handleFocus","event","muiFormControl","states","stopPropagation","setState","onFocus","handleBlur","onBlur","handleChange","isControlled","checkDirty","inputRef","onChange","_this$props","apply","arguments","handleRefInput","ref","process","env","NODE_ENV","HTMLInputElement","focus","join","refProp","inputProps","handleClick","currentTarget","target","onClick","componentDidMount","componentDidUpdate","prevProps","obj","onFilled","onEmpty","render","_clsx","_clsx2","_this$props2","autoComplete","autoFocus","classes","classNameProp","className","defaultValue","endAdornment","id","innerRef","inputComponent","_this$props2$inputPro","inputPropsClassName","inputPropsProp","name","onKeyDown","onKeyUp","readOnly","renderPrefix","rows","rowsMax","rowsMin","startAdornment","other","ariaDescribedby","fcs","inputClassName","InputComponent","createElement","Provider","required","Component","propTypes","string","bool","object","isRequired","any","node","oneOfType","func","elementType","oneOf","number","defaultProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\n\n/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport warning from 'warning';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport withFormControlContext from '../FormControl/withFormControlContext';\nimport withStyles from '../styles/withStyles';\nimport { setRef } from '../utils/reactHelpers';\nimport withForwardedRef from '../utils/withForwardedRef';\nimport Textarea from './Textarea';\nimport { isFilled } from './utils';\nexport var styles = function styles(theme) {\n  var light = theme.palette.type === 'light';\n  var placeholder = {\n    color: 'currentColor',\n    opacity: light ? 0.42 : 0.5,\n    transition: theme.transitions.create('opacity', {\n      duration: theme.transitions.duration.shorter\n    })\n  };\n  var placeholderHidden = {\n    opacity: '0 !important'\n  };\n  var placeholderVisible = {\n    opacity: light ? 0.42 : 0.5\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      // Mimics the default input display property used by browsers for an input.\n      fontFamily: theme.typography.fontFamily,\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(16),\n      lineHeight: '1.1875em',\n      // Reset (19px), match the native input line-height\n      boxSizing: 'border-box',\n      // Prevent padding issue with fullWidth.\n      cursor: 'text',\n      display: 'inline-flex',\n      alignItems: 'center',\n      '&$disabled': {\n        color: theme.palette.text.disabled,\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if the component is a descendant of `FormControl`. */\n    formControl: {},\n\n    /* Styles applied to the root element if the component is focused. */\n    focused: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `startAdornment` is provided. */\n    adornedStart: {},\n\n    /* Styles applied to the root element if `endAdornment` is provided. */\n    adornedEnd: {},\n\n    /* Styles applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    marginDense: {},\n\n    /* Styles applied to the root element if `multiline={true}`. */\n    multiline: {\n      padding: \"\".concat(8 - 2, \"px 0 \").concat(8 - 1, \"px\")\n    },\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the `input` element. */\n    input: {\n      font: 'inherit',\n      color: 'currentColor',\n      padding: \"\".concat(8 - 2, \"px 0 \").concat(8 - 1, \"px\"),\n      border: 0,\n      boxSizing: 'content-box',\n      background: 'none',\n      height: '1.1875em',\n      // Reset (19px), match the native input line-height\n      margin: 0,\n      // Reset for Safari\n      // Remove grey highlight\n      WebkitTapHighlightColor: 'transparent',\n      display: 'block',\n      // Make the flex item shrink with Firefox\n      minWidth: 0,\n      width: '100%',\n      // Fix IE 11 width issue\n      '&::-webkit-input-placeholder': placeholder,\n      '&::-moz-placeholder': placeholder,\n      // Firefox 19+\n      '&:-ms-input-placeholder': placeholder,\n      // IE 11\n      '&::-ms-input-placeholder': placeholder,\n      // Edge\n      '&:focus': {\n        outline: 0\n      },\n      // Reset Firefox invalid required input style\n      '&:invalid': {\n        boxShadow: 'none'\n      },\n      '&::-webkit-search-decoration': {\n        // Remove the padding when type=search.\n        '-webkit-appearance': 'none'\n      },\n      // Show and hide the placeholder logic\n      'label[data-shrink=false] + $formControl &': {\n        '&::-webkit-input-placeholder': placeholderHidden,\n        '&::-moz-placeholder': placeholderHidden,\n        // Firefox 19+\n        '&:-ms-input-placeholder': placeholderHidden,\n        // IE 11\n        '&::-ms-input-placeholder': placeholderHidden,\n        // Edge\n        '&:focus::-webkit-input-placeholder': placeholderVisible,\n        '&:focus::-moz-placeholder': placeholderVisible,\n        // Firefox 19+\n        '&:focus:-ms-input-placeholder': placeholderVisible,\n        // IE 11\n        '&:focus::-ms-input-placeholder': placeholderVisible // Edge\n\n      },\n      '&$disabled': {\n        opacity: 1 // Reset iOS opacity\n\n      }\n    },\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    inputMarginDense: {\n      paddingTop: 4 - 1\n    },\n\n    /* Styles applied to the `input` element if `multiline={true}`. */\n    inputMultiline: {\n      height: 'auto',\n      resize: 'none',\n      padding: 0\n    },\n\n    /* Styles applied to the `input` element if `type=\"search\"`. */\n    inputTypeSearch: {\n      // Improve type search style.\n      '-moz-appearance': 'textfield',\n      '-webkit-appearance': 'textfield'\n    },\n\n    /* Styles applied to the `input` element if `startAdornment` is provided. */\n    inputAdornedStart: {},\n\n    /* Styles applied to the `input` element if `endAdornment` is provided. */\n    inputAdornedEnd: {}\n  };\n};\n/**\n * `InputBase` contains as few styles as possible.\n * It aims to be a simple building block for creating an input.\n * It contains a load of style reset and some state logic.\n */\n\nvar InputBase =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InputBase, _React$Component);\n\n  _createClass(InputBase, null, [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      // The blur won't fire when the disabled state is set on a focused input.\n      // We need to book keep the focused state manually.\n      if (props.disabled && state.focused) {\n        return {\n          focused: false\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  function InputBase(props) {\n    var _this;\n\n    _classCallCheck(this, InputBase);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InputBase).call(this, props));\n    _this.state = {\n      focused: false\n    };\n\n    _this.handleFocus = function (event) {\n      var muiFormControl = _this.props.muiFormControl; // Fix a bug with IE 11 where the focus/blur events are triggered\n      // while the input is disabled.\n\n      if (formControlState({\n        props: _this.props,\n        muiFormControl: muiFormControl,\n        states: ['disabled']\n      }).disabled) {\n        event.stopPropagation();\n        return;\n      }\n\n      _this.setState({\n        focused: true\n      });\n\n      if (_this.props.onFocus) {\n        _this.props.onFocus(event);\n      }\n\n      if (muiFormControl && muiFormControl.onFocus) {\n        muiFormControl.onFocus(event);\n      }\n    };\n\n    _this.handleBlur = function (event) {\n      _this.setState({\n        focused: false\n      });\n\n      if (_this.props.onBlur) {\n        _this.props.onBlur(event);\n      }\n\n      var muiFormControl = _this.props.muiFormControl;\n\n      if (muiFormControl && muiFormControl.onBlur) {\n        muiFormControl.onBlur(event);\n      }\n    };\n\n    _this.handleChange = function () {\n      if (!_this.isControlled) {\n        _this.checkDirty(_this.inputRef);\n      } // Perform in the willUpdate\n\n\n      if (_this.props.onChange) {\n        var _this$props;\n\n        (_this$props = _this.props).onChange.apply(_this$props, arguments);\n      }\n    };\n\n    _this.handleRefInput = function (ref) {\n      _this.inputRef = ref;\n      process.env.NODE_ENV !== \"production\" ? warning(!ref || ref instanceof HTMLInputElement || ref.focus, ['Material-UI: you have provided a `inputComponent` to the input component', 'that does not correctly handle the `inputRef` property.', 'Make sure the `inputRef` property is called with a HTMLInputElement.'].join('\\n')) : void 0;\n      var refProp;\n\n      if (_this.props.inputRef) {\n        refProp = _this.props.inputRef;\n      } else if (_this.props.inputProps && _this.props.inputProps.ref) {\n        refProp = _this.props.inputProps.ref;\n      }\n\n      setRef(refProp, ref);\n    };\n\n    _this.handleClick = function (event) {\n      if (_this.inputRef && event.currentTarget === event.target) {\n        _this.inputRef.focus();\n      }\n\n      if (_this.props.onClick) {\n        _this.props.onClick(event);\n      }\n    };\n\n    _this.isControlled = props.value != null;\n    return _this;\n  }\n\n  _createClass(InputBase, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.checkDirty(this.isControlled ? this.props : this.inputRef);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // Book keep the focused state.\n      if (!prevProps.disabled && this.props.disabled) {\n        var muiFormControl = this.props.muiFormControl;\n\n        if (muiFormControl && muiFormControl.onBlur) {\n          muiFormControl.onBlur();\n        }\n      }\n\n      if (this.isControlled) {\n        this.checkDirty(this.props);\n      } // else performed in the onChange\n\n    }\n  }, {\n    key: \"checkDirty\",\n    value: function checkDirty(obj) {\n      var muiFormControl = this.props.muiFormControl;\n\n      if (isFilled(obj)) {\n        if (muiFormControl && muiFormControl.onFilled) {\n          muiFormControl.onFilled();\n        }\n\n        if (this.props.onFilled) {\n          this.props.onFilled();\n        }\n\n        return;\n      }\n\n      if (muiFormControl && muiFormControl.onEmpty) {\n        muiFormControl.onEmpty();\n      }\n\n      if (this.props.onEmpty) {\n        this.props.onEmpty();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _clsx, _clsx2;\n\n      var _this$props2 = this.props,\n          autoComplete = _this$props2.autoComplete,\n          autoFocus = _this$props2.autoFocus,\n          classes = _this$props2.classes,\n          classNameProp = _this$props2.className,\n          defaultValue = _this$props2.defaultValue,\n          disabled = _this$props2.disabled,\n          endAdornment = _this$props2.endAdornment,\n          error = _this$props2.error,\n          fullWidth = _this$props2.fullWidth,\n          id = _this$props2.id,\n          innerRef = _this$props2.innerRef,\n          inputComponent = _this$props2.inputComponent,\n          _this$props2$inputPro = _this$props2.inputProps;\n      _this$props2$inputPro = _this$props2$inputPro === void 0 ? {} : _this$props2$inputPro;\n\n      var inputPropsClassName = _this$props2$inputPro.className,\n          inputPropsProp = _objectWithoutProperties(_this$props2$inputPro, [\"className\"]),\n          inputRef = _this$props2.inputRef,\n          margin = _this$props2.margin,\n          muiFormControl = _this$props2.muiFormControl,\n          multiline = _this$props2.multiline,\n          name = _this$props2.name,\n          onBlur = _this$props2.onBlur,\n          onChange = _this$props2.onChange,\n          onClick = _this$props2.onClick,\n          onEmpty = _this$props2.onEmpty,\n          onFilled = _this$props2.onFilled,\n          onFocus = _this$props2.onFocus,\n          onKeyDown = _this$props2.onKeyDown,\n          onKeyUp = _this$props2.onKeyUp,\n          placeholder = _this$props2.placeholder,\n          readOnly = _this$props2.readOnly,\n          renderPrefix = _this$props2.renderPrefix,\n          rows = _this$props2.rows,\n          rowsMax = _this$props2.rowsMax,\n          rowsMin = _this$props2.rowsMin,\n          startAdornment = _this$props2.startAdornment,\n          type = _this$props2.type,\n          value = _this$props2.value,\n          other = _objectWithoutProperties(_this$props2, [\"autoComplete\", \"autoFocus\", \"classes\", \"className\", \"defaultValue\", \"disabled\", \"endAdornment\", \"error\", \"fullWidth\", \"id\", \"innerRef\", \"inputComponent\", \"inputProps\", \"inputRef\", \"margin\", \"muiFormControl\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onClick\", \"onEmpty\", \"onFilled\", \"onFocus\", \"onKeyDown\", \"onKeyUp\", \"placeholder\", \"readOnly\", \"renderPrefix\", \"rows\", \"rowsMax\", \"rowsMin\", \"startAdornment\", \"type\", \"value\"]);\n\n      var ariaDescribedby = other['aria-describedby'];\n      delete other['aria-describedby'];\n      var fcs = formControlState({\n        props: this.props,\n        muiFormControl: muiFormControl,\n        states: ['disabled', 'error', 'margin', 'required', 'filled']\n      });\n      var focused = muiFormControl ? muiFormControl.focused : this.state.focused;\n      var className = clsx(classes.root, (_clsx = {}, _defineProperty(_clsx, classes.disabled, fcs.disabled), _defineProperty(_clsx, classes.error, fcs.error), _defineProperty(_clsx, classes.fullWidth, fullWidth), _defineProperty(_clsx, classes.focused, focused), _defineProperty(_clsx, classes.formControl, muiFormControl), _defineProperty(_clsx, classes.marginDense, fcs.margin === 'dense'), _defineProperty(_clsx, classes.multiline, multiline), _defineProperty(_clsx, classes.adornedStart, startAdornment), _defineProperty(_clsx, classes.adornedEnd, endAdornment), _clsx), classNameProp);\n      var inputClassName = clsx(classes.input, (_clsx2 = {}, _defineProperty(_clsx2, classes.disabled, fcs.disabled), _defineProperty(_clsx2, classes.inputTypeSearch, type === 'search'), _defineProperty(_clsx2, classes.inputMultiline, multiline), _defineProperty(_clsx2, classes.inputMarginDense, fcs.margin === 'dense'), _defineProperty(_clsx2, classes.inputAdornedStart, startAdornment), _defineProperty(_clsx2, classes.inputAdornedEnd, endAdornment), _clsx2), inputPropsClassName);\n      var InputComponent = inputComponent;\n\n      var inputProps = _extends({}, inputPropsProp, {\n        ref: this.handleRefInput\n      });\n\n      if (typeof InputComponent !== 'string') {\n        inputProps = _extends({\n          // Rename ref to inputRef as we don't know the\n          // provided `inputComponent` structure.\n          inputRef: this.handleRefInput,\n          type: type\n        }, inputProps, {\n          ref: null\n        });\n      } else if (multiline) {\n        if (rows && !rowsMax && !rowsMin) {\n          InputComponent = 'textarea';\n        } else {\n          inputProps = _extends({\n            rowsMax: rowsMax,\n            rowsMin: rowsMin\n          }, inputProps);\n          InputComponent = Textarea;\n        }\n      } else {\n        inputProps = _extends({\n          type: type\n        }, inputProps);\n      }\n\n      return React.createElement(\"div\", _extends({\n        className: className,\n        onClick: this.handleClick,\n        ref: innerRef\n      }, other), renderPrefix ? renderPrefix(_extends({}, fcs, {\n        startAdornment: startAdornment,\n        focused: focused\n      })) : null, startAdornment, React.createElement(FormControlContext.Provider, {\n        value: null\n      }, React.createElement(InputComponent, _extends({\n        \"aria-invalid\": fcs.error,\n        \"aria-describedby\": ariaDescribedby,\n        autoComplete: autoComplete,\n        autoFocus: autoFocus,\n        className: inputClassName,\n        defaultValue: defaultValue,\n        disabled: fcs.disabled,\n        id: id,\n        name: name,\n        onBlur: this.handleBlur,\n        onChange: this.handleChange,\n        onFocus: this.handleFocus,\n        onKeyDown: onKeyDown,\n        onKeyUp: onKeyUp,\n        placeholder: placeholder,\n        readOnly: readOnly,\n        required: fcs.required,\n        rows: rows,\n        value: value\n      }, inputProps))), endAdornment);\n    }\n  }]);\n\n  return InputBase;\n}(React.Component);\n\nprocess.env.NODE_ENV !== \"production\" ? InputBase.propTypes = {\n  /**\n   * This property helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The CSS class name of the wrapper element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default `input` element value, useful when not controlling the component.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * End `InputAdornment` for this component.\n   */\n  endAdornment: PropTypes.node,\n\n  /**\n   * If `true`, the input will indicate an error. This is normally obtained via context from\n   * FormControl.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * @ignore\n   * from `withForwardRef`\n   */\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * The component used for the `input` element.\n   * Either a string to use a DOM element or a component.\n   */\n  inputComponent: PropTypes.elementType,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * This property can be used to pass a ref callback to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense', 'none']),\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /**\n   * If `true`, a textarea element will be rendered.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value`.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEmpty: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFilled: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  renderPrefix: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  rowsMin: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Start `InputAdornment` for this component.\n   */\n  startAdornment: PropTypes.node,\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any\n} : void 0;\nInputBase.defaultProps = {\n  fullWidth: false,\n  inputComponent: 'input',\n  multiline: false,\n  type: 'text'\n};\nexport default withStyles(styles, {\n  name: 'MuiInputBase'\n})(withForwardedRef(withFormControlContext(InputBase)));"]},"metadata":{},"sourceType":"module"}