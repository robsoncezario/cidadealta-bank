{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\"; // @inheritedComponent ButtonBase\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport unsupportedProp from '../utils/unsupportedProp';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      transition: theme.transitions.create(['color', 'padding-top'], {\n        duration: theme.transitions.duration.short\n      }),\n      padding: '6px 12px 8px',\n      minWidth: 80,\n      maxWidth: 168,\n      color: theme.palette.text.secondary,\n      flex: '1',\n      '&$iconOnly': {\n        paddingTop: 16\n      },\n      '&$selected': {\n        paddingTop: 6,\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the root element if selected. */\n    selected: {},\n\n    /* Styles applied to the root element if `showLabel={false}` and not selected. */\n    iconOnly: {},\n\n    /* Styles applied to the span element that wraps the icon and label. */\n    wrapper: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%',\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the label's span element. */\n    label: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(12),\n      opacity: 1,\n      transition: 'font-size 0.2s, opacity 0.2s',\n      transitionDelay: '0.1s',\n      '&$iconOnly': {\n        opacity: 0,\n        transitionDelay: '0s'\n      },\n      '&$selected': {\n        fontSize: theme.typography.pxToRem(14)\n      }\n    }\n  };\n};\nvar BottomNavigationAction = React.forwardRef(function BottomNavigationAction(props, ref) {\n  var _clsx, _clsx2;\n\n  var classes = props.classes,\n      className = props.className,\n      icon = props.icon,\n      label = props.label,\n      onChange = props.onChange,\n      onClick = props.onClick,\n      selected = props.selected,\n      showLabel = props.showLabel,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"icon\", \"label\", \"onChange\", \"onClick\", \"selected\", \"showLabel\", \"value\"]);\n\n  var handleChange = function handleChange(event) {\n    if (onChange) {\n      onChange(event, value);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return React.createElement(ButtonBase, _extends({\n    ref: ref,\n    className: clsx(classes.root, (_clsx = {}, _defineProperty(_clsx, classes.selected, selected), _defineProperty(_clsx, classes.iconOnly, !showLabel && !selected), _clsx), className),\n    focusRipple: true,\n    onClick: handleChange\n  }, other), React.createElement(\"span\", {\n    className: classes.wrapper\n  }, icon, React.createElement(\"span\", {\n    className: clsx(classes.label, (_clsx2 = {}, _defineProperty(_clsx2, classes.selected, selected), _defineProperty(_clsx2, classes.iconOnly, !showLabel && !selected), _clsx2))\n  }, label)));\n});\nprocess.env.NODE_ENV !== \"production\" ? BottomNavigationAction.propTypes = {\n  /**\n   * This property isn't supported.\n   * Use the `component` property if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon element.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * If `true`, the `BottomNavigationAction` will show its label.\n   * By default, only the selected `BottomNavigationAction`\n   * inside `BottomNavigation` will show its label.\n   */\n  showLabel: PropTypes.bool,\n\n  /**\n   * You can provide your own value. Otherwise, we fallback to the child position index.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBottomNavigationAction'\n})(BottomNavigationAction);","map":{"version":3,"sources":["C:/Users/robson/Desktop/cidadealta/cidadealta-app/node_modules/@material-ui/core/esm/BottomNavigationAction/BottomNavigationAction.js"],"names":["_extends","_defineProperty","_objectWithoutProperties","React","PropTypes","clsx","withStyles","ButtonBase","unsupportedProp","styles","theme","root","transition","transitions","create","duration","short","padding","minWidth","maxWidth","color","palette","text","secondary","flex","paddingTop","primary","main","selected","iconOnly","wrapper","display","alignItems","justifyContent","width","flexDirection","label","fontFamily","typography","fontSize","pxToRem","opacity","transitionDelay","BottomNavigationAction","forwardRef","props","ref","_clsx","_clsx2","classes","className","icon","onChange","onClick","showLabel","value","other","handleChange","event","createElement","focusRipple","process","env","NODE_ENV","propTypes","children","object","isRequired","string","node","func","bool","any","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n// @inheritedComponent ButtonBase\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport unsupportedProp from '../utils/unsupportedProp';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      transition: theme.transitions.create(['color', 'padding-top'], {\n        duration: theme.transitions.duration.short\n      }),\n      padding: '6px 12px 8px',\n      minWidth: 80,\n      maxWidth: 168,\n      color: theme.palette.text.secondary,\n      flex: '1',\n      '&$iconOnly': {\n        paddingTop: 16\n      },\n      '&$selected': {\n        paddingTop: 6,\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the root element if selected. */\n    selected: {},\n\n    /* Styles applied to the root element if `showLabel={false}` and not selected. */\n    iconOnly: {},\n\n    /* Styles applied to the span element that wraps the icon and label. */\n    wrapper: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%',\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the label's span element. */\n    label: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(12),\n      opacity: 1,\n      transition: 'font-size 0.2s, opacity 0.2s',\n      transitionDelay: '0.1s',\n      '&$iconOnly': {\n        opacity: 0,\n        transitionDelay: '0s'\n      },\n      '&$selected': {\n        fontSize: theme.typography.pxToRem(14)\n      }\n    }\n  };\n};\nvar BottomNavigationAction = React.forwardRef(function BottomNavigationAction(props, ref) {\n  var _clsx, _clsx2;\n\n  var classes = props.classes,\n      className = props.className,\n      icon = props.icon,\n      label = props.label,\n      onChange = props.onChange,\n      onClick = props.onClick,\n      selected = props.selected,\n      showLabel = props.showLabel,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"icon\", \"label\", \"onChange\", \"onClick\", \"selected\", \"showLabel\", \"value\"]);\n\n  var handleChange = function handleChange(event) {\n    if (onChange) {\n      onChange(event, value);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return React.createElement(ButtonBase, _extends({\n    ref: ref,\n    className: clsx(classes.root, (_clsx = {}, _defineProperty(_clsx, classes.selected, selected), _defineProperty(_clsx, classes.iconOnly, !showLabel && !selected), _clsx), className),\n    focusRipple: true,\n    onClick: handleChange\n  }, other), React.createElement(\"span\", {\n    className: classes.wrapper\n  }, icon, React.createElement(\"span\", {\n    className: clsx(classes.label, (_clsx2 = {}, _defineProperty(_clsx2, classes.selected, selected), _defineProperty(_clsx2, classes.iconOnly, !showLabel && !selected), _clsx2))\n  }, label)));\n});\nprocess.env.NODE_ENV !== \"production\" ? BottomNavigationAction.propTypes = {\n  /**\n   * This property isn't supported.\n   * Use the `component` property if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon element.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * If `true`, the `BottomNavigationAction` will show its label.\n   * By default, only the selected `BottomNavigationAction`\n   * inside `BottomNavigation` will show its label.\n   */\n  showLabel: PropTypes.bool,\n\n  /**\n   * You can provide your own value. Otherwise, we fallback to the child position index.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBottomNavigationAction'\n})(BottomNavigationAction);"]},"metadata":{},"sourceType":"module"}