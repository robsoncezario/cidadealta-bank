{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\"; // @inheritedComponent Paper\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Paper from '../Paper';\nimport StepConnector from '../StepConnector';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    padding: 24\n  },\n\n  /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n  horizontal: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {\n    flexDirection: 'column'\n  },\n\n  /* Styles applied to the root element if `alternativeLabel={true}`. */\n  alternativeLabel: {\n    alignItems: 'flex-start'\n  }\n};\nvar Stepper = React.forwardRef(function Stepper(props, ref) {\n  var activeStep = props.activeStep,\n      alternativeLabel = props.alternativeLabel,\n      children = props.children,\n      classes = props.classes,\n      classNameProp = props.className,\n      connectorProp = props.connector,\n      nonLinear = props.nonLinear,\n      orientation = props.orientation,\n      other = _objectWithoutProperties(props, [\"activeStep\", \"alternativeLabel\", \"children\", \"classes\", \"className\", \"connector\", \"nonLinear\", \"orientation\"]);\n\n  var className = clsx(classes.root, classes[orientation], _defineProperty({}, classes.alternativeLabel, alternativeLabel), classNameProp);\n  var connector = React.isValidElement(connectorProp) ? React.cloneElement(connectorProp, {\n    orientation: orientation\n  }) : null;\n  var childrenArray = React.Children.toArray(children);\n  var steps = childrenArray.map(function (step, index) {\n    var controlProps = {\n      alternativeLabel: alternativeLabel,\n      connector: connectorProp,\n      last: index + 1 === childrenArray.length,\n      orientation: orientation\n    };\n    var state = {\n      index: index,\n      active: false,\n      completed: false,\n      disabled: false\n    };\n\n    if (activeStep === index) {\n      state.active = true;\n    } else if (!nonLinear && activeStep > index) {\n      state.completed = true;\n    } else if (!nonLinear && activeStep < index) {\n      state.disabled = true;\n    }\n\n    return [!alternativeLabel && connector && index !== 0 && React.cloneElement(connector, _extends({\n      key: index\n    }, state)), React.cloneElement(step, _extends({}, controlProps, state, step.props))];\n  });\n  return React.createElement(Paper, _extends({\n    square: true,\n    elevation: 0,\n    className: className,\n    ref: ref\n  }, other), steps);\n});\nprocess.env.NODE_ENV !== \"production\" ? Stepper.propTypes = {\n  /**\n   * Set the active step (zero based index).\n   */\n  activeStep: PropTypes.number,\n\n  /**\n   * If set to 'true' and orientation is horizontal,\n   * then the step label will be positioned under the icon.\n   */\n  alternativeLabel: PropTypes.bool,\n\n  /**\n   * Two or more `<Step />` components.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A component to be placed between each step.\n   */\n  connector: PropTypes.element,\n\n  /**\n   * If set the `Stepper` will not assist in controlling steps for linear flow.\n   */\n  nonLinear: PropTypes.bool,\n\n  /**\n   * The stepper orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical'])\n} : void 0;\nStepper.defaultProps = {\n  activeStep: 0,\n  alternativeLabel: false,\n  connector: React.createElement(StepConnector, null),\n  nonLinear: false,\n  orientation: 'horizontal'\n};\nexport default withStyles(styles, {\n  name: 'MuiStepper'\n})(Stepper);","map":{"version":3,"sources":["C:/Users/robson/Desktop/cidadealta/cidadealta-app/node_modules/@material-ui/core/esm/Stepper/Stepper.js"],"names":["_extends","_defineProperty","_objectWithoutProperties","React","PropTypes","clsx","withStyles","Paper","StepConnector","styles","root","display","padding","horizontal","flexDirection","alignItems","vertical","alternativeLabel","Stepper","forwardRef","props","ref","activeStep","children","classes","classNameProp","className","connectorProp","connector","nonLinear","orientation","other","isValidElement","cloneElement","childrenArray","Children","toArray","steps","map","step","index","controlProps","last","length","state","active","completed","disabled","key","createElement","square","elevation","process","env","NODE_ENV","propTypes","number","bool","node","isRequired","object","string","element","oneOf","defaultProps","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n// @inheritedComponent Paper\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Paper from '../Paper';\nimport StepConnector from '../StepConnector';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    padding: 24\n  },\n\n  /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n  horizontal: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {\n    flexDirection: 'column'\n  },\n\n  /* Styles applied to the root element if `alternativeLabel={true}`. */\n  alternativeLabel: {\n    alignItems: 'flex-start'\n  }\n};\nvar Stepper = React.forwardRef(function Stepper(props, ref) {\n  var activeStep = props.activeStep,\n      alternativeLabel = props.alternativeLabel,\n      children = props.children,\n      classes = props.classes,\n      classNameProp = props.className,\n      connectorProp = props.connector,\n      nonLinear = props.nonLinear,\n      orientation = props.orientation,\n      other = _objectWithoutProperties(props, [\"activeStep\", \"alternativeLabel\", \"children\", \"classes\", \"className\", \"connector\", \"nonLinear\", \"orientation\"]);\n\n  var className = clsx(classes.root, classes[orientation], _defineProperty({}, classes.alternativeLabel, alternativeLabel), classNameProp);\n  var connector = React.isValidElement(connectorProp) ? React.cloneElement(connectorProp, {\n    orientation: orientation\n  }) : null;\n  var childrenArray = React.Children.toArray(children);\n  var steps = childrenArray.map(function (step, index) {\n    var controlProps = {\n      alternativeLabel: alternativeLabel,\n      connector: connectorProp,\n      last: index + 1 === childrenArray.length,\n      orientation: orientation\n    };\n    var state = {\n      index: index,\n      active: false,\n      completed: false,\n      disabled: false\n    };\n\n    if (activeStep === index) {\n      state.active = true;\n    } else if (!nonLinear && activeStep > index) {\n      state.completed = true;\n    } else if (!nonLinear && activeStep < index) {\n      state.disabled = true;\n    }\n\n    return [!alternativeLabel && connector && index !== 0 && React.cloneElement(connector, _extends({\n      key: index\n    }, state)), React.cloneElement(step, _extends({}, controlProps, state, step.props))];\n  });\n  return React.createElement(Paper, _extends({\n    square: true,\n    elevation: 0,\n    className: className,\n    ref: ref\n  }, other), steps);\n});\nprocess.env.NODE_ENV !== \"production\" ? Stepper.propTypes = {\n  /**\n   * Set the active step (zero based index).\n   */\n  activeStep: PropTypes.number,\n\n  /**\n   * If set to 'true' and orientation is horizontal,\n   * then the step label will be positioned under the icon.\n   */\n  alternativeLabel: PropTypes.bool,\n\n  /**\n   * Two or more `<Step />` components.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A component to be placed between each step.\n   */\n  connector: PropTypes.element,\n\n  /**\n   * If set the `Stepper` will not assist in controlling steps for linear flow.\n   */\n  nonLinear: PropTypes.bool,\n\n  /**\n   * The stepper orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical'])\n} : void 0;\nStepper.defaultProps = {\n  activeStep: 0,\n  alternativeLabel: false,\n  connector: React.createElement(StepConnector, null),\n  nonLinear: false,\n  orientation: 'horizontal'\n};\nexport default withStyles(styles, {\n  name: 'MuiStepper'\n})(Stepper);"]},"metadata":{},"sourceType":"module"}