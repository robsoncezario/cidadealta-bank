{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport warning from 'warning';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport BreadcrumbSeparator from './BreadcrumbSeparator';\nvar styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    // Reset\n    margin: 0 // Reset\n\n  },\n\n  /* Styles applied to the li element. */\n  li: {\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the separator element. */\n  separator: {}\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, React.createElement(BreadcrumbSeparator // eslint-disable-next-line react/no-array-index-key\n      , {\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      Component = props.component,\n      itemsAfterCollapse = props.itemsAfterCollapse,\n      itemsBeforeCollapse = props.itemsBeforeCollapse,\n      maxItems = props.maxItems,\n      separator = props.separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      expanded = _React$useState2[0],\n      setExpanded = _React$useState2[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand() {\n      setExpanded(true);\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, ['Material-UI: you have provided an invalid combination of properties to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} +itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n')) : void 0;\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [React.createElement(BreadcrumbCollapsed, {\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    return React.isValidElement(child);\n  }).map(function (child, index) {\n    return (// eslint-disable-next-line react/no-array-index-key\n      React.createElement(\"li\", {\n        className: classes.li,\n        key: \"child-\".concat(index)\n      }, child)\n    );\n  });\n  return React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * By default, it maps the variant to a good default headline component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first and last will be shown, with an\n   * ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nBreadcrumbs.defaultProps = {\n  component: 'nav',\n  itemsAfterCollapse: 1,\n  itemsBeforeCollapse: 1,\n  maxItems: 8,\n  separator: '/'\n};\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","map":{"version":3,"sources":["C:/Users/robson/Desktop/cidadealta/cidadealta-app/node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js"],"names":["_extends","_toConsumableArray","_slicedToArray","_objectWithoutProperties","React","warning","PropTypes","clsx","withStyles","Typography","BreadcrumbCollapsed","BreadcrumbSeparator","styles","root","ol","display","flexWrap","alignItems","padding","margin","li","listStyle","separator","insertSeparators","items","className","reduce","acc","current","index","length","concat","createElement","key","push","Breadcrumbs","forwardRef","props","ref","children","classes","Component","component","itemsAfterCollapse","itemsBeforeCollapse","maxItems","other","_React$useState","useState","_React$useState2","expanded","setExpanded","renderItemsBeforeAndAfter","allItems","handleClickExpand","process","env","NODE_ENV","join","slice","onClick","Children","toArray","filter","child","isValidElement","map","color","propTypes","node","isRequired","object","string","elementType","number","defaultProps","name"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,kBAAP,MAA+B,0CAA/B;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,wBAAP,MAAqC,gDAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,IAAIC,MAAM,GAAG;AACX;AACAC,EAAAA,IAAI,EAAE,EAFK;;AAIX;AACAC,EAAAA,EAAE,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,QAAQ,EAAE,MAFR;AAGFC,IAAAA,UAAU,EAAE,QAHV;AAIFC,IAAAA,OAAO,EAAE,CAJP;AAKF;AACAC,IAAAA,MAAM,EAAE,CANN,CAMQ;;AANR,GALO;;AAeX;AACAC,EAAAA,EAAE,EAAE;AACFC,IAAAA,SAAS,EAAE;AADT,GAhBO;;AAoBX;AACAC,EAAAA,SAAS,EAAE;AArBA,CAAb;;AAwBA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiCC,SAAjC,EAA4CH,SAA5C,EAAuD;AACrD,SAAOE,KAAK,CAACE,MAAN,CAAa,UAAUC,GAAV,EAAeC,OAAf,EAAwBC,KAAxB,EAA+B;AACjD,QAAIA,KAAK,GAAGL,KAAK,CAACM,MAAN,GAAe,CAA3B,EAA8B;AAC5BH,MAAAA,GAAG,GAAGA,GAAG,CAACI,MAAJ,CAAWH,OAAX,EAAoBxB,KAAK,CAAC4B,aAAN,CAAoBrB,mBAApB,CAAwC;AAAxC,QACxB;AACAsB,QAAAA,GAAG,EAAE,aAAaF,MAAb,CAAoBF,KAApB,CADL;AAEAJ,QAAAA,SAAS,EAAEA;AAFX,OADwB,EAIvBH,SAJuB,CAApB,CAAN;AAKD,KAND,MAMO;AACLK,MAAAA,GAAG,CAACO,IAAJ,CAASN,OAAT;AACD;;AAED,WAAOD,GAAP;AACD,GAZM,EAYJ,EAZI,CAAP;AAaD;;AAED,IAAIQ,WAAW,GAAG/B,KAAK,CAACgC,UAAN,CAAiB,SAASD,WAAT,CAAqBE,KAArB,EAA4BC,GAA5B,EAAiC;AAClE,MAAIC,QAAQ,GAAGF,KAAK,CAACE,QAArB;AAAA,MACIC,OAAO,GAAGH,KAAK,CAACG,OADpB;AAAA,MAEIf,SAAS,GAAGY,KAAK,CAACZ,SAFtB;AAAA,MAGIgB,SAAS,GAAGJ,KAAK,CAACK,SAHtB;AAAA,MAIIC,kBAAkB,GAAGN,KAAK,CAACM,kBAJ/B;AAAA,MAKIC,mBAAmB,GAAGP,KAAK,CAACO,mBALhC;AAAA,MAMIC,QAAQ,GAAGR,KAAK,CAACQ,QANrB;AAAA,MAOIvB,SAAS,GAAGe,KAAK,CAACf,SAPtB;AAAA,MAQIwB,KAAK,GAAG3C,wBAAwB,CAACkC,KAAD,EAAQ,CAAC,UAAD,EAAa,SAAb,EAAwB,WAAxB,EAAqC,WAArC,EAAkD,oBAAlD,EAAwE,qBAAxE,EAA+F,UAA/F,EAA2G,WAA3G,CAAR,CARpC;;AAUA,MAAIU,eAAe,GAAG3C,KAAK,CAAC4C,QAAN,CAAe,KAAf,CAAtB;AAAA,MACIC,gBAAgB,GAAG/C,cAAc,CAAC6C,eAAD,EAAkB,CAAlB,CADrC;AAAA,MAEIG,QAAQ,GAAGD,gBAAgB,CAAC,CAAD,CAF/B;AAAA,MAGIE,WAAW,GAAGF,gBAAgB,CAAC,CAAD,CAHlC;;AAKA,MAAIG,yBAAyB,GAAG,SAASA,yBAAT,CAAmCC,QAAnC,EAA6C;AAC3E,QAAIC,iBAAiB,GAAG,SAASA,iBAAT,GAA6B;AACnDH,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAFD,CAD2E,CAGxE;AACH;;;AAGA,QAAIP,mBAAmB,GAAGD,kBAAtB,IAA4CU,QAAQ,CAACvB,MAAzD,EAAiE;AAC/DyB,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCpD,OAAO,CAAC,KAAD,EAAQ,CAAC,yFAAD,EAA4F,uBAAuB0B,MAAvB,CAA8BY,kBAA9B,EAAkD,0BAAlD,EAA8EZ,MAA9E,CAAqFa,mBAArF,EAA0G,iBAA1G,EAA6Hb,MAA7H,CAAoIc,QAApI,EAA8I,GAA9I,CAA5F,EAAgPa,IAAhP,CAAqP,IAArP,CAAR,CAA/C,GAAqT,KAAK,CAA1T;AACA,aAAOL,QAAP;AACD;;AAED,WAAO,GAAGtB,MAAH,CAAU9B,kBAAkB,CAACoD,QAAQ,CAACM,KAAT,CAAe,CAAf,EAAkBf,mBAAlB,CAAD,CAA5B,EAAsE,CAACxC,KAAK,CAAC4B,aAAN,CAAoBtB,mBAApB,EAAyC;AACrHuB,MAAAA,GAAG,EAAE,UADgH;AAErH2B,MAAAA,OAAO,EAAEN;AAF4G,KAAzC,CAAD,CAAtE,EAGFrD,kBAAkB,CAACoD,QAAQ,CAACM,KAAT,CAAeN,QAAQ,CAACvB,MAAT,GAAkBa,kBAAjC,EAAqDU,QAAQ,CAACvB,MAA9D,CAAD,CAHhB,CAAP;AAID,GAhBD;;AAkBA,MAAIuB,QAAQ,GAAGjD,KAAK,CAACyD,QAAN,CAAeC,OAAf,CAAuBvB,QAAvB,EAAiCwB,MAAjC,CAAwC,UAAUC,KAAV,EAAiB;AACtE,WAAO5D,KAAK,CAAC6D,cAAN,CAAqBD,KAArB,CAAP;AACD,GAFc,EAEZE,GAFY,CAER,UAAUF,KAAV,EAAiBnC,KAAjB,EAAwB;AAC7B,WAAQ;AACNzB,MAAAA,KAAK,CAAC4B,aAAN,CAAoB,IAApB,EAA0B;AACxBP,QAAAA,SAAS,EAAEe,OAAO,CAACpB,EADK;AAExBa,QAAAA,GAAG,EAAE,SAASF,MAAT,CAAgBF,KAAhB;AAFmB,OAA1B,EAGGmC,KAHH;AADF;AAMD,GATc,CAAf;AAUA,SAAO5D,KAAK,CAAC4B,aAAN,CAAoBvB,UAApB,EAAgCT,QAAQ,CAAC;AAC9CsC,IAAAA,GAAG,EAAEA,GADyC;AAE9CI,IAAAA,SAAS,EAAED,SAFmC;AAG9C0B,IAAAA,KAAK,EAAE,eAHuC;AAI9C1C,IAAAA,SAAS,EAAElB,IAAI,CAACiC,OAAO,CAAC3B,IAAT,EAAeY,SAAf;AAJ+B,GAAD,EAK5CqB,KAL4C,CAAxC,EAKI1C,KAAK,CAAC4B,aAAN,CAAoB,IAApB,EAA0B;AACnCP,IAAAA,SAAS,EAAEe,OAAO,CAAC1B;AADgB,GAA1B,EAERS,gBAAgB,CAAC2B,QAAQ,IAAIL,QAAQ,IAAIQ,QAAQ,CAACvB,MAAT,IAAmBe,QAA3C,GAAsDQ,QAAtD,GAAiED,yBAAyB,CAACC,QAAD,CAA3F,EAAuGb,OAAO,CAAClB,SAA/G,EAA0HA,SAA1H,CAFR,CALJ,CAAP;AAQD,CApDiB,CAAlB;AAqDAiC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCtB,WAAW,CAACiC,SAAZ,GAAwB;AAC9D;;;AAGA7B,EAAAA,QAAQ,EAAEjC,SAAS,CAAC+D,IAAV,CAAeC,UAJqC;;AAM9D;;;;AAIA9B,EAAAA,OAAO,EAAElC,SAAS,CAACiE,MAAV,CAAiBD,UAVoC;;AAY9D;;;AAGA7C,EAAAA,SAAS,EAAEnB,SAAS,CAACkE,MAfyC;;AAiB9D;;;;;AAKA9B,EAAAA,SAAS,EAAEpC,SAAS,CAACmE,WAtByC;;AAwB9D;;;AAGA9B,EAAAA,kBAAkB,EAAErC,SAAS,CAACoE,MA3BgC;;AA6B9D;;;AAGA9B,EAAAA,mBAAmB,EAAEtC,SAAS,CAACoE,MAhC+B;;AAkC9D;;;;;AAKA7B,EAAAA,QAAQ,EAAEvC,SAAS,CAACoE,MAvC0C;;AAyC9D;;;AAGApD,EAAAA,SAAS,EAAEhB,SAAS,CAAC+D;AA5CyC,CAAhE,GA6CI,KAAK,CA7CT;AA8CAlC,WAAW,CAACwC,YAAZ,GAA2B;AACzBjC,EAAAA,SAAS,EAAE,KADc;AAEzBC,EAAAA,kBAAkB,EAAE,CAFK;AAGzBC,EAAAA,mBAAmB,EAAE,CAHI;AAIzBC,EAAAA,QAAQ,EAAE,CAJe;AAKzBvB,EAAAA,SAAS,EAAE;AALc,CAA3B;AAOA,eAAed,UAAU,CAACI,MAAD,EAAS;AAChCgE,EAAAA,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZzC,WAFY,CAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport warning from 'warning';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport BreadcrumbSeparator from './BreadcrumbSeparator';\nvar styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    // Reset\n    margin: 0 // Reset\n\n  },\n\n  /* Styles applied to the li element. */\n  li: {\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the separator element. */\n  separator: {}\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, React.createElement(BreadcrumbSeparator // eslint-disable-next-line react/no-array-index-key\n      , {\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      Component = props.component,\n      itemsAfterCollapse = props.itemsAfterCollapse,\n      itemsBeforeCollapse = props.itemsBeforeCollapse,\n      maxItems = props.maxItems,\n      separator = props.separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      expanded = _React$useState2[0],\n      setExpanded = _React$useState2[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand() {\n      setExpanded(true);\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, ['Material-UI: you have provided an invalid combination of properties to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} +itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n')) : void 0;\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [React.createElement(BreadcrumbCollapsed, {\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    return React.isValidElement(child);\n  }).map(function (child, index) {\n    return (// eslint-disable-next-line react/no-array-index-key\n      React.createElement(\"li\", {\n        className: classes.li,\n        key: \"child-\".concat(index)\n      }, child)\n    );\n  });\n  return React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * By default, it maps the variant to a good default headline component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first and last will be shown, with an\n   * ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nBreadcrumbs.defaultProps = {\n  component: 'nav',\n  itemsAfterCollapse: 1,\n  itemsBeforeCollapse: 1,\n  maxItems: 8,\n  separator: '/'\n};\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);"]},"metadata":{},"sourceType":"module"}