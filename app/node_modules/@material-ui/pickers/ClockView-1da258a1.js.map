{"version":3,"file":"ClockView-1da258a1.js","sources":["../src/_shared/icons/PenIcon.tsx","../src/_shared/PickerToolbar.tsx","../src/views/Clock/ClockNumber.tsx","../src/views/Clock/ClockNumbers.tsx","../src/_shared/ToolbarText.tsx","../src/_shared/ToolbarButton.tsx","../src/TimePicker/TimePickerToolbar.tsx","../src/views/Clock/ClockView.tsx"],"sourcesContent":["import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n\n/**\n * @ignore - internal component.\n */\nexport const PenIcon = createSvgIcon(\n  <path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\" />,\n  'Pen'\n);\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar, { ToolbarProps } from '@material-ui/core/Toolbar';\nimport { ExtendMui } from '../typings/helpers';\nimport { PenIcon } from '../_shared/icons/PenIcon';\nimport { CalendarIcon } from './icons/CalendarIcon';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ToolbarComponentProps } from '../Picker/Picker';\n\nexport const useStyles = makeStyles(\n  theme => {\n    const toolbarBackground =\n      theme.palette.type === 'light'\n        ? theme.palette.primary.main\n        : theme.palette.background.default;\n    return {\n      toolbar: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        justifyContent: 'space-between',\n        paddingTop: 16,\n        paddingBottom: 16,\n        backgroundColor: toolbarBackground,\n        color: theme.palette.getContrastText(toolbarBackground),\n      },\n      toolbarLandscape: {\n        height: 'auto',\n        maxWidth: 160,\n        padding: 16,\n        justifyContent: 'flex-start',\n        flexWrap: 'wrap',\n      },\n      dateTitleContainer: {\n        flex: 1,\n      },\n    };\n  },\n  { name: 'MuiPickersToolbar' }\n);\n\ninterface PickerToolbarProps\n  extends ExtendMui<ToolbarProps>,\n    Pick<\n      ToolbarComponentProps,\n      | 'getMobileKeyboardInputViewButtonText'\n      | 'isMobileKeyboardViewOpen'\n      | 'toggleMobileKeyboardView'\n    > {\n  toolbarTitle: React.ReactNode;\n  landscapeDirection?: 'row' | 'column';\n  isLandscape: boolean;\n  penIconClassName?: string;\n}\n\nfunction defaultGetKeyboardInputSwitchingButtonText(isKeyboardInputOpen: boolean) {\n  return isKeyboardInputOpen\n    ? 'text input view is open, go to calendar view'\n    : 'calendar view is open, go to text input view';\n}\n\nconst PickerToolbar: React.SFC<PickerToolbarProps> = ({\n  children,\n  isLandscape,\n  toolbarTitle,\n  landscapeDirection = 'column',\n  className = null,\n  penIconClassName,\n  toggleMobileKeyboardView,\n  isMobileKeyboardViewOpen,\n  getMobileKeyboardInputViewButtonText = defaultGetKeyboardInputSwitchingButtonText,\n  ...other\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Toolbar\n      data-mui-test=\"picker-toolbar\"\n      className={clsx(classes.toolbar, { [classes.toolbarLandscape]: isLandscape }, className)}\n      {...other}\n    >\n      <Typography data-mui-test=\"picker-toolbar-title\" color=\"inherit\" variant=\"overline\">\n        {toolbarTitle}\n      </Typography>\n      <Grid\n        container\n        justify=\"space-between\"\n        className={classes.dateTitleContainer}\n        direction={isLandscape ? landscapeDirection : 'row'}\n        alignItems={isLandscape ? 'flex-start' : 'flex-end'}\n      >\n        {children}\n        <IconButton\n          onClick={toggleMobileKeyboardView}\n          className={penIconClassName}\n          color=\"inherit\"\n          data-mui-test=\"toggle-mobile-keyboard-view\"\n          aria-label={getMobileKeyboardInputViewButtonText(isMobileKeyboardViewOpen)}\n        >\n          {isMobileKeyboardViewOpen ? (\n            <CalendarIcon color=\"inherit\" />\n          ) : (\n            <PenIcon color=\"inherit\" />\n          )}\n        </IconButton>\n      </Grid>\n    </Toolbar>\n  );\n};\n\nexport default PickerToolbar;\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport { onSpaceOrEnter } from '../../_helpers/utils';\nimport { makeStyles, fade } from '@material-ui/core/styles';\nimport { FORCE_FINISH_PICKER } from '../../_shared/hooks/usePickerState';\n\nconst positions: Record<number, [number, number]> = {\n  0: [0, 40],\n  1: [55, 19.6],\n  2: [94.4, 59.5],\n  3: [109, 114],\n  4: [94.4, 168.5],\n  5: [54.5, 208.4],\n  6: [0, 223],\n  7: [-54.5, 208.4],\n  8: [-94.4, 168.5],\n  9: [-109, 114],\n  10: [-94.4, 59.5],\n  11: [-54.5, 19.6],\n  12: [0, 5],\n  13: [36.9, 49.9],\n  14: [64, 77],\n  15: [74, 114],\n  16: [64, 151],\n  17: [37, 178],\n  18: [0, 188],\n  19: [-37, 178],\n  20: [-64, 151],\n  21: [-74, 114],\n  22: [-64, 77],\n  23: [-37, 50],\n};\n\nexport interface ClockNumberProps {\n  index: number;\n  label: string;\n  selected: boolean;\n  disabled: boolean;\n  onSelect: (isFinish: boolean | symbol) => void;\n  isInner?: boolean;\n  getClockNumberText: (currentItemText: string) => string;\n}\n\nexport const useStyles = makeStyles(\n  theme => {\n    const size = 32;\n    const clockNumberColor =\n      theme.palette.type === 'light' ? theme.palette.text.primary : theme.palette.text.hint;\n\n    return {\n      clockNumber: {\n        outline: 0,\n        width: size,\n        height: size,\n        userSelect: 'none',\n        position: 'absolute',\n        left: `calc((100% - ${typeof size === 'number' ? `${size}px` : size}) / 2)`,\n        display: 'inline-flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: '50%',\n        color: clockNumberColor,\n        '&:focused': {\n          backgroundColor: theme.palette.background.paper,\n        },\n      },\n      clockNumberSelected: {\n        color: theme.palette.primary.contrastText,\n      },\n      clockNumberDisabled: {\n        pointerEvents: 'none',\n        color: fade(clockNumberColor, 0.2),\n      },\n    };\n  },\n  { name: 'MuiPickersClockNumber' }\n);\n\nexport const ClockNumber: React.FC<ClockNumberProps> = ({\n  selected,\n  label,\n  index,\n  onSelect,\n  isInner,\n  disabled,\n  getClockNumberText,\n}) => {\n  const ref = React.useRef<HTMLSpanElement>(null);\n  const classes = useStyles();\n  const className = clsx(classes.clockNumber, {\n    [classes.clockNumberSelected]: selected,\n    [classes.clockNumberDisabled]: disabled,\n  });\n\n  const transformStyle = React.useMemo(() => {\n    const position = positions[index];\n\n    return {\n      transform: `translate(${position[0]}px, ${position[1]}px`,\n    };\n  }, [index]);\n\n  React.useEffect(() => {\n    if (selected && ref.current) {\n      ref.current.focus();\n    }\n  }, [selected]);\n\n  return (\n    <ButtonBase\n      focusRipple\n      centerRipple\n      ref={ref}\n      tabIndex={disabled ? -1 : 0}\n      component=\"span\"\n      className={className}\n      style={transformStyle}\n      aria-label={getClockNumberText(label)}\n      onKeyDown={onSpaceOrEnter(() => onSelect(FORCE_FINISH_PICKER))}\n    >\n      <Typography variant={isInner ? 'body2' : 'body1'}>{label}</Typography>\n    </ButtonBase>\n  );\n};\n\nexport default ClockNumber;\n","import * as React from 'react';\nimport ClockNumber from './ClockNumber';\nimport { IUtils } from '@date-io/core/IUtils';\nimport { MaterialUiPickersDate } from '../../typings/date';\n\nexport const getHourNumbers = ({\n  ampm,\n  date,\n  utils,\n  onChange,\n  isDisabled,\n  getClockNumberText,\n}: {\n  ampm: boolean;\n  utils: IUtils<MaterialUiPickersDate>;\n  date: MaterialUiPickersDate;\n  onChange: (value: number, isFinish?: boolean) => void;\n  getClockNumberText: (hour: string) => string;\n  isDisabled: (value: number) => boolean;\n}) => {\n  const currentHours = utils.getHours(date);\n\n  const hourNumbers: JSX.Element[] = [];\n  const startHour = ampm ? 1 : 0;\n  const endHour = ampm ? 12 : 23;\n\n  const isSelected = (hour: number) => {\n    if (ampm) {\n      if (hour === 12) {\n        return currentHours === 12 || currentHours === 0;\n      }\n\n      return currentHours === hour || currentHours - 12 === hour;\n    }\n\n    return currentHours === hour;\n  };\n\n  for (let hour = startHour; hour <= endHour; hour += 1) {\n    let label = hour.toString();\n\n    if (hour === 0) {\n      label = '00';\n    }\n\n    const isInner = !ampm && (hour === 0 || hour > 12);\n    hourNumbers.push(\n      <ClockNumber\n        key={hour}\n        index={hour}\n        isInner={isInner}\n        selected={isSelected(hour)}\n        disabled={isDisabled(hour)}\n        label={utils.formatNumber(label)}\n        onSelect={() => onChange(hour, true)}\n        getClockNumberText={getClockNumberText}\n      />\n    );\n  }\n\n  return hourNumbers;\n};\n\nexport const getMinutesNumbers = ({\n  value,\n  utils,\n  onChange,\n  isDisabled,\n  getClockNumberText,\n}: {\n  value: number;\n  utils: IUtils<MaterialUiPickersDate>;\n  onChange: (value: number, isFinish?: boolean | symbol) => void;\n  getClockNumberText: (hour: string) => string;\n  isDisabled: (value: number) => boolean;\n}) => {\n  const f = utils.formatNumber;\n\n  return ([\n    [5, f('05')],\n    [10, f('10')],\n    [15, f('15')],\n    [20, f('20')],\n    [25, f('25')],\n    [30, f('30')],\n    [35, f('35')],\n    [40, f('40')],\n    [45, f('45')],\n    [50, f('50')],\n    [55, f('55')],\n    [0, f('00')],\n  ] as const).map(([numberValue, label], index) => (\n    <ClockNumber\n      key={numberValue}\n      label={label}\n      index={index + 1}\n      disabled={isDisabled(numberValue)}\n      selected={numberValue === value}\n      onSelect={isFinish => onChange(numberValue, isFinish)}\n      getClockNumberText={getClockNumberText}\n    />\n  ));\n};\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport { ExtendMui } from '../typings/helpers';\nimport { makeStyles, fade } from '@material-ui/core/styles';\n\nexport interface ToolbarTextProps extends ExtendMui<TypographyProps> {\n  selected?: boolean;\n  value: React.ReactNode;\n}\n\nexport const useStyles = makeStyles(\n  theme => {\n    const textColor =\n      theme.palette.type === 'light'\n        ? theme.palette.primary.contrastText\n        : theme.palette.getContrastText(theme.palette.background.default);\n\n    return {\n      toolbarTxt: {\n        transition: theme.transitions.create('color'),\n        color: fade(textColor, 0.54),\n      },\n      toolbarBtnSelected: {\n        color: textColor,\n      },\n    };\n  },\n  { name: 'MuiPickersToolbarText' }\n);\n\nconst ToolbarText: React.FC<ToolbarTextProps> = ({\n  selected,\n  value: label,\n  className = null,\n  ...other\n}) => {\n  const classes = useStyles();\n  return (\n    <Typography\n      children={label}\n      className={clsx(classes.toolbarTxt, className, {\n        [classes.toolbarBtnSelected]: selected,\n      })}\n      {...other}\n    />\n  );\n};\n\nexport default ToolbarText;\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport ToolbarText from './ToolbarText';\nimport Button, { ButtonProps } from '@material-ui/core/Button';\nimport { ExtendMui } from '../typings/helpers';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TypographyProps } from '@material-ui/core/Typography';\n\nexport interface ToolbarButtonProps extends ExtendMui<ButtonProps, 'value' | 'variant'> {\n  variant: TypographyProps['variant'];\n  selected: boolean;\n  value: React.ReactNode;\n  align?: TypographyProps['align'];\n  typographyClassName?: string;\n}\n\nexport const useStyles = makeStyles(\n  {\n    toolbarBtn: {\n      padding: 0,\n      minWidth: '16px',\n      textTransform: 'none',\n    },\n  },\n  { name: 'MuiPickersToolbarButton' }\n);\n\nexport const ToolbarButton: React.FunctionComponent<ToolbarButtonProps> = ({\n  className = null,\n  value: label,\n  selected,\n  variant,\n  align,\n  typographyClassName,\n  ...other\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Button\n      data-mui-test=\"toolbar-button\"\n      variant=\"text\"\n      className={clsx(classes.toolbarBtn, className)}\n      {...other}\n    >\n      <ToolbarText\n        align={align}\n        className={typographyClassName}\n        variant={variant}\n        value={label}\n        selected={selected}\n      />\n    </Button>\n  );\n};\n\nToolbarButton.displayName = 'ToolbarButton';\n\nexport default ToolbarButton;\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport ToolbarText from '../_shared/ToolbarText';\nimport ToolbarButton from '../_shared/ToolbarButton';\nimport PickerToolbar from '../_shared/PickerToolbar';\nimport { arrayIncludes } from '../_helpers/utils';\nimport { useUtils } from '../_shared/hooks/useUtils';\nimport { MaterialUiPickersDate } from '../typings/date';\nimport { ToolbarComponentProps } from '../Picker/Picker';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport { convertToMeridiem, getMeridiem } from '../_helpers/time-utils';\n\nexport const useStyles = makeStyles(\n  {\n    separator: {\n      outline: 0,\n      margin: '0 4px 0 2px',\n      cursor: 'default',\n    },\n    hourMinuteLabel: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'flex-end',\n    },\n    hourMinuteLabelLandscape: {\n      marginTop: 'auto',\n    },\n    hourMinuteLabelReverse: {\n      flexDirection: 'row-reverse',\n    },\n    ampmSelection: {\n      display: 'flex',\n      flexDirection: 'column',\n      marginRight: 'auto',\n      marginLeft: 12,\n    },\n    ampmLandscape: {\n      margin: '4px 0 auto',\n      flexDirection: 'row',\n      justifyContent: 'space-around',\n      flexBasis: '100%',\n    },\n    ampmLabel: {\n      fontSize: 17,\n    },\n    penIconLandscape: {\n      marginTop: 'auto',\n    },\n  },\n  { name: 'MuiPickersTimePickerToolbar' }\n);\n\nexport function useMeridiemMode(\n  date: MaterialUiPickersDate,\n  ampm: boolean | undefined,\n  onChange: (date: MaterialUiPickersDate, isFinished?: boolean) => void\n) {\n  const utils = useUtils();\n  const meridiemMode = getMeridiem(date, utils);\n\n  const handleMeridiemChange = React.useCallback(\n    (mode: 'am' | 'pm') => {\n      const timeWithMeridiem = convertToMeridiem(date, mode, Boolean(ampm), utils);\n      onChange(timeWithMeridiem, false);\n    },\n    [ampm, date, onChange, utils]\n  );\n\n  return { meridiemMode, handleMeridiemChange };\n}\n\nconst clockTypographyVariant = 'h3';\n\nexport const TimePickerToolbar: React.FC<ToolbarComponentProps> = ({\n  date,\n  views,\n  ampm,\n  openView,\n  onChange,\n  isLandscape,\n  setOpenView,\n  ampmInClock,\n  isMobileKeyboardViewOpen,\n  toggleMobileKeyboardView,\n  toolbarTitle = 'SELECT TIME',\n}) => {\n  const utils = useUtils();\n  const theme = useTheme();\n  const classes = useStyles();\n  const showAmPmControl = ampm && !ampmInClock;\n  const { meridiemMode, handleMeridiemChange } = useMeridiemMode(date, ampm, onChange);\n\n  const separator = (\n    <ToolbarText\n      tabIndex={-1}\n      value=\":\"\n      variant={clockTypographyVariant}\n      selected={false}\n      className={classes.separator}\n    />\n  );\n\n  return (\n    <PickerToolbar\n      landscapeDirection=\"row\"\n      toolbarTitle={toolbarTitle}\n      isLandscape={isLandscape}\n      isMobileKeyboardViewOpen={isMobileKeyboardViewOpen}\n      toggleMobileKeyboardView={toggleMobileKeyboardView}\n      penIconClassName={clsx({ [classes.penIconLandscape]: isLandscape })}\n    >\n      <div\n        className={clsx(classes.hourMinuteLabel, {\n          [classes.hourMinuteLabelLandscape]: isLandscape,\n          [classes.hourMinuteLabelReverse]: theme.direction === 'rtl',\n        })}\n      >\n        {arrayIncludes(views, 'hours') && (\n          <ToolbarButton\n            data-mui-test=\"hours\"\n            tabIndex={-1}\n            variant={clockTypographyVariant}\n            onClick={() => setOpenView('hours')}\n            selected={openView === 'hours'}\n            value={ampm ? utils.format(date, 'hours12h') : utils.format(date, 'hours24h')}\n          />\n        )}\n\n        {arrayIncludes(views, ['hours', 'minutes']) && separator}\n\n        {arrayIncludes(views, 'minutes') && (\n          <ToolbarButton\n            data-mui-test=\"minutes\"\n            tabIndex={-1}\n            variant={clockTypographyVariant}\n            onClick={() => setOpenView('minutes')}\n            selected={openView === 'minutes'}\n            value={utils.format(date, 'minutes')}\n          />\n        )}\n\n        {arrayIncludes(views, ['minutes', 'seconds']) && separator}\n\n        {arrayIncludes(views, 'seconds') && (\n          <ToolbarButton\n            data-mui-test=\"seconds\"\n            variant={clockTypographyVariant}\n            onClick={() => setOpenView('seconds')}\n            selected={openView === 'seconds'}\n            value={utils.format(date, 'seconds')}\n          />\n        )}\n      </div>\n\n      {showAmPmControl && (\n        <div\n          className={clsx(classes.ampmSelection, {\n            [classes.ampmLandscape]: isLandscape,\n          })}\n        >\n          <ToolbarButton\n            disableRipple\n            variant=\"subtitle2\"\n            data-mui-test=\"toolbar-am-btn\"\n            selected={meridiemMode === 'am'}\n            typographyClassName={classes.ampmLabel}\n            value={utils.getMeridiemText('am')}\n            onClick={() => handleMeridiemChange('am')}\n          />\n\n          <ToolbarButton\n            disableRipple\n            variant=\"subtitle2\"\n            data-mui-test=\"toolbar-pm-btn\"\n            selected={meridiemMode === 'pm'}\n            typographyClassName={classes.ampmLabel}\n            value={utils.getMeridiemText('pm')}\n            onClick={() => handleMeridiemChange('pm')}\n          />\n        </div>\n      )}\n    </PickerToolbar>\n  );\n};\n\nexport default TimePickerToolbar;\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport Clock from './Clock';\nimport { pipe } from '../../_helpers/utils';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useUtils } from '../../_shared/hooks/useUtils';\nimport { MaterialUiPickersDate } from '../../typings/date';\nimport { PickerOnChangeFn } from '../../_shared/hooks/useViews';\nimport { getHourNumbers, getMinutesNumbers } from './ClockNumbers';\nimport { useMeridiemMode } from '../../TimePicker/TimePickerToolbar';\nimport { ArrowSwitcher, ExportedArrowSwitcherProps } from '../../_shared/ArrowSwitcher';\nimport {\n  convertValueToMeridiem,\n  createIsAfterIgnoreDatePart,\n  TimeValidationProps,\n} from '../../_helpers/time-utils';\n\nexport interface ExportedClockViewProps extends TimeValidationProps {\n  /**\n   * 12h/24h view for hour selection clock\n   * @default true\n   */\n  ampm?: boolean;\n  /**\n   * Step over minutes\n   * @default 1\n   */\n  minutesStep?: number;\n  /**\n   * Display ampm controls under the clock (instead of in the toolbar)\n   * @default false\n   */\n  ampmInClock?: boolean;\n  /**\n   * Enables keyboard listener for moving between days in calendar\n   * @default currentWrapper !== 'static'\n   */\n  allowKeyboardControl?: boolean;\n}\n\nexport interface ClockViewProps extends ExportedClockViewProps, ExportedArrowSwitcherProps {\n  /** Selected date @DateIOType */\n  date: MaterialUiPickersDate;\n  /** Clock type */\n  type: 'hours' | 'minutes' | 'seconds';\n  /** On change date without moving between views @DateIOType */\n  onDateChange: PickerOnChangeFn;\n  /** On change callback @DateIOType */\n  onChange: PickerOnChangeFn;\n  /** Get clock number aria-text for hours */\n  getHoursClockNumberText?: (hoursText: string) => string;\n  /** Get clock number aria-text for minutes */\n  getMinutesClockNumberText?: (minutesText: string) => string;\n  /** Get clock number aria-text for seconds */\n  getSecondsClockNumberText?: (secondsText: string) => string;\n  openNextView: () => void;\n  openPreviousView: () => void;\n  nextViewAvailable: boolean;\n  previousViewAvailable: boolean;\n  showViewSwitcher?: boolean;\n}\n\nexport const useStyles = makeStyles(\n  () => ({\n    arrowSwitcher: {\n      position: 'absolute',\n      right: 8,\n      top: 8,\n    },\n  }),\n  { name: 'MuiPickersClockView' }\n);\n\nconst getHoursAriaText = (hour: string) => `${hour} hours`;\nconst getMinutesAriaText = (minute: string) => `${minute} minutes`;\nconst getSecondsAriaText = (seconds: string) => `${seconds} seconds`;\n\nexport const ClockView: React.FC<ClockViewProps> = ({\n  type,\n  onDateChange,\n  onChange,\n  ampm,\n  date,\n  minutesStep = 1,\n  ampmInClock,\n  minTime,\n  maxTime,\n  allowKeyboardControl,\n  shouldDisableTime,\n  getHoursClockNumberText = getHoursAriaText,\n  getMinutesClockNumberText = getMinutesAriaText,\n  getSecondsClockNumberText = getSecondsAriaText,\n  leftArrowButtonProps,\n  rightArrowButtonProps,\n  leftArrowIcon,\n  rightArrowIcon,\n  leftArrowButtonText = 'open previous view',\n  rightArrowButtonText = 'open next view',\n  openNextView,\n  openPreviousView,\n  nextViewAvailable,\n  showViewSwitcher,\n  previousViewAvailable,\n  disableTimeValidationIgnoreDatePart,\n}) => {\n  const utils = useUtils();\n  const classes = useStyles();\n  const { meridiemMode, handleMeridiemChange } = useMeridiemMode(date, ampm, onDateChange);\n\n  const isTimeDisabled = React.useCallback(\n    (rawValue: number, type: 'hours' | 'minutes' | 'seconds') => {\n      const validateTimeValue = (\n        getRequestedTimePoint: (when: 'start' | 'end') => MaterialUiPickersDate\n      ) => {\n        const isAfterComparingFn = createIsAfterIgnoreDatePart(\n          Boolean(disableTimeValidationIgnoreDatePart),\n          utils\n        );\n\n        // prettier-ignore\n        return Boolean(\n          (minTime && isAfterComparingFn(minTime, getRequestedTimePoint('end'))) ||\n          (maxTime && isAfterComparingFn(getRequestedTimePoint('start'), maxTime)) ||\n          (shouldDisableTime && shouldDisableTime(rawValue, type))\n        );\n      };\n\n      switch (type) {\n        case 'hours':\n          const hoursWithMeridiem = convertValueToMeridiem(rawValue, meridiemMode, Boolean(ampm));\n          return validateTimeValue((when: 'start' | 'end') =>\n            pipe(\n              currentDate => utils.setHours(currentDate, hoursWithMeridiem),\n              dateWithHours => utils.setMinutes(dateWithHours, when === 'start' ? 0 : 59),\n              dateWithMinutes => utils.setSeconds(dateWithMinutes, when === 'start' ? 0 : 59)\n            )(date)\n          );\n        case 'minutes':\n          return validateTimeValue((when: 'start' | 'end') =>\n            pipe(\n              currentDate => utils.setMinutes(currentDate, rawValue),\n              dateWithMinutes => utils.setSeconds(dateWithMinutes, when === 'start' ? 0 : 59)\n            )(date)\n          );\n        case 'seconds':\n          return validateTimeValue(() => utils.setSeconds(date, rawValue));\n      }\n    },\n    [\n      ampm,\n      date,\n      disableTimeValidationIgnoreDatePart,\n      maxTime,\n      meridiemMode,\n      minTime,\n      shouldDisableTime,\n      utils,\n    ]\n  );\n\n  const viewProps = React.useMemo(() => {\n    switch (type) {\n      case 'hours':\n        const handleHoursChange = (value: number, isFinish?: boolean | symbol) => {\n          const valueWithMeridiem = convertValueToMeridiem(value, meridiemMode, Boolean(ampm));\n          onChange(utils.setHours(date, valueWithMeridiem), isFinish);\n        };\n\n        return {\n          onChange: handleHoursChange,\n          value: utils.getHours(date),\n          children: getHourNumbers({\n            date,\n            utils,\n            ampm: Boolean(ampm),\n            onChange: handleHoursChange,\n            getClockNumberText: getHoursClockNumberText,\n            isDisabled: value => isTimeDisabled(value, 'hours'),\n          }),\n        };\n\n      case 'minutes':\n        const minutesValue = utils.getMinutes(date);\n        const handleMinutesChange = (value: number, isFinish?: boolean | symbol) => {\n          onChange(utils.setMinutes(date, value), isFinish);\n        };\n\n        return {\n          value: minutesValue,\n          onChange: handleMinutesChange,\n          children: getMinutesNumbers({\n            utils,\n            value: minutesValue,\n            onChange: handleMinutesChange,\n            getClockNumberText: getMinutesClockNumberText,\n            isDisabled: value => isTimeDisabled(value, 'minutes'),\n          }),\n        };\n\n      case 'seconds':\n        const secondsValue = utils.getSeconds(date);\n        const handleSecondsChange = (value: number, isFinish?: boolean | symbol) => {\n          onChange(utils.setSeconds(date, value), isFinish);\n        };\n\n        return {\n          value: secondsValue,\n          onChange: handleSecondsChange,\n          children: getMinutesNumbers({\n            utils,\n            value: secondsValue,\n            onChange: handleSecondsChange,\n            getClockNumberText: getSecondsClockNumberText,\n            isDisabled: value => isTimeDisabled(value, 'seconds'),\n          }),\n        };\n\n      default:\n        throw new Error('You must provide the type for ClockView');\n    }\n  }, [\n    type,\n    utils,\n    date,\n    ampm,\n    getHoursClockNumberText,\n    getMinutesClockNumberText,\n    getSecondsClockNumberText,\n    meridiemMode,\n    onChange,\n    isTimeDisabled,\n  ]);\n\n  return (\n    <>\n      {showViewSwitcher && (\n        <ArrowSwitcher\n          className={classes.arrowSwitcher}\n          leftArrowButtonProps={leftArrowButtonProps}\n          rightArrowButtonProps={rightArrowButtonProps}\n          leftArrowButtonText={leftArrowButtonText}\n          rightArrowButtonText={rightArrowButtonText}\n          leftArrowIcon={leftArrowIcon}\n          rightArrowIcon={rightArrowIcon}\n          onLeftClick={openPreviousView}\n          onRightClick={openNextView}\n          isLeftDisabled={previousViewAvailable}\n          isRightDisabled={nextViewAvailable}\n        />\n      )}\n\n      <Clock\n        date={date}\n        ampmInClock={ampmInClock}\n        onDateChange={onDateChange}\n        type={type}\n        ampm={ampm}\n        minutesStep={minutesStep}\n        allowKeyboardControl={allowKeyboardControl}\n        isTimeDisabled={isTimeDisabled}\n        meridiemMode={meridiemMode}\n        handleMeridiemChange={handleMeridiemChange}\n        {...viewProps}\n      />\n    </>\n  );\n};\n\nClockView.propTypes = {\n  date: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired,\n  ampm: PropTypes.bool,\n  minutesStep: PropTypes.number,\n  type: PropTypes.oneOf(['minutes', 'hours', 'seconds']).isRequired,\n} as any;\n\nClockView.displayName = 'ClockView';\n\nexport default React.memo(ClockView);\n"],"names":["PenIcon","createSvgIcon","React.createElement","useStyles","makeStyles","theme","toolbarBackground","palette","type","primary","main","background","toolbar","display","flexDirection","alignItems","justifyContent","paddingTop","paddingBottom","backgroundColor","color","getContrastText","toolbarLandscape","height","maxWidth","padding","flexWrap","dateTitleContainer","flex","name","defaultGetKeyboardInputSwitchingButtonText","isKeyboardInputOpen","PickerToolbar","children","isLandscape","toolbarTitle","landscapeDirection","className","penIconClassName","toggleMobileKeyboardView","isMobileKeyboardViewOpen","getMobileKeyboardInputViewButtonText","other","classes","clsx","positions","size","clockNumberColor","text","hint","clockNumber","outline","width","userSelect","position","left","borderRadius","paper","clockNumberSelected","contrastText","clockNumberDisabled","pointerEvents","fade","ClockNumber","selected","label","index","onSelect","isInner","disabled","getClockNumberText","ref","React","transformStyle","transform","current","focus","onSpaceOrEnter","FORCE_FINISH_PICKER","getHourNumbers","ampm","date","utils","onChange","isDisabled","currentHours","getHours","hourNumbers","startHour","endHour","isSelected","hour","toString","push","formatNumber","getMinutesNumbers","value","f","map","numberValue","isFinish","textColor","toolbarTxt","transition","transitions","create","toolbarBtnSelected","ToolbarText","toolbarBtn","minWidth","textTransform","ToolbarButton","variant","align","typographyClassName","displayName","separator","margin","cursor","hourMinuteLabel","hourMinuteLabelLandscape","marginTop","hourMinuteLabelReverse","ampmSelection","marginRight","marginLeft","ampmLandscape","flexBasis","ampmLabel","fontSize","penIconLandscape","useMeridiemMode","useUtils","meridiemMode","getMeridiem","handleMeridiemChange","mode","timeWithMeridiem","convertToMeridiem","Boolean","clockTypographyVariant","TimePickerToolbar","views","openView","setOpenView","ampmInClock","useTheme","showAmPmControl","direction","arrayIncludes","format","getMeridiemText","arrowSwitcher","right","top","getHoursAriaText","getMinutesAriaText","minute","getSecondsAriaText","seconds","ClockView","onDateChange","minutesStep","minTime","maxTime","allowKeyboardControl","shouldDisableTime","getHoursClockNumberText","getMinutesClockNumberText","getSecondsClockNumberText","leftArrowButtonProps","rightArrowButtonProps","leftArrowIcon","rightArrowIcon","leftArrowButtonText","rightArrowButtonText","openNextView","openPreviousView","nextViewAvailable","showViewSwitcher","previousViewAvailable","disableTimeValidationIgnoreDatePart","isTimeDisabled","rawValue","validateTimeValue","getRequestedTimePoint","isAfterComparingFn","createIsAfterIgnoreDatePart","hoursWithMeridiem","convertValueToMeridiem","when","pipe","currentDate","setHours","dateWithHours","setMinutes","dateWithMinutes","setSeconds","viewProps","handleHoursChange","valueWithMeridiem","minutesValue","getMinutes","handleMinutesChange","secondsValue","getSeconds","handleSecondsChange","Error","propTypes","PropTypes","isRequired"],"mappings":"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"}