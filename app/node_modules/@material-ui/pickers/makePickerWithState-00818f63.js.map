{"version":3,"file":"makePickerWithState-00818f63.js","sources":["../src/_shared/ModalDialog.tsx","../src/_shared/PureDateInput.tsx","../src/wrappers/MobileWrapper.tsx","../src/wrappers/DesktopWrapper.tsx","../src/wrappers/DesktopPopperWrapper.tsx","../src/wrappers/ResponsiveWrapper.tsx","../src/wrappers/StaticWrapper.tsx","../src/_shared/hooks/useValidation.ts","../src/_shared/withDateAdapterProp.tsx","../src/wrappers/makeWrapperComponent.tsx","../src/Picker/makePickerWithState.tsx"],"sourcesContent":["import * as React from 'react';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Dialog, { DialogProps } from '@material-ui/core/Dialog';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DIALOG_WIDTH, DIALOG_WIDTH_WIDER } from '../constants/dimensions';\n\nexport interface ModalDialogProps extends DialogProps {\n  onAccept: () => void;\n  onDismiss: () => void;\n  onClear: () => void;\n  onSetToday: () => void;\n  okLabel?: React.ReactNode;\n  cancelLabel?: React.ReactNode;\n  clearLabel?: React.ReactNode;\n  todayLabel?: React.ReactNode;\n  clearable?: boolean;\n  showTodayButton?: boolean;\n  showTabs?: boolean;\n  wider?: boolean;\n}\n\nexport const useStyles = makeStyles(\n  {\n    dialogRoot: {\n      minWidth: DIALOG_WIDTH,\n    },\n    dialogRootWider: {\n      minWidth: DIALOG_WIDTH_WIDER,\n    },\n    dialogContainer: {\n      '&:focus > $dialogRoot': {\n        outline: 'auto',\n        '@media (pointer:coarse)': {\n          outline: 0,\n        },\n      },\n    },\n    dialog: {\n      '&:first-child': {\n        padding: 0,\n      },\n    },\n    withAdditionalAction: {\n      // set justifyContent to default value to fix IE11 layout bug\n      // see https://github.com/mui-org/material-ui-pickers/pull/267\n      justifyContent: 'flex-start',\n\n      '& > *:first-child': {\n        marginRight: 'auto',\n      },\n    },\n  },\n  { name: 'MuiPickersModal' }\n);\n\nexport const ModalDialog: React.FC<ModalDialogProps> = ({\n  children,\n  onAccept,\n  onDismiss,\n  onClear,\n  onSetToday,\n  okLabel,\n  cancelLabel,\n  clearLabel,\n  todayLabel,\n  clearable,\n  showTodayButton,\n  showTabs,\n  wider,\n  ...other\n}) => {\n  const classes = useStyles();\n  return (\n    <Dialog\n      onClose={onDismiss}\n      classes={{\n        container: classes.dialogContainer,\n        paper: clsx(classes.dialogRoot, {\n          [classes.dialogRootWider]: wider,\n        }),\n      }}\n      {...other}\n    >\n      <DialogContent children={children} className={classes.dialog} />\n\n      <DialogActions\n        className={clsx({\n          [classes.withAdditionalAction]: clearable || showTodayButton,\n        })}\n      >\n        {clearable && (\n          <Button data-mui-test=\"clear-action-button\" color=\"primary\" onClick={onClear}>\n            {clearLabel}\n          </Button>\n        )}\n\n        {showTodayButton && (\n          <Button data-mui-test=\"today-action-button\" color=\"primary\" onClick={onSetToday}>\n            {todayLabel}\n          </Button>\n        )}\n\n        {cancelLabel && (\n          <Button color=\"primary\" onClick={onDismiss}>\n            {cancelLabel}\n          </Button>\n        )}\n\n        {okLabel && (\n          <Button color=\"primary\" onClick={onAccept}>\n            {okLabel}\n          </Button>\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nModalDialog.displayName = 'ModalDialog';\n\nexport default ModalDialog;\n","import * as React from 'react';\nimport { onSpaceOrEnter } from '../_helpers/utils';\nimport { ParsableDate } from '../constants/prop-types';\nimport { MaterialUiPickersDate } from '../typings/date';\nimport { TextFieldProps } from '@material-ui/core/TextField';\nimport { IconButtonProps } from '@material-ui/core/IconButton';\nimport { useUtils, MuiPickersAdapter } from './hooks/useUtils';\nimport { InputAdornmentProps } from '@material-ui/core/InputAdornment';\nimport { getDisplayDate, getTextFieldAriaText } from '../_helpers/text-field-helper';\n\nexport type MuiTextFieldProps = TextFieldProps | Omit<TextFieldProps, 'variant'>;\n\nexport interface DateInputProps<TInputValue = ParsableDate, TDateValue = MaterialUiPickersDate> {\n  open: boolean;\n  rawValue: TInputValue;\n  inputFormat: string;\n  onChange: (date: TDateValue, keyboardInputValue?: string) => void;\n  openPicker: () => void;\n  readOnly?: boolean;\n  disabled?: boolean;\n  validationError?: boolean;\n  label?: TextFieldProps['label'];\n  InputProps?: TextFieldProps['InputProps'];\n  TextFieldProps?: Partial<MuiTextFieldProps>;\n  // lib/src/wrappers/DesktopPopperWrapper.tsx:87\n  onBlur?: () => void;\n  // ?? TODO when it will be possible to display \"empty\" date in datepicker use it instead of ignoring invalid inputs\n  ignoreInvalidInputs?: boolean;\n  /**\n   * Render input component. Where `props` â€“ [TextField](https://material-ui.com/api/text-field/#textfield-api) component props\n   * @example ```jsx\n   * renderInput={props => <TextField {...props} />}\n   * ````\n   */\n  renderInput: (props: MuiTextFieldProps) => React.ReactElement;\n  /** Icon displaying for open picker button */\n  openPickerIcon?: React.ReactNode;\n  /**\n   * Custom mask. Can be used to override generate from format. (e.g. __/__/____ __:__ or __/__/____ __:__ _M)\n   */\n  mask?: string;\n  /**\n   *Regular expression to detect \"accepted\" symbols\n   * @default /\\dap/gi\n   */\n  acceptRegex?: RegExp;\n  /**\n   * Props to pass to keyboard input adornment\n   * @type {Partial<InputAdornmentProps>}\n   */\n  InputAdornmentProps?: Partial<InputAdornmentProps>;\n  /**\n   * Props to pass to keyboard adornment button\n   * @type {Partial<IconButtonProps>}\n   */\n  OpenPickerButtonProps?: Partial<IconButtonProps>;\n  /** Custom formatter to be passed into Rifm component */\n  rifmFormatter?: (str: string) => string;\n  /**\n   * Do not render open picker button (renders only text field with validation)\n   * @default false\n   */\n  disableOpenPicker?: boolean;\n  /**\n   * Disable mask on the keyboard, this should be used rarely. Consider passing proper mask for your format\n   * @default false\n   */\n  disableMaskedInput?: boolean;\n  /**\n   * Get aria-label text for control that opens picker dialog. Aria-label text must include selected date.\n   * @default (value, utils) => `Choose date, selected date is ${utils.format(utils.date(value), 'fullDate')}`\n   */\n  getOpenDialogAriaText?: (value: ParsableDate, utils: MuiPickersAdapter) => string;\n}\n\nexport type ExportedDateInputProps<TInputValue, TDateValue> = Omit<\n  DateInputProps<TInputValue, TDateValue>,\n  | 'openPicker'\n  | 'inputValue'\n  | 'onChange'\n  | 'inputFormat'\n  | 'validationError'\n  | 'rawValue'\n  | 'forwardedRef'\n  | 'open'\n  | 'TextFieldProps'\n  | 'onBlur'\n>;\n\nexport interface DateInputRefs {\n  containerRef?: React.Ref<HTMLDivElement>;\n  forwardedRef?: React.Ref<HTMLInputElement>;\n}\n\nexport const PureDateInput: React.FC<DateInputProps & DateInputRefs> = ({\n  inputFormat,\n  rawValue,\n  validationError,\n  InputProps,\n  openPicker: onOpen,\n  renderInput,\n  forwardedRef,\n  containerRef,\n  getOpenDialogAriaText = getTextFieldAriaText,\n  disabled,\n  label,\n  TextFieldProps = {},\n}) => {\n  const utils = useUtils();\n  const PureDateInputProps = React.useMemo(\n    () => ({\n      ...InputProps,\n      readOnly: true,\n    }),\n    [InputProps]\n  );\n\n  const inputValue = getDisplayDate(utils, rawValue, inputFormat);\n\n  return renderInput({\n    label,\n    disabled,\n    ref: containerRef,\n    inputRef: forwardedRef,\n    error: validationError,\n    'aria-label': getOpenDialogAriaText(rawValue, utils),\n    onClick: onOpen,\n    value: inputValue,\n    InputProps: PureDateInputProps,\n    onKeyDown: onSpaceOrEnter(onOpen),\n    ...TextFieldProps,\n  });\n};\n\nPureDateInput.displayName = 'PureDateInput';\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport ModalDialog from '../_shared/ModalDialog';\nimport { WrapperProps } from './Wrapper';\nimport { StaticWrapperProps } from './StaticWrapper';\nimport { PureDateInput } from '../_shared/PureDateInput';\nimport { InnerDesktopWrapperProps } from './DesktopWrapper';\nimport { WrapperVariantContext } from './WrapperVariantContext';\nimport { DialogProps as MuiDialogProps } from '@material-ui/core/Dialog';\n\nexport interface InnerMobileWrapperProps {\n  /**\n   * \"OK\" label message\n   * @default \"OK\"\n   */\n  okLabel?: React.ReactNode;\n  /**\n   * \"CANCEL\" label message\n   * @default \"CANCEL\"\n   */\n  cancelLabel?: React.ReactNode;\n  /**\n   * \"CLEAR\" label message\n   * @default \"CLEAR\"\n   */\n  clearLabel?: React.ReactNode;\n  /**\n   * \"TODAY\" label message\n   * @default \"TODAY\"\n   */\n  todayLabel?: React.ReactNode;\n  /**\n   * If true today button will be displayed. **Note** that clear button has higher priority\n   * @default false\n   */\n  showTodayButton?: boolean;\n  /**\n   * Show clear action in picker dialog\n   * @default false\n   */\n  clearable?: boolean;\n  /**\n   * Props to be passed directly to material-ui Dialog\n   * @type {Partial<MuiDialogProps>}\n   */\n  DialogProps?: Partial<Omit<MuiDialogProps, 'classes'>>;\n  showTabs?: boolean;\n  wider?: boolean;\n}\n\nexport interface MobileWrapperProps\n  extends InnerMobileWrapperProps,\n    WrapperProps,\n    Partial<InnerDesktopWrapperProps & StaticWrapperProps> {}\n\nexport const MobileWrapper: React.FC<MobileWrapperProps> = ({\n  open,\n  children,\n  okLabel,\n  cancelLabel,\n  clearLabel,\n  todayLabel,\n  showTodayButton,\n  clearable,\n  DialogProps,\n  showTabs,\n  wider,\n  DateInputProps,\n  onClear,\n  onAccept,\n  onDismiss,\n  onSetToday,\n  PopoverProps,\n  displayStaticWrapperAs,\n  KeyboardDateInputComponent,\n  PureDateInputComponent = PureDateInput,\n  ...other\n}) => {\n  return (\n    <WrapperVariantContext.Provider value=\"mobile\">\n      <PureDateInputComponent {...other} {...DateInputProps} />\n\n      <ModalDialog\n        wider={wider}\n        showTabs={showTabs}\n        open={open}\n        onClear={onClear}\n        onAccept={onAccept}\n        onDismiss={onDismiss}\n        onSetToday={onSetToday}\n        clearLabel={clearLabel}\n        todayLabel={todayLabel}\n        okLabel={okLabel}\n        cancelLabel={cancelLabel}\n        clearable={clearable}\n        showTodayButton={showTodayButton}\n        children={children}\n        data-mui-test=\"mobile-wrapper-dialog\"\n        {...DialogProps}\n      />\n    </WrapperVariantContext.Provider>\n  );\n};\n\nMobileWrapper.propTypes = {\n  okLabel: PropTypes.node,\n  cancelLabel: PropTypes.node,\n  clearLabel: PropTypes.node,\n  clearable: PropTypes.bool,\n  todayLabel: PropTypes.node,\n  showTodayButton: PropTypes.bool,\n  DialogProps: PropTypes.object,\n} as any;\n\nMobileWrapper.defaultProps = {\n  okLabel: 'OK',\n  cancelLabel: 'Cancel',\n  clearLabel: 'Clear',\n  todayLabel: 'Today',\n  clearable: false,\n  showTodayButton: false,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport KeyboardDateInput from '../_shared/KeyboardDateInput';\nimport Popover, { PopoverProps } from '@material-ui/core/Popover';\nimport { WrapperProps } from './Wrapper';\nimport { StaticWrapperProps } from './StaticWrapper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { InnerMobileWrapperProps } from './MobileWrapper';\nimport { WrapperVariantContext } from './WrapperVariantContext';\nimport { IS_TOUCH_DEVICE_MEDIA } from '../constants/dimensions';\nimport { InnerDesktopPopperWrapperProps } from './DesktopPopperWrapper';\n\nexport interface InnerDesktopWrapperProps {\n  /** Popover props passed to material-ui Popover */\n  PopoverProps?: Partial<PopoverProps>;\n}\n\nexport interface DesktopWrapperProps\n  extends InnerDesktopWrapperProps,\n    WrapperProps,\n    Partial<InnerMobileWrapperProps & InnerDesktopPopperWrapperProps & StaticWrapperProps> {}\n\nconst useStyles = makeStyles({\n  popover: {\n    '&:focus': {\n      outline: 'auto',\n      [IS_TOUCH_DEVICE_MEDIA]: {\n        outline: 0,\n      },\n    },\n  },\n});\n\nexport const DesktopWrapper: React.FC<DesktopWrapperProps> = ({\n  open,\n  children,\n  PopoverProps,\n  onDismiss,\n  DateInputProps,\n  KeyboardDateInputComponent = KeyboardDateInput,\n}) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const classes = useStyles();\n\n  return (\n    <WrapperVariantContext.Provider value=\"desktop\">\n      <KeyboardDateInputComponent {...DateInputProps} containerRef={ref} />\n\n      <Popover\n        role=\"dialog\"\n        open={open}\n        onClose={onDismiss}\n        anchorEl={ref.current}\n        classes={{ paper: classes.popover }}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n        {...PopoverProps}\n      >\n        {children}\n      </Popover>\n    </WrapperVariantContext.Provider>\n  );\n};\n\nDesktopWrapper.propTypes = {\n  onOpen: PropTypes.func,\n  onClose: PropTypes.func,\n  PopoverProps: PropTypes.object,\n} as any;\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\n// @ts-ignore TODO make definitions\nimport TrapFocus from '@material-ui/core/Modal/TrapFocus';\nimport Popper, { PopperProps } from '@material-ui/core/Popper';\nimport { WrapperProps } from './Wrapper';\nimport { StaticWrapperProps } from './StaticWrapper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { InnerMobileWrapperProps } from './MobileWrapper';\nimport { InnerDesktopWrapperProps } from './DesktopWrapper';\nimport { WrapperVariantContext } from './WrapperVariantContext';\nimport { IS_TOUCH_DEVICE_MEDIA } from '../constants/dimensions';\nimport { KeyboardDateInput } from '../_shared/KeyboardDateInput';\nimport { executeInTheNextEventLoopTick } from '../_helpers/utils';\nimport { useGlobalKeyDown, keycode } from '../_shared/hooks/useKeyDown';\nimport { TransitionProps } from '@material-ui/core/transitions/transition';\n\nexport interface InnerDesktopPopperWrapperProps {\n  /** Popper props passed to material-ui [Popper](https://material-ui.com/api/popper/#popper-api) */\n  PopperProps?: Partial<PopperProps>;\n  /** Custom component for [transition](https://material-ui.com/components/transitions/#transitioncomponent-prop)  */\n  TransitionComponent?: React.ComponentType<TransitionProps>;\n}\n\nexport interface DesktopPopperWrapperProps\n  extends InnerDesktopPopperWrapperProps,\n    WrapperProps,\n    Partial<InnerMobileWrapperProps & StaticWrapperProps & InnerDesktopWrapperProps> {}\n\nconst useStyles = makeStyles(theme => ({\n  popper: {\n    zIndex: theme.zIndex.modal,\n  },\n  paper: {\n    transformOrigin: 'top center',\n    '&:focus': {\n      outline: 'auto',\n      [IS_TOUCH_DEVICE_MEDIA]: {\n        outline: 0,\n      },\n    },\n  },\n  topTransition: {\n    transformOrigin: 'bottom center',\n  },\n}));\n\nexport const DesktopPopperWrapper: React.FC<DesktopPopperWrapperProps> = ({\n  open,\n  children,\n  PopperProps,\n  onDismiss,\n  DateInputProps,\n  TransitionComponent = Grow,\n  KeyboardDateInputComponent = KeyboardDateInput,\n}) => {\n  const classes = useStyles();\n  const inputRef = React.useRef<HTMLDivElement>(null);\n  const popperRef = React.useRef<HTMLElement>(null);\n\n  useGlobalKeyDown(open, {\n    [keycode.Esc]: onDismiss,\n  });\n\n  const handleBlur = () => {\n    executeInTheNextEventLoopTick(() => {\n      if (\n        inputRef.current?.contains(document.activeElement) ||\n        popperRef.current?.contains(document.activeElement)\n      ) {\n        return;\n      }\n\n      onDismiss();\n    });\n  };\n\n  return (\n    <WrapperVariantContext.Provider value=\"desktop\">\n      <KeyboardDateInputComponent {...DateInputProps} containerRef={inputRef} onBlur={handleBlur} />\n\n      <Popper\n        transition\n        placement=\"bottom\"\n        open={open}\n        anchorEl={inputRef.current}\n        {...PopperProps}\n        className={clsx(classes.popper, PopperProps?.className)}\n      >\n        {({ TransitionProps, placement }) => (\n          <TrapFocus\n            open={open}\n            disableAutoFocus\n            disableEnforceFocus\n            isEnabled={() => true}\n            getDoc={() => popperRef.current?.ownerDocument ?? document}\n          >\n            <TransitionComponent {...TransitionProps} timeout={350}>\n              <Paper\n                ref={popperRef}\n                onBlur={handleBlur}\n                tabIndex={-1}\n                elevation={8}\n                className={clsx(classes.paper, {\n                  [classes.topTransition]: placement === 'top',\n                })}\n              >\n                {children}\n              </Paper>\n            </TransitionComponent>\n          </TrapFocus>\n        )}\n      </Popper>\n    </WrapperVariantContext.Provider>\n  );\n};\n","import * as React from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { IS_TOUCH_DEVICE_MEDIA } from '../constants/dimensions';\nimport { MobileWrapperProps, MobileWrapper } from './MobileWrapper';\nimport { DesktopWrapperProps, DesktopWrapper } from './DesktopWrapper';\nimport { DesktopPopperWrapperProps, DesktopPopperWrapper } from './DesktopPopperWrapper';\n\nexport interface ResponsiveWrapperProps\n  extends DesktopWrapperProps,\n    DesktopPopperWrapperProps,\n    MobileWrapperProps {\n  /** Css media query when `Mobile` mode will be changed to `Desktop`\n   * @default \"@media (pointer: fine)\"\n   * @example \"@media (min-width: 720px)\" or theme.breakpoints.up(\"sm\")\n   */\n  desktopModeMediaQuery?: string;\n}\n\nexport const makeResponsiveWrapper = (\n  DesktopWrapperComponent: React.FC<DesktopWrapperProps | DesktopPopperWrapperProps>,\n  MobileWrapperComponent: React.FC<MobileWrapperProps>\n) => {\n  const ResponsiveWrapper: React.FC<ResponsiveWrapperProps> = ({\n    desktopModeMediaQuery = IS_TOUCH_DEVICE_MEDIA,\n    okLabel,\n    cancelLabel,\n    clearLabel,\n    todayLabel,\n    showTodayButton,\n    clearable,\n    DialogProps,\n    PopoverProps,\n    PopperProps,\n    TransitionComponent,\n    displayStaticWrapperAs,\n    ...other\n  }) => {\n    const isDesktop = useMediaQuery(desktopModeMediaQuery);\n\n    return isDesktop ? (\n      <DesktopWrapperComponent\n        PopperProps={PopperProps}\n        TransitionComponent={TransitionComponent}\n        PopoverProps={PopoverProps}\n        {...other}\n      />\n    ) : (\n      <MobileWrapperComponent\n        okLabel={okLabel}\n        cancelLabel={cancelLabel}\n        clearLabel={clearLabel}\n        todayLabel={todayLabel}\n        showTodayButton={showTodayButton}\n        clearable={clearable}\n        DialogProps={DialogProps}\n        {...other}\n      />\n    );\n  };\n\n  return ResponsiveWrapper;\n};\n\nexport const ResponsiveWrapper = makeResponsiveWrapper(DesktopWrapper, MobileWrapper);\n\nexport const ResponsivePopperWrapper = makeResponsiveWrapper(DesktopPopperWrapper, MobileWrapper);\n","import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DIALOG_WIDTH } from '../constants/dimensions';\nimport { WrapperVariantContext, IsStaticVariantContext } from './WrapperVariantContext';\n\nconst useStyles = makeStyles(\n  theme => ({\n    staticWrapperRoot: {\n      overflow: 'hidden',\n      minWidth: DIALOG_WIDTH,\n      display: 'flex',\n      flexDirection: 'column',\n      backgroundColor: theme.palette.background.paper,\n    },\n  }),\n  { name: 'MuiPickersStaticWrapper' }\n);\n\nexport interface StaticWrapperProps {\n  /**\n   * Force static wrapper inner components to be rendered in mobile or desktop mode\n   * @default \"static\"\n   */\n  displayStaticWrapperAs?: 'desktop' | 'mobile' | 'static';\n}\n\nexport const StaticWrapper: React.FC<StaticWrapperProps> = ({\n  displayStaticWrapperAs = 'static',\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <IsStaticVariantContext.Provider value={true}>\n      <WrapperVariantContext.Provider value={displayStaticWrapperAs}>\n        <div className={classes.staticWrapperRoot} children={children} />\n      </WrapperVariantContext.Provider>\n    </IsStaticVariantContext.Provider>\n  );\n};\n","import * as React from 'react';\nimport { useUtils, MuiPickersAdapter } from './useUtils';\n\nexport interface ValidationProps<TError, TDateValue> {\n  /**\n   * Callback that fired when input value or new `value` prop validation returns **new** validation error (or value is valid after error).\n   * In case of validation error detected `reason` prop return non-null value and `TextField` must be displayed in `error` state.\n   * This can be used to render appropriate form error.\n   *\n   * [Read the guide](https://next.material-ui-pickers.dev/guides/forms) about form integration and error displaying.\n   * @DateIOType\n   */\n  onError?: (reason: TError, value: TDateValue) => void;\n}\n\nexport interface ValidationHookOptions<TError> {\n  defaultValidationError?: TError;\n  isSameError?: (a: TError, b: TError) => boolean;\n}\n\nconst defaultIsSameError = (a: unknown, b: unknown) => a === b;\n\nexport function makeValidationHook<\n  TError,\n  TDateValue,\n  TProps extends ValidationProps<TError, TDateValue>\n>(\n  validateFn: (utils: MuiPickersAdapter, value: TDateValue, props: TProps) => TError,\n  { defaultValidationError, isSameError = defaultIsSameError }: ValidationHookOptions<TError> = {}\n) {\n  return (value: TDateValue, props: TProps) => {\n    const utils = useUtils();\n    const previousValidationErrorRef = React.useRef<TError>(\n      defaultValidationError || null\n    ) as React.MutableRefObject<TError>;\n\n    const validationError = validateFn(utils, value, props);\n\n    React.useEffect(() => {\n      if (props.onError && !isSameError(validationError, previousValidationErrorRef.current)) {\n        props.onError(validationError, value);\n      }\n\n      previousValidationErrorRef.current = validationError;\n    }, [previousValidationErrorRef, props, validationError, value]);\n\n    return validationError;\n  };\n}\n","import * as React from 'react';\nimport { MuiPickersAdapter } from './hooks/useUtils';\nimport { MuiPickersAdapterContext } from '../LocalizationProvider';\n\nexport interface WithDateAdapterProps {\n  /**\n   * Allows to pass configured date-io adapter directly. More info [here](https://material-ui-pickers.dev/guides/date-adapter-passing)\n   * ```jsx\n   * dateAdapter={new DateFnsAdapter({ locale: ruLocale })}\n   * ```\n   */\n  dateAdapter?: MuiPickersAdapter;\n}\n\nexport function withDateAdapterProp<T>(\n  Component: React.ComponentType<T>\n): React.FC<T & WithDateAdapterProps> {\n  return ({ dateAdapter, ...other }: T & WithDateAdapterProps) => {\n    if (dateAdapter) {\n      return (\n        <MuiPickersAdapterContext.Provider value={dateAdapter}>\n          <Component {...(other as T)} />\n        </MuiPickersAdapterContext.Provider>\n      );\n    }\n    return <Component {...(other as T)} />;\n  };\n}\n","import React from 'react';\nimport { StaticWrapperProps } from './StaticWrapper';\nimport { BasePickerProps } from '../typings/BasePicker';\nimport { DateInputProps } from '../_shared/PureDateInput';\nimport { ResponsiveWrapperProps } from './ResponsiveWrapper';\nimport { OmitInnerWrapperProps, SomeWrapper, WrapperProps, DateInputPropsLike } from './Wrapper';\n\ninterface MakePickerOptions<TInputProps> {\n  PureDateInputComponent?: React.FC<TInputProps>;\n  KeyboardDateInputComponent?: React.FC<TInputProps>;\n}\n\ninterface WithWrapperProps<TInputProps = DateInputProps> {\n  children: React.ReactNode;\n  DateInputProps: TInputProps;\n  wrapperProps: Omit<WrapperProps, 'DateInputProps'>;\n}\n\n/** Creates a component that rendering modal/popover/nothing and spreading props down to text field */\nexport function makeWrapperComponent<\n  TInputProps extends DateInputPropsLike<TInputValue, TDateValue>,\n  TInputValue,\n  TDateValue,\n  TWrapper extends SomeWrapper = any\n>(\n  Wrapper: TWrapper,\n  { KeyboardDateInputComponent, PureDateInputComponent }: MakePickerOptions<TInputProps>\n) {\n  function WrapperComponent(\n    props: Partial<BasePickerProps<TInputValue, TDateValue>> &\n      WithWrapperProps<TInputProps> &\n      Partial<OmitInnerWrapperProps<ResponsiveWrapperProps> & StaticWrapperProps>\n  ) {\n    const {\n      open,\n      value,\n      autoOk,\n      inputFormat,\n      defaultHighlight,\n      onChange,\n      children,\n      clearable,\n      clearLabel,\n      DialogProps,\n      PopoverProps,\n      okLabel,\n      cancelLabel,\n      todayLabel,\n      DateInputProps,\n      wrapperProps,\n      wider,\n      showTabs,\n      onAccept,\n      onClose,\n      onOpen,\n      displayStaticWrapperAs,\n      ...restPropsForTextField\n    } = props;\n\n    const WrapperComponent = Wrapper as SomeWrapper;\n\n    return (\n      <WrapperComponent\n        clearable={clearable}\n        clearLabel={clearLabel}\n        DialogProps={DialogProps}\n        okLabel={okLabel}\n        todayLabel={todayLabel}\n        cancelLabel={cancelLabel}\n        DateInputProps={DateInputProps}\n        // @ts-ignore\n        KeyboardDateInputComponent={KeyboardDateInputComponent}\n        // @ts-ignore\n        PureDateInputComponent={PureDateInputComponent}\n        wider={wider}\n        showTabs={showTabs}\n        displayStaticWrapperAs={displayStaticWrapperAs}\n        {...wrapperProps}\n        {...restPropsForTextField}\n      >\n        {children}\n      </WrapperComponent>\n    );\n  }\n\n  return WrapperComponent;\n}\n","import * as React from 'react';\nimport { useUtils } from '../_shared/hooks/useUtils';\nimport { ParsableDate } from '../constants/prop-types';\nimport { MaterialUiPickersDate } from '../typings/date';\nimport { parsePickerInputValue } from '../_helpers/date-utils';\nimport { KeyboardDateInput } from '../_shared/KeyboardDateInput';\nimport { usePickerState } from '../_shared/hooks/usePickerState';\nimport { ResponsiveWrapper } from '../wrappers/ResponsiveWrapper';\nimport { withDateAdapterProp } from '../_shared/withDateAdapterProp';\nimport { makeWrapperComponent } from '../wrappers/makeWrapperComponent';\nimport { PureDateInput, DateInputProps } from '../_shared/PureDateInput';\nimport { AnyPickerView, AllSharedPickerProps } from './SharedPickerProps';\nimport { SomeWrapper, ExtendWrapper, WrapperProps } from '../wrappers/Wrapper';\nimport { Picker, ToolbarComponentProps, ExportedPickerProps, PickerProps } from './Picker';\n\ntype AllAvailableForOverrideProps = ExportedPickerProps<AnyPickerView>;\n\nexport type AllPickerProps<T, TWrapper extends SomeWrapper = SomeWrapper> = T &\n  AllSharedPickerProps &\n  ExtendWrapper<TWrapper>;\n\nexport interface MakePickerOptions<T extends unknown> {\n  /** Hook that running validation for the `value` and input */\n  useValidation: (value: ParsableDate, props: T) => string | null;\n  /** Intercept props to override or inject default props specifically for picker */\n  useInterceptProps: (props: AllPickerProps<T>) => AllPickerProps<T> & { inputFormat: string };\n  DefaultToolbarComponent: React.ComponentType<ToolbarComponentProps>;\n}\n\nexport function makePickerWithStateAndWrapper<\n  T extends AllAvailableForOverrideProps,\n  TWrapper extends SomeWrapper = typeof ResponsiveWrapper\n>(\n  Wrapper: TWrapper,\n  { useInterceptProps, useValidation, DefaultToolbarComponent }: MakePickerOptions<T>\n) {\n  const PickerWrapper = makeWrapperComponent<DateInputProps, ParsableDate, MaterialUiPickersDate>(\n    Wrapper,\n    {\n      KeyboardDateInputComponent: KeyboardDateInput,\n      PureDateInputComponent: PureDateInput,\n    }\n  );\n\n  function PickerWithState(__props: T & AllSharedPickerProps & ExtendWrapper<TWrapper>) {\n    const utils = useUtils();\n    const allProps = useInterceptProps(__props) as AllPickerProps<T, TWrapper>;\n\n    const validationError = useValidation(allProps.value, allProps) !== null;\n    const { pickerProps, inputProps, wrapperProps } = usePickerState<\n      ParsableDate,\n      MaterialUiPickersDate\n    >(allProps, {\n      emptyValue: null,\n      parseInput: parsePickerInputValue,\n      areValuesEqual: (a, b) => utils.isEqual(a, b),\n    });\n\n    // Note that we are passing down all the value without spread.\n    // It saves us >1kb gzip and make any prop available automatically on any level down.\n    const { value, onChange, ...other } = allProps;\n    const DateInputProps = { ...inputProps, ...other, validationError };\n\n    return (\n      <PickerWrapper\n        DateInputProps={DateInputProps}\n        wrapperProps={wrapperProps}\n        {...((other as unknown) as WrapperProps)}\n      >\n        <Picker\n          {...pickerProps}\n          toolbarTitle={allProps.label || allProps.toolbarTitle}\n          DateInputProps={DateInputProps}\n          ToolbarComponent={other.ToolbarComponent || DefaultToolbarComponent}\n          {...((other as unknown) as PickerProps<any>)}\n        />\n      </PickerWrapper>\n    );\n  }\n\n  const FinalPickerComponent = withDateAdapterProp(PickerWithState);\n  return React.forwardRef<HTMLInputElement, React.ComponentProps<typeof FinalPickerComponent>>(\n    (props, ref) => <FinalPickerComponent {...(props as any)} forwardedRef={ref} />\n  );\n}\n"],"names":["useStyles","makeStyles","dialogRoot","minWidth","DIALOG_WIDTH","dialogRootWider","DIALOG_WIDTH_WIDER","dialogContainer","outline","dialog","padding","withAdditionalAction","justifyContent","marginRight","name","ModalDialog","children","onAccept","onDismiss","onClear","onSetToday","okLabel","cancelLabel","clearLabel","todayLabel","clearable","showTodayButton","showTabs","wider","other","classes","React.createElement","container","paper","clsx","displayName","PureDateInput","inputFormat","rawValue","validationError","InputProps","onOpen","openPicker","renderInput","forwardedRef","containerRef","getOpenDialogAriaText","getTextFieldAriaText","disabled","label","TextFieldProps","utils","useUtils","PureDateInputProps","React","readOnly","inputValue","getDisplayDate","ref","inputRef","error","onClick","value","onKeyDown","onSpaceOrEnter","MobileWrapper","open","DialogProps","DateInputProps","PopoverProps","displayStaticWrapperAs","KeyboardDateInputComponent","PureDateInputComponent","propTypes","PropTypes","defaultProps","popover","IS_TOUCH_DEVICE_MEDIA","DesktopWrapper","KeyboardDateInput","current","vertical","horizontal","onClose","theme","popper","zIndex","modal","transformOrigin","topTransition","DesktopPopperWrapper","PopperProps","TransitionComponent","Grow","popperRef","useGlobalKeyDown","keycode","Esc","handleBlur","executeInTheNextEventLoopTick","contains","document","activeElement","className","TransitionProps","placement","ownerDocument","makeResponsiveWrapper","DesktopWrapperComponent","MobileWrapperComponent","ResponsiveWrapper","desktopModeMediaQuery","isDesktop","useMediaQuery","ResponsivePopperWrapper","staticWrapperRoot","overflow","display","flexDirection","backgroundColor","palette","background","StaticWrapper","defaultIsSameError","a","b","makeValidationHook","validateFn","defaultValidationError","isSameError","props","previousValidationErrorRef","onError","withDateAdapterProp","Component","dateAdapter","makeWrapperComponent","Wrapper","WrapperComponent","autoOk","defaultHighlight","onChange","wrapperProps","restPropsForTextField","makePickerWithStateAndWrapper","useInterceptProps","useValidation","DefaultToolbarComponent","PickerWrapper","PickerWithState","__props","allProps","usePickerState","emptyValue","parseInput","parsePickerInputValue","areValuesEqual","isEqual","pickerProps","inputProps","toolbarTitle","ToolbarComponent","FinalPickerComponent"],"mappings":"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"}