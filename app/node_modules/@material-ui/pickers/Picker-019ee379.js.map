{"version":3,"file":"Picker-019ee379.js","sources":["../src/_helpers/date-utils.ts","../src/_helpers/text-field-helper.ts","../src/_shared/hooks/useMaskedInput.tsx","../src/_shared/KeyboardDateInput.tsx","../src/_shared/hooks/date-helpers-hooks.tsx","../src/constants/prop-types.ts","../src/_shared/hooks/useViews.tsx","../src/_shared/hooks/useIsLandscape.tsx","../src/views/MobileKeyboardInputView.tsx","../src/views/Calendar/Month.tsx","../src/views/Calendar/MonthSelection.tsx","../src/views/Calendar/useCalendarState.tsx","../src/views/Calendar/FadeTransitionGroup.tsx","../src/_shared/icons/ArrowDropDownIcon.tsx","../src/views/Calendar/CalendarHeader.tsx","../src/views/Calendar/Year.tsx","../src/views/Calendar/YearSelection.tsx","../src/views/Calendar/CalendarView.tsx","../src/Picker/Picker.tsx"],"sourcesContent":["import { arrayIncludes } from './utils';\nimport { IUtils } from '@date-io/core/IUtils';\nimport { ParsableDate } from '../constants/prop-types';\nimport { MaterialUiPickersDate } from '../typings/date';\nimport { BasePickerProps } from '../typings/BasePicker';\nimport { DatePickerView } from '../DatePicker/DatePicker';\nimport { MuiPickersAdapter } from '../_shared/hooks/useUtils';\nimport { DateRange, RangeInput } from '../DateRangePicker/RangeTypes';\n\ninterface FindClosestDateParams {\n  date: MaterialUiPickersDate;\n  utils: IUtils<MaterialUiPickersDate>;\n  minDate: MaterialUiPickersDate;\n  maxDate: MaterialUiPickersDate;\n  disableFuture: boolean;\n  disablePast: boolean;\n  shouldDisableDate: (date: MaterialUiPickersDate) => boolean;\n}\n\nexport const findClosestEnabledDate = ({\n  date,\n  utils,\n  minDate,\n  maxDate,\n  disableFuture,\n  disablePast,\n  shouldDisableDate,\n}: FindClosestDateParams) => {\n  const today = utils.startOfDay(utils.date());\n\n  if (disablePast && utils.isBefore(minDate!, today)) {\n    minDate = today;\n  }\n\n  if (disableFuture && utils.isAfter(maxDate, today)) {\n    maxDate = today;\n  }\n\n  let forward = date;\n  let backward = date;\n  if (utils.isBefore(date, minDate)) {\n    forward = utils.date(minDate);\n    backward = null;\n  }\n\n  if (utils.isAfter(date, maxDate)) {\n    if (backward) {\n      backward = utils.date(maxDate);\n    }\n\n    forward = null;\n  }\n\n  while (forward || backward) {\n    if (forward && utils.isAfter(forward, maxDate)) {\n      forward = null;\n    }\n    if (backward && utils.isBefore(backward, minDate)) {\n      backward = null;\n    }\n\n    if (forward) {\n      if (!shouldDisableDate(forward)) {\n        return forward;\n      }\n      forward = utils.addDays(forward, 1);\n    }\n\n    if (backward) {\n      if (!shouldDisableDate(backward)) {\n        return backward;\n      }\n      backward = utils.addDays(backward, -1);\n    }\n  }\n\n  // fallback to today if no enabled days\n  return utils.date();\n};\n\nexport const isYearOnlyView = (views: readonly DatePickerView[]) =>\n  views.length === 1 && views[0] === 'year';\n\nexport const isYearAndMonthViews = (views: readonly DatePickerView[]) =>\n  views.length === 2 && arrayIncludes(views, 'month') && arrayIncludes(views, 'year');\n\nexport const getFormatByViews = (\n  views: readonly DatePickerView[],\n  utils: IUtils<MaterialUiPickersDate>\n) => {\n  if (isYearOnlyView(views)) {\n    return utils.formats.year;\n  }\n\n  if (isYearAndMonthViews(views)) {\n    return utils.formats.monthAndYear;\n  }\n\n  return utils.formats.keyboardDate;\n};\n\nexport function parsePickerInputValue(\n  now: MaterialUiPickersDate,\n  utils: MuiPickersAdapter,\n  { value, defaultHighlight }: Pick<BasePickerProps, 'value' | 'defaultHighlight'>\n): MaterialUiPickersDate | null {\n  const parsedValue = utils.date(value || defaultHighlight || now);\n\n  return parsedValue && utils.isValid(parsedValue) ? parsedValue : now;\n}\n\nexport function parseRangeInputValue(\n  now: MaterialUiPickersDate,\n  utils: MuiPickersAdapter,\n  { value = [null, null] }: BasePickerProps<RangeInput, DateRange>\n) {\n  return value.map(date =>\n    !utils.isValid(date) || date === null ? null : utils.startOfDay(utils.date(date))\n  ) as DateRange;\n}\n\nexport const isRangeValid = (\n  utils: MuiPickersAdapter,\n  range: DateRange | null\n): range is DateRange => {\n  return Boolean(range && range[0] && range[1] && utils.isBefore(range[0], range[1]));\n};\n\nexport const isWithinRange = (\n  utils: MuiPickersAdapter,\n  day: MaterialUiPickersDate,\n  range: DateRange | null\n) => {\n  return isRangeValid(utils, range) && utils.isWithinRange(day, range);\n};\n\nexport const isStartOfRange = (\n  utils: MuiPickersAdapter,\n  day: MaterialUiPickersDate,\n  range: DateRange | null\n) => {\n  return isRangeValid(utils, range) && utils.isSameDay(day, range[0]);\n};\n\nexport const isEndOfRange = (\n  utils: MuiPickersAdapter,\n  day: MaterialUiPickersDate,\n  range: DateRange | null\n) => {\n  return isRangeValid(utils, range) && utils.isSameDay(day, range[1]);\n};\n\nexport interface DateValidationProps {\n  /**\n   * Min selectable date\n   * @default Date(1900-01-01)\n   */\n  minDate?: MaterialUiPickersDate;\n  /**\n   * Max selectable date\n   * @default Date(2100-01-01)\n   */\n  maxDate?: MaterialUiPickersDate;\n  /** Disable specific date @DateIOType */\n  shouldDisableDate?: (day: MaterialUiPickersDate) => boolean;\n  /**\n   * Disable past dates\n   * @default false\n   */\n  disablePast?: boolean;\n  /**\n   * Disable future dates\n   * @default false\n   */\n  disableFuture?: boolean;\n}\n\nexport const validateDate = (\n  utils: MuiPickersAdapter,\n  value: MaterialUiPickersDate | ParsableDate,\n  { minDate, maxDate, disableFuture, shouldDisableDate, disablePast }: DateValidationProps\n) => {\n  const now = utils.date();\n  const date = utils.date(value);\n\n  if (value === null) {\n    return null;\n  }\n\n  switch (true) {\n    case !utils.isValid(value):\n      return 'invalidDate';\n\n    case Boolean(shouldDisableDate && shouldDisableDate(date)):\n      return 'shouldDisableDate';\n\n    case Boolean(disableFuture && utils.isAfterDay(date, now)):\n      return 'disableFuture';\n\n    case Boolean(disablePast && utils.isBeforeDay(date, now)):\n      return 'disablePast';\n\n    case Boolean(minDate && utils.isBeforeDay(date, minDate)):\n      return 'minDate';\n\n    case Boolean(maxDate && utils.isAfterDay(date, maxDate)):\n      return 'maxDate';\n\n    default:\n      return null;\n  }\n};\n\nexport type DateValidationError = ReturnType<typeof validateDate>;\n\ntype DateRangeValidationErrorValue = DateValidationError | 'invalidRange' | null;\n\nexport type DateRangeValidationError = [\n  DateRangeValidationErrorValue,\n  DateRangeValidationErrorValue\n];\n\nexport const validateDateRange = (\n  utils: MuiPickersAdapter,\n  value: RangeInput,\n  dateValidationProps: DateValidationProps\n): [DateRangeValidationErrorValue, DateRangeValidationErrorValue] => {\n  const [start, end] = value;\n\n  // for partial input\n  if (start === null || end === null) {\n    return [null, null];\n  }\n\n  const dateValidations = [\n    validateDate(utils, start, dateValidationProps),\n    validateDate(utils, end, dateValidationProps),\n  ] as [DateRangeValidationErrorValue, DateRangeValidationErrorValue];\n\n  if (dateValidations[0] || dateValidations[1]) {\n    return dateValidations;\n  }\n\n  if (!isRangeValid(utils, [utils.date(start), utils.date(end)])) {\n    return ['invalidRange', 'invalidRange'];\n  }\n\n  return [null, null];\n};\n","import { ParsableDate } from '../constants/prop-types';\nimport { MuiPickersAdapter } from '../_shared/hooks/useUtils';\n\nexport function getTextFieldAriaText(rawValue: ParsableDate, utils: MuiPickersAdapter) {\n  return rawValue && utils.isValid(utils.date(rawValue))\n    ? `Choose date, selected date is ${utils.format(utils.date(rawValue), 'fullDate')}`\n    : 'Choose date';\n}\n\nexport const getDisplayDate = (\n  utils: MuiPickersAdapter,\n  value: ParsableDate,\n  inputFormat: string\n) => {\n  const date = utils.date(value);\n  const isEmpty = value === null;\n\n  if (isEmpty) {\n    return '';\n  }\n\n  return utils.isValid(date) ? utils.formatByString(date, inputFormat) : '';\n};\n\nexport function pick12hOr24hFormat(\n  userFormat: string | undefined,\n  ampm: boolean | undefined,\n  formats: { localized: string; '12h': string; '24h': string }\n) {\n  if (userFormat) {\n    return userFormat;\n  }\n\n  if (typeof ampm === 'undefined') {\n    return formats.localized;\n  }\n\n  return ampm ? formats['12h'] : formats['24h'];\n}\n\nconst MASK_USER_INPUT_SYMBOL = '_';\nexport const staticDateWith2DigitTokens = new Date('2019-11-21T22:30:00.000');\nexport const staticDateWith1DigitTokens = new Date('2019-01-01T09:00:00.000');\n\nexport function checkMaskIsValidForCurrentFormat(\n  mask: string,\n  format: string,\n  acceptRegex: RegExp,\n  utils: MuiPickersAdapter\n) {\n  const formattedDateWith1Digit = utils.formatByString(\n    utils.date(staticDateWith1DigitTokens),\n    format\n  );\n  const inferredFormatPatternWith1Digits = formattedDateWith1Digit.replace(\n    acceptRegex,\n    MASK_USER_INPUT_SYMBOL\n  );\n\n  const inferredFormatPatternWith2Digits = utils\n    .formatByString(utils.date(staticDateWith2DigitTokens), format)\n    .replace(acceptRegex, '_');\n\n  const isMaskValid =\n    inferredFormatPatternWith2Digits === mask && inferredFormatPatternWith1Digits === mask;\n\n  // @ts-ignore\n  if (!isMaskValid && process.env.NODE_ENV !== 'production') {\n    console.warn(\n      `The mask \"${mask}\" you passed is not valid for the format used ${format}. Falling down to uncontrolled not-masked input.`\n    );\n  }\n\n  return isMaskValid;\n}\n\nexport const maskedDateFormatter = (mask: string, acceptRegexp: RegExp) => (value: string) => {\n  return value\n    .split('')\n    .map((char, i) => {\n      acceptRegexp.lastIndex = 0;\n\n      if (i > mask.length - 1) {\n        return '';\n      }\n\n      const maskChar = mask[i];\n      const nextMaskChar = mask[i + 1];\n\n      const acceptedChar = acceptRegexp.test(char) ? char : '';\n      const formattedChar =\n        maskChar === MASK_USER_INPUT_SYMBOL ? acceptedChar : maskChar + acceptedChar;\n\n      if (i === value.length - 1 && nextMaskChar && nextMaskChar !== MASK_USER_INPUT_SYMBOL) {\n        // when cursor at the end of mask part (e.g. month) prerender next symbol \"21\" -> \"21/\"\n        return formattedChar ? formattedChar + nextMaskChar : '';\n      } else {\n        return formattedChar;\n      }\n    })\n    .join('');\n};\n","import * as React from 'react';\nimport { useRifm } from 'rifm';\nimport { useUtils } from './useUtils';\nimport { createDelegatedEventHandler } from '../../_helpers/utils';\nimport { DateInputProps, MuiTextFieldProps } from '../PureDateInput';\nimport {\n  maskedDateFormatter,\n  getDisplayDate,\n  checkMaskIsValidForCurrentFormat,\n} from '../../_helpers/text-field-helper';\n\ntype MaskedInputProps = Omit<\n  DateInputProps,\n  | 'open'\n  | 'adornmentPosition'\n  | 'renderInput'\n  | 'openPicker'\n  | 'InputProps'\n  | 'InputAdornmentProps'\n  | 'openPickerIcon'\n  | 'disableOpenPicker'\n  | 'getOpenDialogAriaText'\n  | 'OpenPickerButtonProps'\n>;\n\nexport function useMaskedInput({\n  disableMaskedInput,\n  rawValue,\n  validationError,\n  onChange,\n  mask,\n  acceptRegex = /[\\d]/gi,\n  inputFormat,\n  disabled,\n  rifmFormatter,\n  ignoreInvalidInputs,\n  readOnly,\n  TextFieldProps,\n  label,\n}: MaskedInputProps): MuiTextFieldProps {\n  const utils = useUtils();\n  const isFocusedRef = React.useRef(false);\n\n  const getInputValue = React.useCallback(() => getDisplayDate(utils, rawValue, inputFormat), [\n    inputFormat,\n    rawValue,\n    utils,\n  ]);\n\n  const formatHelperText = utils.getFormatHelperText(inputFormat);\n  const [innerInputValue, setInnerInputValue] = React.useState<string>(getInputValue());\n\n  const shouldUseMaskedInput = React.useMemo(() => {\n    // formatting of dates is a quite slow thing, so do not make useless .format calls\n    if (!mask || disableMaskedInput) {\n      return false;\n    }\n\n    return checkMaskIsValidForCurrentFormat(mask, inputFormat, acceptRegex, utils);\n  }, [acceptRegex, disableMaskedInput, inputFormat, mask, utils]);\n\n  const formatter = React.useMemo(\n    () =>\n      shouldUseMaskedInput && mask ? maskedDateFormatter(mask, acceptRegex) : (st: string) => st,\n    [acceptRegex, mask, shouldUseMaskedInput]\n  );\n\n  React.useEffect(() => {\n    // We do not need to update the input value on keystroke\n    // Because library formatters can change inputs from 12/12/2 to 12/12/0002\n    if ((rawValue === null || utils.isValid(rawValue)) && !isFocusedRef.current) {\n      setInnerInputValue(getInputValue());\n    }\n  }, [utils, getInputValue, rawValue]);\n\n  const handleChange = (text: string) => {\n    const finalString = text === '' || text === mask ? '' : text;\n    setInnerInputValue(finalString);\n\n    const date = finalString === null ? null : utils.parse(finalString, inputFormat);\n    if (ignoreInvalidInputs && !utils.isValid(date)) {\n      return;\n    }\n\n    onChange(date, finalString || undefined);\n  };\n\n  const rifmProps = useRifm({\n    value: innerInputValue,\n    onChange: handleChange,\n    format: rifmFormatter || formatter,\n  });\n\n  const inputStateArgs = shouldUseMaskedInput\n    ? rifmProps\n    : {\n        value: innerInputValue,\n        onChange: (e: React.ChangeEvent<HTMLInputElement>) => handleChange(e.currentTarget.value),\n      };\n\n  return {\n    ...inputStateArgs,\n    label,\n    disabled,\n    placeholder: formatHelperText,\n    error: validationError,\n    helperText: formatHelperText,\n    // @ts-ignore ??? fix typings for textfield finally\n    'data-mui-test': 'keyboard-date-input',\n    inputProps: { readOnly, type: shouldUseMaskedInput ? 'tel' : 'text' },\n    ...TextFieldProps,\n    onFocus: createDelegatedEventHandler(\n      () => (isFocusedRef.current = true),\n      TextFieldProps?.onFocus\n    ),\n    onBlur: createDelegatedEventHandler(\n      () => (isFocusedRef.current = false),\n      TextFieldProps?.onBlur\n    ),\n  };\n}\n","import * as React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { useUtils } from './hooks/useUtils';\nimport { CalendarIcon } from './icons/CalendarIcon';\nimport { useMaskedInput } from './hooks/useMaskedInput';\nimport { DateInputProps, DateInputRefs } from './PureDateInput';\nimport { getTextFieldAriaText } from '../_helpers/text-field-helper';\n\nexport const KeyboardDateInput: React.FC<DateInputProps & DateInputRefs> = ({\n  renderInput,\n  openPicker: onOpen,\n  InputProps,\n  InputAdornmentProps,\n  openPickerIcon = <CalendarIcon />,\n  OpenPickerButtonProps,\n  disableOpenPicker: hideOpenPickerButton,\n  getOpenDialogAriaText = getTextFieldAriaText,\n  containerRef,\n  forwardedRef,\n  ...other\n}) => {\n  const utils = useUtils();\n  const textFieldProps = useMaskedInput(other);\n  const adornmentPosition = InputAdornmentProps?.position || 'end';\n\n  return renderInput({\n    ref: containerRef,\n    inputRef: forwardedRef,\n    ...textFieldProps,\n    InputProps: {\n      ...InputProps,\n      [`${adornmentPosition}Adornment`]: hideOpenPickerButton ? (\n        undefined\n      ) : (\n        <InputAdornment position={adornmentPosition} {...InputAdornmentProps}>\n          <IconButton\n            edge={adornmentPosition}\n            data-mui-test=\"open-picker-from-keyboard\"\n            disabled={other.disabled}\n            aria-label={getOpenDialogAriaText(other.rawValue, utils)}\n            {...OpenPickerButtonProps}\n            onClick={onOpen}\n          >\n            {openPickerIcon}\n          </IconButton>\n        </InputAdornment>\n      ),\n    },\n  });\n};\n\nexport default KeyboardDateInput;\n","import * as React from 'react';\nimport { useUtils } from './useUtils';\nimport { MaterialUiPickersDate } from '../../typings/date';\n\nexport function useParsedDate(possiblyUnparsedValue: any): MaterialUiPickersDate | undefined {\n  const utils = useUtils();\n  return React.useMemo(\n    () =>\n      typeof possiblyUnparsedValue === 'undefined' ? undefined : utils.date(possiblyUnparsedValue)!,\n    [possiblyUnparsedValue, utils]\n  );\n}\n\ninterface MonthValidationOptions {\n  disablePast?: boolean;\n  disableFuture?: boolean;\n  minDate: MaterialUiPickersDate;\n  maxDate: MaterialUiPickersDate;\n}\n\nexport function useNextMonthDisabled(\n  month: MaterialUiPickersDate,\n  { disableFuture, maxDate }: Pick<MonthValidationOptions, 'disableFuture' | 'maxDate'>\n) {\n  const utils = useUtils();\n  return React.useMemo(() => {\n    const now = utils.date();\n    const lastEnabledMonth = utils.startOfMonth(\n      disableFuture && utils.isBefore(now, maxDate) ? now : maxDate\n    );\n    return !utils.isAfter(lastEnabledMonth, month);\n  }, [disableFuture, maxDate, month, utils]);\n}\n\nexport function usePreviousMonthDisabled(\n  month: MaterialUiPickersDate,\n  { disablePast, minDate }: Pick<MonthValidationOptions, 'disablePast' | 'minDate'>\n) {\n  const utils = useUtils();\n\n  return React.useMemo(() => {\n    const now = utils.date();\n    const firstEnabledMonth = utils.startOfMonth(\n      disablePast && utils.isAfter(now, minDate) ? now : minDate\n    );\n    return !utils.isBefore(firstEnabledMonth, month);\n  }, [disablePast, minDate, month, utils]);\n}\n","import * as PropTypes from 'prop-types';\nimport { MaterialUiPickersDate } from '../typings/date';\n\nconst date = PropTypes.oneOfType([\n  PropTypes.object,\n  PropTypes.string,\n  PropTypes.number,\n  PropTypes.instanceOf(Date),\n]);\n\nconst datePickerView = PropTypes.oneOf(['year', 'month', 'day']);\n\nexport type ParsableDate = string | number | Date | null | undefined | MaterialUiPickersDate;\n\nexport const DomainPropTypes = { date, datePickerView };\n\nexport const defaultMinDate = new Date('1900-01-01');\n\nexport const defaultMaxDate = new Date('2100-01-01');\n","import * as React from 'react';\nimport { arrayIncludes } from '../../_helpers/utils';\nimport { MaterialUiPickersDate } from '../../typings/date';\nimport { AnyPickerView } from '../../Picker/SharedPickerProps';\n\nexport type PickerOnChangeFn = (date: MaterialUiPickersDate, isFinish?: boolean | symbol) => void;\n\nexport function useViews({\n  views,\n  openTo,\n  onChange,\n  isMobileKeyboardViewOpen,\n  toggleMobileKeyboardView,\n}: {\n  views: AnyPickerView[];\n  openTo: AnyPickerView;\n  onChange: PickerOnChangeFn;\n  isMobileKeyboardViewOpen: boolean;\n  toggleMobileKeyboardView: () => void;\n}) {\n  const [openView, _setOpenView] = React.useState(\n    openTo && arrayIncludes(views, openTo) ? openTo : views[0]\n  );\n\n  const setOpenView = React.useCallback(\n    (...args: Parameters<typeof _setOpenView>) => {\n      if (isMobileKeyboardViewOpen) {\n        toggleMobileKeyboardView();\n      }\n\n      _setOpenView(...args);\n    },\n    [isMobileKeyboardViewOpen, toggleMobileKeyboardView]\n  );\n\n  const previousView = views[views.indexOf(openView!) - 1];\n  const nextView = views[views.indexOf(openView!) + 1];\n  const openNext = React.useCallback(() => {\n    if (nextView) {\n      setOpenView(nextView);\n    }\n  }, [nextView, setOpenView]);\n\n  const handleChangeAndOpenNext = React.useCallback(\n    (date: MaterialUiPickersDate, isFinishedSelectionInCurrentView?: boolean | symbol) => {\n      onChange(date, Boolean(nextView) ? false : isFinishedSelectionInCurrentView);\n\n      if (isFinishedSelectionInCurrentView) {\n        openNext();\n      }\n    },\n    [nextView, onChange, openNext]\n  );\n\n  return {\n    nextView,\n    previousView,\n    openNext,\n    handleChangeAndOpenNext,\n    openView,\n    setOpenView,\n  };\n}\n","import * as React from 'react';\nimport { useIsomorphicEffect } from './useKeyDown';\nimport { arrayIncludes } from '../../_helpers/utils';\nimport { DateTimePickerView } from '../../DateTimePicker';\nimport { BasePickerProps } from '../../typings/BasePicker';\n\nconst getOrientation = () => {\n  if (typeof window === 'undefined') {\n    return 'portrait';\n  }\n\n  if (window.screen && window.screen.orientation && window.screen.orientation.angle) {\n    return Math.abs(window.screen.orientation.angle) === 90 ? 'landscape' : 'portrait';\n  }\n\n  // Support IOS safari\n  if (window.orientation) {\n    return Math.abs(Number(window.orientation)) === 90 ? 'landscape' : 'portrait';\n  }\n\n  return 'portrait';\n};\n\nexport function useIsLandscape(\n  views: DateTimePickerView[],\n  customOrientation?: BasePickerProps['orientation']\n): boolean {\n  const [orientation, setOrientation] = React.useState<BasePickerProps['orientation']>(\n    getOrientation()\n  );\n\n  const eventHandler = React.useCallback(() => setOrientation(getOrientation()), []);\n\n  useIsomorphicEffect(() => {\n    window.addEventListener('orientationchange', eventHandler);\n    return () => window.removeEventListener('orientationchange', eventHandler);\n  }, [eventHandler]);\n\n  if (arrayIncludes(views, ['hours', 'minutes', 'seconds'])) {\n    // could not display 13:34:44 in landscape mode\n    return false;\n  }\n\n  const orientationToUse = customOrientation || orientation;\n  return orientationToUse === 'landscape';\n}\n","import { styled } from '@material-ui/core/styles';\n\nexport const MobileKeyboardInputView = styled('div')({\n  padding: '16px 24px',\n});\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { onSpaceOrEnter } from '../../_helpers/utils';\n\nexport interface MonthProps {\n  children: React.ReactNode;\n  disabled?: boolean;\n  onSelect: (value: any) => void;\n  selected?: boolean;\n  value: any;\n}\n\nexport const useStyles = makeStyles(\n  theme => ({\n    root: {\n      flex: '1 0 33.33%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      cursor: 'pointer',\n      outline: 'none',\n      height: 64,\n      transition: theme.transitions.create('font-size', { duration: '100ms' }),\n      '&:focus': {\n        color: theme.palette.primary.main,\n        fontWeight: theme.typography.fontWeightMedium,\n      },\n    },\n    monthSelected: {\n      color: theme.palette.primary.main,\n      fontWeight: theme.typography.fontWeightMedium,\n    },\n    monthDisabled: {\n      pointerEvents: 'none',\n      color: theme.palette.text.hint,\n    },\n  }),\n  { name: 'MuiPickersMonth' }\n);\n\nexport const Month: React.FC<MonthProps> = ({\n  selected,\n  onSelect,\n  disabled,\n  value,\n  children,\n  ...other\n}) => {\n  const classes = useStyles();\n  const handleSelection = React.useCallback(() => {\n    onSelect(value);\n  }, [onSelect, value]);\n\n  return (\n    <Typography\n      data-mui-test=\"month\"\n      role=\"button\"\n      component=\"div\"\n      className={clsx(classes.root, {\n        [classes.monthSelected]: selected,\n        [classes.monthDisabled]: disabled,\n      })}\n      tabIndex={disabled ? -1 : 0}\n      onClick={handleSelection}\n      onKeyDown={onSpaceOrEnter(handleSelection)}\n      color={selected ? 'primary' : undefined}\n      variant={selected ? 'h5' : 'subtitle1'}\n      children={children}\n      {...other}\n    />\n  );\n};\n\nMonth.displayName = 'Month';\n\nexport default Month;\n","import * as React from 'react';\nimport Month from './Month';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useUtils } from '../../_shared/hooks/useUtils';\nimport { ParsableDate } from '../../constants/prop-types';\nimport { MaterialUiPickersDate } from '../../typings/date';\n\nexport interface MonthSelectionProps {\n  date: MaterialUiPickersDate;\n  minDate?: ParsableDate;\n  maxDate?: ParsableDate;\n  onChange: (date: MaterialUiPickersDate, isFinish: boolean) => void;\n  disablePast?: boolean | null | undefined;\n  disableFuture?: boolean | null | undefined;\n  onMonthChange?: (date: MaterialUiPickersDate) => void | Promise<void>;\n}\n\nexport const useStyles = makeStyles(\n  {\n    container: {\n      width: 310,\n      display: 'flex',\n      flexWrap: 'wrap',\n      alignContent: 'stretch',\n    },\n  },\n  { name: 'MuiPickersMonthSelection' }\n);\n\nexport const MonthSelection: React.FC<MonthSelectionProps> = ({\n  disablePast,\n  disableFuture,\n  minDate,\n  maxDate,\n  date,\n  onMonthChange,\n  onChange,\n}) => {\n  const utils = useUtils();\n  const classes = useStyles();\n  const currentMonth = utils.getMonth(date);\n\n  const shouldDisableMonth = (month: MaterialUiPickersDate) => {\n    const now = utils.date();\n    const utilMinDate = utils.date(minDate);\n    const utilMaxDate = utils.date(maxDate);\n\n    const firstEnabledMonth = utils.startOfMonth(\n      disablePast && utils.isAfter(now, utilMinDate) ? now : utilMinDate\n    );\n\n    const lastEnabledMonth = utils.startOfMonth(\n      disableFuture && utils.isBefore(now, utilMaxDate) ? now : utilMaxDate\n    );\n\n    const isBeforeFirstEnabled = utils.isBefore(month, firstEnabledMonth);\n    const isAfterLastEnabled = utils.isAfter(month, lastEnabledMonth);\n\n    return isBeforeFirstEnabled || isAfterLastEnabled;\n  };\n\n  const onMonthSelect = React.useCallback(\n    (month: number) => {\n      const newDate = utils.setMonth(date, month);\n\n      onChange(newDate, true);\n      if (onMonthChange) {\n        onMonthChange(newDate);\n      }\n    },\n    [date, onChange, onMonthChange, utils]\n  );\n\n  return (\n    <div className={classes.container}>\n      {utils.getMonthArray(date).map(month => {\n        const monthNumber = utils.getMonth(month);\n        const monthText = utils.format(month, 'monthShort');\n\n        return (\n          <Month\n            key={monthText}\n            value={monthNumber}\n            selected={monthNumber === currentMonth}\n            onSelect={onMonthSelect}\n            disabled={shouldDisableMonth(month)}\n          >\n            {monthText}\n          </Month>\n        );\n      })}\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { CalendarViewProps } from './CalendarView';\nimport { SlideDirection } from './SlideTransition';\nimport { validateDate } from '../../_helpers/date-utils';\nimport { MaterialUiPickersDate } from '../../typings/date';\nimport { MuiPickersAdapter, useUtils } from '../../_shared/hooks/useUtils';\n\ninterface State {\n  isMonthSwitchingAnimating: boolean;\n  loadingQueue: number;\n  currentMonth: MaterialUiPickersDate;\n  focusedDay: MaterialUiPickersDate | null;\n  slideDirection: SlideDirection;\n}\n\ntype ReducerAction<TType, TAdditional = {}> = { type: TType } & TAdditional;\n\ninterface ChangeMonthPayload {\n  direction: SlideDirection;\n  newMonth: MaterialUiPickersDate;\n}\n\nexport const createCalendarStateReducer = (\n  reduceAnimations: boolean,\n  disableSwitchToMonthOnDayFocus: boolean,\n  utils: MuiPickersAdapter\n) => (\n  state: State,\n  action:\n    | ReducerAction<'popLoadingQueue'>\n    | ReducerAction<'finishMonthSwitchingAnimation'>\n    | ReducerAction<'changeMonth', ChangeMonthPayload>\n    | ReducerAction<'changeMonthLoading', ChangeMonthPayload>\n    | ReducerAction<'changeFocusedDay', { focusedDay: MaterialUiPickersDate }>\n): State => {\n  switch (action.type) {\n    case 'changeMonthLoading': {\n      return {\n        ...state,\n        loadingQueue: state.loadingQueue + 1,\n        slideDirection: action.direction,\n        currentMonth: action.newMonth,\n        isMonthSwitchingAnimating: !reduceAnimations,\n      };\n    }\n    case 'changeMonth': {\n      return {\n        ...state,\n        slideDirection: action.direction,\n        currentMonth: action.newMonth,\n        isMonthSwitchingAnimating: !reduceAnimations,\n      };\n    }\n    case 'popLoadingQueue': {\n      return {\n        ...state,\n        loadingQueue: state.loadingQueue <= 0 ? 0 : state.loadingQueue - 1,\n      };\n    }\n    case 'finishMonthSwitchingAnimation': {\n      return {\n        ...state,\n        isMonthSwitchingAnimating: false,\n      };\n    }\n    case 'changeFocusedDay': {\n      const needMonthSwitch =\n        !disableSwitchToMonthOnDayFocus &&\n        !utils.isSameMonth(state.currentMonth, action.focusedDay);\n      return {\n        ...state,\n        focusedDay: action.focusedDay,\n        isMonthSwitchingAnimating: needMonthSwitch && !reduceAnimations,\n        currentMonth: needMonthSwitch ? utils.startOfMonth(action.focusedDay) : state.currentMonth,\n        slideDirection: utils.isAfterDay(action.focusedDay, state.currentMonth) ? 'left' : 'right',\n      };\n    }\n  }\n};\n\ntype CalendarStateInput = Pick<\n  CalendarViewProps,\n  | 'disableFuture'\n  | 'disablePast'\n  | 'shouldDisableDate'\n  | 'date'\n  | 'reduceAnimations'\n  | 'onMonthChange'\n> & {\n  minDate: MaterialUiPickersDate;\n  maxDate: MaterialUiPickersDate;\n  disableSwitchToMonthOnDayFocus?: boolean;\n};\n\nexport function useCalendarState({\n  date,\n  reduceAnimations,\n  onMonthChange,\n  disablePast,\n  disableFuture,\n  minDate,\n  maxDate,\n  shouldDisableDate,\n  disableSwitchToMonthOnDayFocus = false,\n}: CalendarStateInput) {\n  const utils = useUtils();\n  const reducerFn = React.useRef(\n    createCalendarStateReducer(Boolean(reduceAnimations), disableSwitchToMonthOnDayFocus, utils)\n  );\n\n  const [{ loadingQueue, ...calendarState }, dispatch] = React.useReducer(reducerFn.current, {\n    isMonthSwitchingAnimating: false,\n    loadingQueue: 0,\n    focusedDay: date,\n    currentMonth: utils.startOfMonth(date),\n    slideDirection: 'left',\n  });\n\n  const handleChangeMonth = React.useCallback(\n    (payload: ChangeMonthPayload) => {\n      const returnedPromise = onMonthChange && onMonthChange(payload.newMonth);\n\n      if (returnedPromise) {\n        dispatch({\n          type: 'changeMonthLoading',\n          ...payload,\n        });\n\n        returnedPromise.then(() => dispatch({ type: 'popLoadingQueue' }));\n      } else {\n        dispatch({\n          type: 'changeMonth',\n          ...payload,\n        });\n      }\n    },\n    [onMonthChange]\n  );\n\n  const changeMonth = React.useCallback(\n    (date: MaterialUiPickersDate) => {\n      if (utils.isSameMonth(date, calendarState.currentMonth)) {\n        return;\n      }\n\n      handleChangeMonth({\n        newMonth: utils.startOfMonth(date),\n        direction: utils.isAfterDay(date, calendarState.currentMonth) ? 'left' : 'right',\n      });\n    },\n    [calendarState.currentMonth, handleChangeMonth, utils]\n  );\n\n  const isDateDisabled = React.useCallback(\n    (day: MaterialUiPickersDate) => {\n      return (\n        validateDate(utils, day, {\n          disablePast,\n          disableFuture,\n          minDate,\n          maxDate,\n          shouldDisableDate,\n        }) !== null\n      );\n    },\n    [disableFuture, disablePast, maxDate, minDate, shouldDisableDate, utils]\n  );\n\n  const onMonthSwitchingAnimationEnd = React.useCallback(() => {\n    dispatch({ type: 'finishMonthSwitchingAnimation' });\n  }, []);\n\n  const changeFocusedDay = React.useCallback(\n    (newFocusedDate: MaterialUiPickersDate) => {\n      if (!isDateDisabled(newFocusedDate)) {\n        dispatch({ type: 'changeFocusedDay', focusedDay: newFocusedDate });\n      }\n    },\n    [isDateDisabled]\n  );\n\n  return {\n    loadingQueue,\n    calendarState,\n    changeMonth,\n    changeFocusedDay,\n    isDateDisabled,\n    onMonthSwitchingAnimationEnd,\n    handleChangeMonth,\n  };\n}\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\ninterface FadeTransitionProps {\n  transKey: React.Key;\n  className?: string;\n  reduceAnimations: boolean;\n  children: React.ReactElement;\n}\n\nconst animationDuration = 500;\nexport const useStyles = makeStyles(\n  theme => {\n    return {\n      transitionContainer: {\n        display: 'block',\n        position: 'relative',\n      },\n      fadeEnter: {\n        willChange: 'transform',\n        opacity: 0,\n      },\n      fadeEnterActive: {\n        opacity: 1,\n        transition: theme.transitions.create('opacity', {\n          duration: animationDuration,\n        }),\n      },\n      fadeExit: {\n        opacity: 1,\n      },\n      fadeExitActive: {\n        opacity: 0,\n        transition: theme.transitions.create('opacity', {\n          duration: animationDuration / 2,\n        }),\n      },\n    };\n  },\n  { name: 'MuiPickersFadeTransition' }\n);\n\nexport const FadeTransitionGroup: React.FC<FadeTransitionProps> = ({\n  children,\n  transKey,\n  reduceAnimations,\n  className = null,\n}) => {\n  const classes = useStyles();\n  if (reduceAnimations) {\n    return children;\n  }\n\n  const transitionClasses = {\n    exit: classes.fadeExit,\n    enterActive: classes.fadeEnterActive,\n    enter: classes.fadeEnter,\n    exitActive: classes.fadeExitActive,\n  };\n\n  return (\n    <TransitionGroup\n      className={clsx(classes.transitionContainer, className)}\n      childFactory={element =>\n        React.cloneElement(element, {\n          classNames: transitionClasses,\n        })\n      }\n    >\n      <CSSTransition\n        mountOnEnter\n        unmountOnExit\n        key={transKey}\n        timeout={{ appear: animationDuration, enter: animationDuration / 2, exit: 0 }}\n        classNames={transitionClasses}\n        children={children}\n      />\n    </TransitionGroup>\n  );\n};\n","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n\n/**\n * @ignore - internal component.\n */\nexport const ArrowDropDownIcon = createSvgIcon(<path d=\"M7 10l5 5 5-5z\" />, 'ArrowDropDown');\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Fade from '@material-ui/core/Fade';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport { DatePickerView } from '../../DatePicker';\nimport { SlideDirection } from './SlideTransition';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useUtils } from '../../_shared/hooks/useUtils';\nimport { MaterialUiPickersDate } from '../../typings/date';\nimport { FadeTransitionGroup } from './FadeTransitionGroup';\nimport { DateValidationProps } from '../../_helpers/date-utils';\nimport { ArrowDropDownIcon } from '../../_shared/icons/ArrowDropDownIcon';\nimport { ArrowSwitcher, ExportedArrowSwitcherProps } from '../../_shared/ArrowSwitcher';\nimport {\n  usePreviousMonthDisabled,\n  useNextMonthDisabled,\n} from '../../_shared/hooks/date-helpers-hooks';\n\nexport interface CalendarHeaderProps\n  extends ExportedArrowSwitcherProps,\n    Omit<DateValidationProps, 'shouldDisableDate'> {\n  view: DatePickerView;\n  views: DatePickerView[];\n  currentMonth: MaterialUiPickersDate;\n  /** Get aria-label text for switching between views button */\n  getViewSwitchingButtonText?: (currentView: DatePickerView) => string;\n  reduceAnimations: boolean;\n  changeView: (view: DatePickerView) => void;\n  minDate: MaterialUiPickersDate;\n  maxDate: MaterialUiPickersDate;\n  onMonthChange: (date: MaterialUiPickersDate, slideDirection: SlideDirection) => void;\n}\n\nexport const useStyles = makeStyles(\n  theme => ({\n    switchHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      marginTop: 16,\n      marginBottom: 8,\n      paddingLeft: 24,\n      paddingRight: 12,\n      // prevent jumping in safari\n      maxHeight: 30,\n      minHeight: 30,\n    },\n    yearSelectionSwitcher: {\n      marginRight: 'auto',\n    },\n    previousMonthButton: {\n      marginRight: 24,\n    },\n    switchViewDropdown: {\n      willChange: 'transform',\n      transition: theme.transitions.create('transform'),\n      transform: 'rotate(0deg)',\n    },\n    switchViewDropdownDown: {\n      transform: 'rotate(180deg)',\n    },\n    monthTitleContainer: {\n      display: 'flex',\n      maxHeight: 30,\n      overflow: 'hidden',\n      cursor: 'pointer',\n      marginRight: 'auto',\n    },\n    monthText: {\n      marginRight: 4,\n    },\n  }),\n  { name: 'MuiPickersCalendarHeader' }\n);\n\nfunction getSwitchingViewAriaText(view: DatePickerView) {\n  return view === 'year'\n    ? 'year view is open, switch to calendar view'\n    : 'calendar view is open, switch to year view';\n}\n\nexport const CalendarHeader: React.SFC<CalendarHeaderProps> = ({\n  view: currentView,\n  views,\n  currentMonth: month,\n  changeView,\n  minDate,\n  maxDate,\n  disablePast,\n  disableFuture,\n  onMonthChange,\n  reduceAnimations,\n  leftArrowButtonProps,\n  rightArrowButtonProps,\n  leftArrowIcon,\n  rightArrowIcon,\n  leftArrowButtonText = 'previous month',\n  rightArrowButtonText = 'next month',\n  getViewSwitchingButtonText = getSwitchingViewAriaText,\n}) => {\n  const utils = useUtils();\n  const classes = useStyles();\n\n  const selectNextMonth = () => onMonthChange(utils.getNextMonth(month), 'left');\n  const selectPreviousMonth = () => onMonthChange(utils.getPreviousMonth(month), 'right');\n\n  const isNextMonthDisabled = useNextMonthDisabled(month, { disableFuture, maxDate });\n  const isPreviousMonthDisabled = usePreviousMonthDisabled(month, { disablePast, minDate });\n\n  const toggleView = () => {\n    if (views.length === 1) {\n      return;\n    }\n\n    if (views.length === 2) {\n      changeView(views.find(view => view !== currentView) || views[0]);\n    } else {\n      // switching only between first 2\n      const nextIndexToOpen = views.indexOf(currentView) !== 0 ? 0 : 1;\n      changeView(views[nextIndexToOpen]);\n    }\n  };\n\n  return (\n    <>\n      <div className={classes.switchHeader}>\n        <div className={classes.monthTitleContainer} onClick={toggleView}>\n          <FadeTransitionGroup\n            reduceAnimations={reduceAnimations}\n            transKey={utils.format(month, 'month')}\n          >\n            <Typography\n              aria-live=\"polite\"\n              data-mui-test=\"calendar-month-text\"\n              align=\"center\"\n              variant=\"subtitle1\"\n              className={classes.monthText}\n              children={utils.format(month, 'month')}\n            />\n          </FadeTransitionGroup>\n          <FadeTransitionGroup\n            reduceAnimations={reduceAnimations}\n            transKey={utils.format(month, 'year')}\n          >\n            <Typography\n              aria-live=\"polite\"\n              data-mui-test=\"calendar-year-text\"\n              align=\"center\"\n              variant=\"subtitle1\"\n              children={utils.format(month, 'year')}\n            />\n          </FadeTransitionGroup>\n\n          {views.length > 1 && (\n            <IconButton\n              size=\"small\"\n              data-mui-test=\"calendar-view-switcher\"\n              onClick={toggleView}\n              className={classes.yearSelectionSwitcher}\n              aria-label={getViewSwitchingButtonText(currentView)}\n            >\n              <ArrowDropDownIcon\n                className={clsx(classes.switchViewDropdown, {\n                  [classes.switchViewDropdownDown]: currentView === 'year',\n                })}\n              />\n            </IconButton>\n          )}\n        </div>\n\n        <Fade in={currentView === 'date'}>\n          <ArrowSwitcher\n            leftArrowButtonProps={leftArrowButtonProps}\n            rightArrowButtonProps={rightArrowButtonProps}\n            leftArrowButtonText={leftArrowButtonText}\n            rightArrowButtonText={rightArrowButtonText}\n            leftArrowIcon={leftArrowIcon}\n            rightArrowIcon={rightArrowIcon}\n            onLeftClick={selectPreviousMonth}\n            onRightClick={selectNextMonth}\n            isLeftDisabled={isPreviousMonthDisabled}\n            isRightDisabled={isNextMonthDisabled}\n          />\n        </Fade>\n      </div>\n    </>\n  );\n};\n\nCalendarHeader.displayName = 'CalendarHeader';\n\nCalendarHeader.propTypes = {\n  leftArrowIcon: PropTypes.node,\n  rightArrowIcon: PropTypes.node,\n  leftArrowButtonText: PropTypes.string,\n  rightArrowButtonText: PropTypes.string,\n};\n\nexport default CalendarHeader;\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport Typography from '@material-ui/core/Typography';\nimport { onSpaceOrEnter } from '../../_helpers/utils';\nimport { makeStyles, fade } from '@material-ui/core/styles';\nimport { WrapperVariantContext } from '../../wrappers/WrapperVariantContext';\n\nexport interface YearProps {\n  children: React.ReactNode;\n  disabled?: boolean;\n  onSelect: (value: any) => void;\n  selected: boolean;\n  focused: boolean;\n  value: any;\n  allowKeyboardControl?: boolean;\n  forwardedRef?: React.Ref<HTMLButtonElement>;\n}\n\nexport const useStyles = makeStyles(\n  theme => ({\n    yearButtonContainer: {\n      color: 'unset',\n      backgroundColor: 'transparent',\n      border: 'none',\n      outline: 0,\n      flexBasis: '33.3%',\n      display: 'flex',\n      justifyContent: 'center',\n      padding: '8px 0',\n    },\n    yearButtonContainerDesktop: {\n      flexBasis: '25%',\n    },\n    yearButton: {\n      height: 36,\n      width: 72,\n      borderRadius: 16,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      cursor: 'pointer',\n      outline: 'none',\n      '&:focus, &:hover': {\n        backgroundColor: fade(theme.palette.action.active, theme.palette.action.hoverOpacity),\n      },\n    },\n    yearSelected: {\n      color: theme.palette.getContrastText(theme.palette.primary.main),\n      backgroundColor: theme.palette.primary.main,\n      '&:focus, &:hover': {\n        backgroundColor: theme.palette.primary.dark,\n      },\n    },\n    yearDisabled: {\n      pointerEvents: 'none',\n      color: theme.palette.text.hint,\n    },\n  }),\n  { name: 'MuiPickersYear' }\n);\n\nexport const Year: React.FC<YearProps> = ({\n  onSelect,\n  forwardedRef,\n  value,\n  selected,\n  disabled,\n  children,\n  focused,\n  allowKeyboardControl,\n  ...other\n}) => {\n  const classes = useStyles();\n  const ref = React.useRef<HTMLSpanElement>(null);\n  const wrapperVariant = React.useContext(WrapperVariantContext);\n\n  React.useEffect(() => {\n    if (focused && ref.current && !disabled && allowKeyboardControl) {\n      ref.current.focus();\n    }\n  }, [allowKeyboardControl, disabled, focused]);\n\n  return (\n    <button\n      ref={forwardedRef}\n      disabled={disabled}\n      data-mui-test=\"year\"\n      onClick={() => onSelect(value)}\n      className={clsx(classes.yearButtonContainer, {\n        [classes.yearButtonContainerDesktop]: wrapperVariant === 'desktop',\n      })}\n    >\n      <Typography\n        ref={ref}\n        variant=\"subtitle1\"\n        data-mui-test={`year-${children}`}\n        tabIndex={selected ? 0 : -1}\n        color={selected ? 'primary' : undefined}\n        onKeyDown={onSpaceOrEnter(() => onSelect(value))}\n        className={clsx(classes.yearButton, {\n          [classes.yearSelected]: selected,\n          [classes.yearDisabled]: disabled,\n        })}\n        {...other}\n      >\n        {children}\n      </Typography>\n    </button>\n  );\n};\n\nexport default React.forwardRef<HTMLButtonElement, YearProps>((props, ref) => (\n  <Year {...props} forwardedRef={ref} />\n));\n","import * as React from 'react';\nimport Year from './Year';\nimport { MaterialUiPickersDate } from '../../typings/date';\nimport { useUtils, useNow } from '../../_shared/hooks/useUtils';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { WrapperVariantContext } from '../../wrappers/WrapperVariantContext';\nimport { useGlobalKeyDown, keycode as keys } from '../../_shared/hooks/useKeyDown';\n\nexport interface ExportedYearSelectionProps {\n  /** Callback firing on year change @DateIOType */\n  onYearChange?: (date: MaterialUiPickersDate) => void;\n  /** Disable specific years dynamically. Works like `shouldDisableDate` but for year selection view. @DateIOType */\n  shouldDisableYear?: (day: MaterialUiPickersDate) => boolean;\n}\n\nexport interface YearSelectionProps extends ExportedYearSelectionProps {\n  date: MaterialUiPickersDate;\n  minDate: MaterialUiPickersDate;\n  maxDate: MaterialUiPickersDate;\n  onChange: (date: MaterialUiPickersDate, isFinish: boolean) => void;\n  disablePast?: boolean | null | undefined;\n  disableFuture?: boolean | null | undefined;\n  allowKeyboardControl?: boolean;\n  isDateDisabled: (day: MaterialUiPickersDate) => boolean;\n}\n\nexport const useStyles = makeStyles(\n  {\n    container: {\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      overflowY: 'auto',\n      height: '100%',\n    },\n  },\n  { name: 'MuiPickersYearSelection' }\n);\n\nexport const YearSelection: React.FC<YearSelectionProps> = ({\n  date,\n  onChange,\n  onYearChange,\n  minDate,\n  maxDate,\n  disablePast,\n  disableFuture,\n  isDateDisabled,\n  shouldDisableYear,\n  allowKeyboardControl,\n}) => {\n  const now = useNow();\n  const theme = useTheme();\n  const utils = useUtils();\n  const classes = useStyles();\n  const currentYear = utils.getYear(date);\n  const wrapperVariant = React.useContext(WrapperVariantContext);\n  const selectedYearRef = React.useRef<HTMLButtonElement>(null);\n  const [focusedYear, setFocusedYear] = React.useState<number | null>(currentYear);\n\n  React.useEffect(() => {\n    if (allowKeyboardControl && selectedYearRef.current && selectedYearRef.current.scrollIntoView) {\n      try {\n        selectedYearRef.current.scrollIntoView({\n          block: wrapperVariant === 'static' ? 'nearest' : 'center',\n        });\n      } catch (e) {\n        // call without arguments in case when scrollIntoView works improperly (e.g. Firefox 52-57)\n        selectedYearRef.current.scrollIntoView();\n      }\n    }\n  }, []); // eslint-disable-line\n\n  const handleYearSelection = React.useCallback(\n    (year: number, isFinish = true) => {\n      const newDate = utils.setYear(date, year);\n      if (isDateDisabled(newDate)) {\n        return;\n      }\n\n      if (onYearChange) {\n        onYearChange(newDate);\n      }\n\n      onChange(newDate, isFinish);\n    },\n    [date, isDateDisabled, onChange, onYearChange, utils]\n  );\n\n  const focusYear = React.useCallback(\n    (year: number) => {\n      if (!isDateDisabled(utils.setYear(date, year))) {\n        setFocusedYear(year);\n      }\n    },\n    [date, isDateDisabled, utils]\n  );\n\n  const yearsInRow = wrapperVariant === 'desktop' ? 4 : 3;\n  const nowFocusedYear = focusedYear || currentYear;\n  useGlobalKeyDown(Boolean(allowKeyboardControl), {\n    [keys.ArrowUp]: () => focusYear(nowFocusedYear - yearsInRow),\n    [keys.ArrowDown]: () => focusYear(nowFocusedYear + yearsInRow),\n    [keys.ArrowLeft]: () => focusYear(nowFocusedYear + (theme.direction === 'ltr' ? -1 : 1)),\n    [keys.ArrowRight]: () => focusYear(nowFocusedYear + (theme.direction === 'ltr' ? 1 : -1)),\n  });\n\n  return (\n    <div>\n      <div className={classes.container}>\n        {utils.getYearRange(minDate, maxDate).map(year => {\n          const yearNumber = utils.getYear(year);\n          const selected = yearNumber === currentYear;\n\n          return (\n            <Year\n              key={utils.format(year, 'year')}\n              selected={selected}\n              value={yearNumber}\n              onSelect={handleYearSelection}\n              allowKeyboardControl={allowKeyboardControl}\n              focused={yearNumber === focusedYear}\n              ref={selected ? selectedYearRef : undefined}\n              disabled={Boolean(\n                (disablePast && utils.isBeforeYear(year, now)) ||\n                  (disableFuture && utils.isAfterYear(year, now)) ||\n                  (shouldDisableYear && shouldDisableYear(year))\n              )}\n            >\n              {utils.format(year, 'year')}\n            </Year>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { MonthSelection } from './MonthSelection';\nimport { DatePickerView } from '../../DatePicker';\nimport { useCalendarState } from './useCalendarState';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useUtils } from '../../_shared/hooks/useUtils';\nimport { VIEW_HEIGHT } from '../../constants/dimensions';\nimport { MaterialUiPickersDate } from '../../typings/date';\nimport { FadeTransitionGroup } from './FadeTransitionGroup';\nimport { Calendar, ExportedCalendarProps } from './Calendar';\nimport { PickerOnChangeFn } from '../../_shared/hooks/useViews';\nimport { CalendarHeader, CalendarHeaderProps } from './CalendarHeader';\nimport { YearSelection, ExportedYearSelectionProps } from './YearSelection';\nimport { defaultMinDate, defaultMaxDate } from '../../constants/prop-types';\nimport { IsStaticVariantContext } from '../../wrappers/WrapperVariantContext';\nimport { DateValidationProps, findClosestEnabledDate } from '../../_helpers/date-utils';\n\ntype PublicCalendarHeaderProps = Pick<\n  CalendarHeaderProps,\n  | 'leftArrowIcon'\n  | 'rightArrowIcon'\n  | 'leftArrowButtonProps'\n  | 'rightArrowButtonProps'\n  | 'leftArrowButtonText'\n  | 'rightArrowButtonText'\n  | 'getViewSwitchingButtonText'\n>;\n\nexport interface CalendarViewProps\n  extends DateValidationProps,\n    ExportedCalendarProps,\n    ExportedYearSelectionProps,\n    PublicCalendarHeaderProps {\n  date: MaterialUiPickersDate;\n  view: DatePickerView;\n  views: DatePickerView[];\n  changeView: (view: DatePickerView) => void;\n  onChange: PickerOnChangeFn;\n  /** Disable heavy animations @default /(android)/i.test(window.navigator.userAgent) */\n  reduceAnimations?: boolean;\n  /** Callback firing on month change. Return promise to render spinner till it will not be resolved @DateIOType */\n  onMonthChange?: (date: MaterialUiPickersDate) => void | Promise<void>;\n}\n\nexport type ExportedCalendarViewProps = Omit<\n  CalendarViewProps,\n  'date' | 'view' | 'views' | 'onChange' | 'changeView' | 'slideDirection' | 'currentMonth'\n>;\n\nexport const useStyles = makeStyles(\n  {\n    viewTransitionContainer: {\n      overflowY: 'auto',\n    },\n    gridFullHeight: {\n      flex: 1,\n      minHeight: VIEW_HEIGHT - 60,\n      height: '100%',\n    },\n  },\n  { name: 'MuiPickersCalendarView' }\n);\n\nexport const defaultReduceAnimations =\n  typeof navigator !== 'undefined' && /(android)/i.test(navigator.userAgent);\n\nexport const CalendarView: React.FC<CalendarViewProps> = ({\n  date,\n  view,\n  onChange,\n  changeView,\n  onMonthChange,\n  minDate: __minDate,\n  maxDate: __maxDate,\n  reduceAnimations = defaultReduceAnimations,\n  loadingIndicator = <CircularProgress data-mui-test=\"loading-progress\" />,\n  shouldDisableDate,\n  allowKeyboardControl: __allowKeyboardControlProp,\n  disablePast,\n  disableFuture,\n  shouldDisableYear,\n  ...other\n}) => {\n  const utils = useUtils();\n  const classes = useStyles();\n  const isStatic = React.useContext(IsStaticVariantContext);\n  const allowKeyboardControl = __allowKeyboardControlProp ?? !isStatic;\n\n  const minDate = __minDate || utils.date(defaultMinDate);\n  const maxDate = __maxDate || utils.date(defaultMaxDate);\n\n  const {\n    loadingQueue,\n    calendarState,\n    changeFocusedDay,\n    changeMonth,\n    isDateDisabled,\n    handleChangeMonth,\n    onMonthSwitchingAnimationEnd,\n  } = useCalendarState({\n    date,\n    reduceAnimations,\n    onMonthChange,\n    minDate,\n    maxDate,\n    shouldDisableDate,\n    disablePast,\n    disableFuture,\n  });\n\n  React.useEffect(() => {\n    if (date && isDateDisabled(date)) {\n      const closestEnabledDate = findClosestEnabledDate({\n        utils,\n        date,\n        minDate: utils.date(minDate),\n        maxDate: utils.date(maxDate),\n        disablePast: Boolean(disablePast),\n        disableFuture: Boolean(disableFuture),\n        shouldDisableDate: isDateDisabled,\n      });\n\n      onChange(closestEnabledDate, false);\n    }\n    // This call is too expensive to run it on each prop change.\n    // So just ensure that we are not rendering disabled as selected on mount.\n  }, []); // eslint-disable-line\n\n  React.useEffect(() => {\n    changeMonth(date);\n  }, [date]); // eslint-disable-line\n\n  React.useEffect(() => {\n    if (view === 'date') {\n      changeFocusedDay(date);\n    }\n  }, [view]); // eslint-disable-line\n\n  return (\n    <>\n      <CalendarHeader\n        {...other}\n        view={view}\n        currentMonth={calendarState.currentMonth}\n        changeView={changeView}\n        onMonthChange={(newMonth, direction) => handleChangeMonth({ newMonth, direction })}\n        minDate={minDate}\n        maxDate={maxDate}\n        disablePast={disablePast}\n        disableFuture={disableFuture}\n        reduceAnimations={reduceAnimations}\n      />\n\n      <FadeTransitionGroup\n        reduceAnimations={reduceAnimations}\n        className={classes.viewTransitionContainer}\n        transKey={view}\n      >\n        <div>\n          {view === 'year' && (\n            <YearSelection\n              {...other}\n              date={date}\n              onChange={onChange}\n              minDate={minDate}\n              maxDate={maxDate}\n              disableFuture={disableFuture}\n              disablePast={disablePast}\n              isDateDisabled={isDateDisabled}\n              allowKeyboardControl={allowKeyboardControl}\n              shouldDisableYear={shouldDisableYear}\n            />\n          )}\n\n          {view === 'month' && (\n            <MonthSelection\n              {...other}\n              date={date}\n              onChange={onChange}\n              minDate={minDate}\n              maxDate={maxDate}\n              onMonthChange={onMonthChange}\n            />\n          )}\n\n          {view === 'date' &&\n            (loadingQueue > 0 ? (\n              <Grid\n                className={classes.gridFullHeight}\n                container\n                alignItems=\"center\"\n                justify=\"center\"\n              >\n                {loadingIndicator}\n              </Grid>\n            ) : (\n              <Calendar\n                {...other}\n                {...calendarState}\n                onMonthSwitchingAnimationEnd={onMonthSwitchingAnimationEnd}\n                changeFocusedDay={changeFocusedDay}\n                reduceAnimations={reduceAnimations}\n                date={date}\n                onChange={onChange}\n                isDateDisabled={isDateDisabled}\n                allowKeyboardControl={allowKeyboardControl}\n              />\n            ))}\n        </div>\n      </FadeTransitionGroup>\n    </>\n  );\n};\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport KeyboardDateInput from '../_shared/KeyboardDateInput';\nimport { useViews } from '../_shared/hooks/useViews';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DateTimePickerView } from '../DateTimePicker';\nimport { ParsableDate } from '../constants/prop-types';\nimport { BasePickerProps } from '../typings/BasePicker';\nimport { MaterialUiPickersDate } from '../typings/date';\nimport { DatePickerView } from '../DatePicker/DatePicker';\nimport { useIsLandscape } from '../_shared/hooks/useIsLandscape';\nimport { DIALOG_WIDTH, VIEW_HEIGHT } from '../constants/dimensions';\nimport { WrapperVariantContext } from '../wrappers/WrapperVariantContext';\nimport { MobileKeyboardInputView } from '../views/MobileKeyboardInputView';\nimport { ClockView, ExportedClockViewProps } from '../views/Clock/ClockView';\nimport { WithViewsProps, AnyPickerView, SharedPickerProps } from './SharedPickerProps';\nimport { CalendarView, ExportedCalendarViewProps } from '../views/Calendar/CalendarView';\n\ntype CalendarAndClockProps = ExportedCalendarViewProps & ExportedClockViewProps;\n\nexport type ToolbarComponentProps<\n  TDate = MaterialUiPickersDate,\n  TView extends AnyPickerView = AnyPickerView\n> = CalendarAndClockProps & {\n  views: TView[];\n  openView: TView;\n  date: TDate;\n  setOpenView: (view: TView) => void;\n  onChange: (date: TDate, isFinish?: boolean) => void;\n  toolbarTitle?: React.ReactNode;\n  toolbarFormat?: string;\n  // TODO move out, cause it is DateTimePickerOnly\n  hideTabs?: boolean;\n  dateRangeIcon?: React.ReactNode;\n  timeIcon?: React.ReactNode;\n  isLandscape: boolean;\n  ampmInClock?: boolean;\n  isMobileKeyboardViewOpen: boolean;\n  toggleMobileKeyboardView: () => void;\n  getMobileKeyboardInputViewButtonText?: () => string;\n};\n\nexport interface ExportedPickerProps<TView extends AnyPickerView>\n  extends Omit<BasePickerProps, 'value' | 'onChange'>,\n    CalendarAndClockProps,\n    WithViewsProps<TView> {\n  // TODO move out, cause it is DateTimePickerOnly\n  hideTabs?: boolean;\n  dateRangeIcon?: React.ReactNode;\n  timeIcon?: React.ReactNode;\n}\n\nexport type PickerProps<\n  TView extends AnyPickerView,\n  TInputValue = ParsableDate,\n  TDateValue = MaterialUiPickersDate\n> = ExportedPickerProps<TView> & SharedPickerProps<TInputValue, TDateValue>;\n\nexport const useStyles = makeStyles(\n  {\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    containerLandscape: {\n      flexDirection: 'row',\n    },\n    pickerView: {\n      overflowX: 'hidden',\n      width: DIALOG_WIDTH,\n      maxHeight: VIEW_HEIGHT,\n      display: 'flex',\n      flexDirection: 'column',\n      margin: '0 auto',\n    },\n    pickerViewLandscape: {\n      padding: '0 8px',\n    },\n  },\n  { name: 'MuiPickersBasePicker' }\n);\n\nconst MobileKeyboardTextFieldProps = { fullWidth: true };\n\nconst isTimePickerByViews = (views: DateTimePickerView[]) =>\n  !views.some(view => view === 'year' || view === 'month' || view === 'date');\n\nexport function Picker({\n  date,\n  openTo = 'date',\n  views = ['year', 'month', 'date', 'hours', 'minutes', 'seconds'],\n  toolbarTitle,\n  showToolbar,\n  onDateChange,\n  ToolbarComponent = () => null,\n  orientation,\n  DateInputProps,\n  isMobileKeyboardViewOpen,\n  toggleMobileKeyboardView,\n  toolbarFormat,\n  className,\n  ...other\n}: PickerProps<AnyPickerView>) {\n  const classes = useStyles();\n  const isLandscape = useIsLandscape(views, orientation);\n  const wrapperVariant = React.useContext(WrapperVariantContext);\n  const handleDateChange = React.useCallback(\n    (date: MaterialUiPickersDate, isFinish?: boolean | symbol) => {\n      onDateChange(date, wrapperVariant, isFinish);\n    },\n    [onDateChange, wrapperVariant]\n  );\n\n  const toShowToolbar =\n    typeof showToolbar === 'undefined' ? wrapperVariant !== 'desktop' : showToolbar;\n\n  const { openView, nextView, previousView, setOpenView, handleChangeAndOpenNext } = useViews({\n    views,\n    openTo,\n    onChange: handleDateChange,\n    isMobileKeyboardViewOpen,\n    toggleMobileKeyboardView,\n  });\n\n  return (\n    <div\n      className={clsx(classes.container, className, {\n        [classes.containerLandscape]: isLandscape,\n      })}\n    >\n      {toShowToolbar && (\n        <ToolbarComponent\n          {...other}\n          views={views}\n          isLandscape={isLandscape}\n          date={date}\n          onChange={handleDateChange}\n          setOpenView={setOpenView}\n          openView={openView}\n          toolbarTitle={toolbarTitle}\n          toolbarFormat={toolbarFormat}\n          isMobileKeyboardViewOpen={isMobileKeyboardViewOpen}\n          toggleMobileKeyboardView={toggleMobileKeyboardView}\n        />\n      )}\n\n      <div\n        className={clsx(classes.pickerView, {\n          [classes.pickerViewLandscape]: isLandscape,\n        })}\n      >\n        {isMobileKeyboardViewOpen ? (\n          <MobileKeyboardInputView>\n            <KeyboardDateInput\n              {...DateInputProps}\n              ignoreInvalidInputs\n              disableOpenPicker\n              TextFieldProps={MobileKeyboardTextFieldProps}\n            />\n          </MobileKeyboardInputView>\n        ) : (\n          <>\n            {(openView === 'year' || openView === 'month' || openView === 'date') && (\n              <CalendarView\n                date={date}\n                changeView={setOpenView}\n                // @ts-ignore\n                views={views}\n                onChange={handleChangeAndOpenNext}\n                view={openView as DatePickerView}\n                {...other}\n              />\n            )}\n\n            {(openView === 'hours' || openView === 'minutes' || openView === 'seconds') && (\n              <ClockView\n                {...other}\n                date={date}\n                type={openView as 'hours' | 'minutes' | 'seconds'}\n                onDateChange={handleDateChange}\n                onChange={handleChangeAndOpenNext}\n                openNextView={() => setOpenView(nextView)}\n                openPreviousView={() => setOpenView(previousView)}\n                nextViewAvailable={!Boolean(nextView)}\n                previousViewAvailable={!Boolean(previousView)}\n                showViewSwitcher={isTimePickerByViews(views) && wrapperVariant === 'desktop'}\n              />\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nPicker.displayName = 'Picker';\n"],"names":["findClosestEnabledDate","date","utils","minDate","maxDate","disableFuture","disablePast","shouldDisableDate","today","startOfDay","isBefore","isAfter","forward","backward","addDays","isYearOnlyView","views","length","isYearAndMonthViews","arrayIncludes","getFormatByViews","formats","year","monthAndYear","keyboardDate","parsePickerInputValue","now","value","defaultHighlight","parsedValue","isValid","parseRangeInputValue","map","isRangeValid","range","Boolean","isWithinRange","day","isStartOfRange","isSameDay","isEndOfRange","validateDate","isAfterDay","isBeforeDay","validateDateRange","dateValidationProps","start","end","dateValidations","getTextFieldAriaText","rawValue","format","getDisplayDate","inputFormat","isEmpty","formatByString","pick12hOr24hFormat","userFormat","ampm","localized","MASK_USER_INPUT_SYMBOL","staticDateWith2DigitTokens","Date","staticDateWith1DigitTokens","checkMaskIsValidForCurrentFormat","mask","acceptRegex","formattedDateWith1Digit","inferredFormatPatternWith1Digits","replace","inferredFormatPatternWith2Digits","isMaskValid","process","env","NODE_ENV","console","warn","maskedDateFormatter","acceptRegexp","split","char","i","lastIndex","maskChar","nextMaskChar","acceptedChar","test","formattedChar","join","useMaskedInput","disableMaskedInput","validationError","onChange","disabled","rifmFormatter","ignoreInvalidInputs","readOnly","TextFieldProps","label","useUtils","isFocusedRef","React","getInputValue","formatHelperText","getFormatHelperText","innerInputValue","setInnerInputValue","shouldUseMaskedInput","formatter","st","current","handleChange","text","finalString","parse","undefined","rifmProps","useRifm","inputStateArgs","e","currentTarget","placeholder","error","helperText","inputProps","type","onFocus","createDelegatedEventHandler","onBlur","KeyboardDateInput","renderInput","onOpen","openPicker","InputProps","InputAdornmentProps","openPickerIcon","React.createElement","OpenPickerButtonProps","hideOpenPickerButton","disableOpenPicker","getOpenDialogAriaText","containerRef","forwardedRef","other","textFieldProps","adornmentPosition","position","ref","inputRef","useParsedDate","possiblyUnparsedValue","useNextMonthDisabled","month","lastEnabledMonth","startOfMonth","usePreviousMonthDisabled","firstEnabledMonth","PropTypes","datePickerView","defaultMinDate","defaultMaxDate","useViews","openTo","isMobileKeyboardViewOpen","toggleMobileKeyboardView","openView","_setOpenView","setOpenView","previousView","indexOf","nextView","openNext","handleChangeAndOpenNext","isFinishedSelectionInCurrentView","getOrientation","window","screen","orientation","angle","Math","abs","Number","useIsLandscape","customOrientation","setOrientation","eventHandler","useIsomorphicEffect","addEventListener","removeEventListener","orientationToUse","MobileKeyboardInputView","styled","padding","useStyles","makeStyles","theme","root","flex","display","alignItems","justifyContent","cursor","outline","height","transition","transitions","create","duration","color","palette","primary","main","fontWeight","typography","fontWeightMedium","monthSelected","monthDisabled","pointerEvents","hint","name","Month","selected","onSelect","children","classes","handleSelection","clsx","onSpaceOrEnter","displayName","container","width","flexWrap","alignContent","MonthSelection","onMonthChange","currentMonth","getMonth","shouldDisableMonth","utilMinDate","utilMaxDate","isBeforeFirstEnabled","isAfterLastEnabled","onMonthSelect","newDate","setMonth","getMonthArray","monthNumber","monthText","createCalendarStateReducer","reduceAnimations","disableSwitchToMonthOnDayFocus","state","action","loadingQueue","slideDirection","direction","newMonth","isMonthSwitchingAnimating","needMonthSwitch","isSameMonth","focusedDay","useCalendarState","reducerFn","calendarState","dispatch","handleChangeMonth","payload","returnedPromise","then","changeMonth","isDateDisabled","onMonthSwitchingAnimationEnd","changeFocusedDay","newFocusedDate","animationDuration","transitionContainer","fadeEnter","willChange","opacity","fadeEnterActive","fadeExit","fadeExitActive","FadeTransitionGroup","transKey","className","transitionClasses","exit","enterActive","enter","exitActive","element","classNames","appear","ArrowDropDownIcon","createSvgIcon","switchHeader","marginTop","marginBottom","paddingLeft","paddingRight","maxHeight","minHeight","yearSelectionSwitcher","marginRight","previousMonthButton","switchViewDropdown","transform","switchViewDropdownDown","monthTitleContainer","overflow","getSwitchingViewAriaText","view","CalendarHeader","currentView","changeView","leftArrowButtonProps","rightArrowButtonProps","leftArrowIcon","rightArrowIcon","leftArrowButtonText","rightArrowButtonText","getViewSwitchingButtonText","selectNextMonth","getNextMonth","selectPreviousMonth","getPreviousMonth","isNextMonthDisabled","isPreviousMonthDisabled","toggleView","find","nextIndexToOpen","propTypes","yearButtonContainer","backgroundColor","border","flexBasis","yearButtonContainerDesktop","yearButton","borderRadius","fade","active","hoverOpacity","yearSelected","getContrastText","dark","yearDisabled","Year","focused","allowKeyboardControl","wrapperVariant","WrapperVariantContext","focus","props","flexDirection","overflowY","YearSelection","onYearChange","shouldDisableYear","useNow","useTheme","currentYear","getYear","selectedYearRef","focusedYear","setFocusedYear","scrollIntoView","block","handleYearSelection","isFinish","setYear","focusYear","yearsInRow","nowFocusedYear","useGlobalKeyDown","keys","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","getYearRange","yearNumber","isBeforeYear","isAfterYear","viewTransitionContainer","gridFullHeight","VIEW_HEIGHT","defaultReduceAnimations","navigator","userAgent","CalendarView","__minDate","__maxDate","loadingIndicator","__allowKeyboardControlProp","isStatic","IsStaticVariantContext","closestEnabledDate","containerLandscape","pickerView","overflowX","DIALOG_WIDTH","margin","pickerViewLandscape","MobileKeyboardTextFieldProps","fullWidth","isTimePickerByViews","some","Picker","toolbarTitle","showToolbar","onDateChange","ToolbarComponent","DateInputProps","toolbarFormat","isLandscape","handleDateChange","toShowToolbar"],"mappings":"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"}