import { IUtils } from '@date-io/core/IUtils';
import { ParsableDate } from '../constants/prop-types';
import { MaterialUiPickersDate } from '../typings/date';
import { MuiPickersAdapter } from '../_shared/hooks/useUtils';
export declare const getMeridiem: (date: MaterialUiPickersDate, utils: IUtils<MaterialUiPickersDate>) => "am" | "pm";
export declare const convertValueToMeridiem: (value: number, meridiem: "am" | "pm", ampm: boolean) => number;
export declare const convertToMeridiem: (time: MaterialUiPickersDate, meridiem: "am" | "pm", ampm: boolean, utils: IUtils<MaterialUiPickersDate>) => MaterialUiPickersDate;
export declare const getMinutes: (offsetX: number, offsetY: number, step?: number) => number;
export declare const getHours: (offsetX: number, offsetY: number, ampm: boolean) => number;
export declare function getSecondsInDay(date: MaterialUiPickersDate, utils: MuiPickersAdapter): number;
export declare const createIsAfterIgnoreDatePart: (disableTimeValidationIgnoreDatePart: boolean, utils: MuiPickersAdapter) => (dateLeft: MaterialUiPickersDate, dateRight: MaterialUiPickersDate) => boolean | ((value: MaterialUiPickersDate, comparing: MaterialUiPickersDate) => boolean);
export interface TimeValidationProps {
    /** Min time, date part by default, will be ignored */
    minTime?: MaterialUiPickersDate;
    /** Max time, date part by default, will be ignored */
    maxTime?: MaterialUiPickersDate;
    /** Dynamically check if time is disabled or not */
    shouldDisableTime?: (timeValue: number, clockType: 'hours' | 'minutes' | 'seconds') => boolean;
    /** Do not ignore date part when validating min/max time */
    disableTimeValidationIgnoreDatePart?: boolean;
}
export declare const validateTime: (utils: MuiPickersAdapter, value: ParsableDate, { minTime, maxTime, shouldDisableTime, disableTimeValidationIgnoreDatePart }: TimeValidationProps) => "invalidDate" | "minTime" | "maxTime" | "shouldDisableTime-hours" | "shouldDisableTime-minutes" | "shouldDisableTime-seconds" | null;
export declare type TimeValidationError = ReturnType<typeof validateTime>;
