{"version":3,"sources":["theme/lato.tsx","theme/dark.tsx","navigation/atoms.ts","bottomNavigation/atoms.ts","components/Header/index.tsx","components/ActionButton/index.tsx","bottomNavigation/index.tsx","components/Loader/index.tsx","components/SubmitButtonWithSelector/index.tsx","services/service.ts","screens/Withdraw/index.tsx","screens/Deposit/index.tsx","screens/Transfer/index.tsx","screens/Bills/index.tsx","screens/Home/index.tsx","navigation/navigation.tsx","App.tsx","index.tsx"],"names":["fontFamily","fontStyle","fontWeight","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","typography","Lato","overrides","MuiCssBaseline","MuiTypography","h1","fontSize","color","alignSelf","h2","subtitle1","subtitle2","body1","body2","h4","caption","MuiCircularProgress","colorPrimary","MuiPaper","root","background","backgroundColor","padding","MuiFormHelperText","MuiFormControlLabel","marginLeft","label","MuiFormLabel","textAlign","MuiPopover","paper","MuiButtonBase","MuiIconButton","MuiToolbar","paddingLeft","paddingRight","paddingTop","height","minHeight","MuiTabs","indicator","MuiTab","minWidth","textTransform","textColorPrimary","MuiStepper","border","boxShadow","paddingBottom","boxSizing","margin","MuiMenuItem","MuiStepLabel","MuiSwitch","switchBase","MuiTextField","width","MuiFilledInput","transition","underline","borderBottom","MuiInput","input","WebkitBoxShadow","WebkitTextFillColor","MuiSnackbarContent","borderRadius","MuiInputLabel","lineHeight","zIndex","pointerEvents","opacity","MuiSelect","icon","marginRight","MuiInputBase","inputAdornedEnd","MuiButton","text","outlined","contained","navigationAtom","atom","key","default","index","account","id","name","bankMoney","money","withdrawInput","isAsyncRequesting","bottomNavigationAtom","styles","container","display","alignItems","justifyContent","bank","moneyContainer","flexDirection","row","spacer","marginTop","amount","chevron","button","LogoutButton","withStyles","maxWidth","Button","Header","useRecoilState","atoms","navigation","setNavigation","bottomAtoms","bottomNavigation","setBottomNavigation","keyDown","event","keyCode","useEffect","document","onkeydown","style","src","process","Typography","variant","component","Intl","NumberFormat","currency","format","onClick","prevState","position","endAligner","filter","TheButton","HoveredButton","ActionButton","props","useState","isHover","setHover","handleTabIndex","handleOnMouseEnter","handleOnMouseLeave","onMouseEnter","onMouseLeave","wrapper","BottomNavigation","map","b","Loader","loader","size","stroke","borderLeftColor","borderLeftWidth","borderRightColor","borderRightWidth","useStyles","className","SubmitButtonWithSelector","useRecoilValue","disabled","isDisabled","fullWidth","BankService","getDetails","userId","a","fetch","method","headers","response","json","result","deposit","body","JSON","stringify","Id","Amount","withdraw","transfer","targetId","TargetId","getBalance","page","pageSize","selectedDate","startAt","Math","floor","getTime","endAt","CurrentPage","PageSize","StartAt","EndAt","buttonContainer","withDescription","NumberFormatCustom","inputRef","onChange","other","getInputRef","onValueChange","values","target","value","thousandSeparator","isNumericString","prefix","WithdrawScreen","data","setAccount","toString","setAmount","parseInt","TextField","autoFocus","InputProps","inputComponent","DepositScreen","TransferScreen","playerId","setPlayerId","onInput","replace","trim","console","log","status","pickerContainer","table","dateContainer","dateSpacer","whiteSpace","makeStyles","columns","undefined","date","Date","DateTimeFormat","year","month","day","hour","minute","replaceAll","BillsScreen","pageData","setData","setPage","React","rowsPerPage","setRowsPerPage","handleDateChange","receiptSubscriber","classes","dateAdapter","DateFnsUtils","locale","ptbrLocale","startText","endText","renderInput","startProps","endProps","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","align","TableBody","itemList","hover","TablePagination","rowsPerPageOptions","count","totalItems","labelRowsPerPage","onChangePage","newPage","onChangeRowsPerPage","left","top","transform","HomeScreen","Paper","Transfer","Deposit","Withdraw","Bills","Navigation","Home","App","theme","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3ceb9124.chunk.js","sourcesContent":["export default {\r\n  fontFamily: \"'Lato'\",\r\n  fontStyle: 'normal',\r\n  fontWeight: 400\r\n};","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport Lato from './lato';\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#757ce8',\r\n      main: 'rgb(255, 178, 33)',\r\n      dark: '#002884',\r\n      contrastText: '#fff'\r\n    },\r\n    secondary: {\r\n      light: '#ff7961',\r\n      main: '#f44336',\r\n      dark: '#ba000d',\r\n      contrastText: '#000',\r\n    },\r\n  },\r\n\r\n  typography: {\r\n    fontFamily: Lato.fontFamily,\r\n  },\r\n\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      '@global': {\r\n        '@font-face': [Lato],\r\n      },\r\n    },\r\n\r\n    MuiTypography: {\r\n      h1: {\r\n        fontSize: 16,\r\n        fontWeight: 400,\r\n        color: '#9f9f91',\r\n        alignSelf: 'flex-start'\r\n      },\r\n\r\n      h2: {\r\n        fontSize: 16,\r\n        fontWeight: 400,\r\n        color: 'black',\r\n        alignSelf: 'flex-start'\r\n      },\r\n\r\n      subtitle1: {\r\n        fontSize: 22,\r\n        fontWeight: 300,\r\n        color: 'black'\r\n      },\r\n\r\n      subtitle2: {\r\n        fontSize: 22,\r\n        fontWeight: 'bold',\r\n        color: 'black'\r\n      },\r\n\r\n      body1: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n        color: '#333',\r\n      },\r\n\r\n      body2: {\r\n        fontSize: 10,\r\n        fontWeight: 500,\r\n        color: '#333',\r\n      },\r\n\r\n      h4: {\r\n        fontSize: 9,\r\n        fontWeight: 'bold',\r\n        color: '#333',\r\n      },\r\n\r\n      caption: {\r\n        fontSize: 12,\r\n        fontWeight: 'bold',\r\n        color: 'black !important'\r\n      }\r\n    },\r\n\r\n    MuiCircularProgress: {\r\n      colorPrimary: {\r\n        color: '#333'\r\n      }\r\n    },\r\n\r\n    MuiPaper: {\r\n      root: {\r\n        background: `white`,\r\n        backgroundColor: 'white',\r\n        padding: '1vw !important',\r\n      }\r\n    },\r\n\r\n    MuiFormHelperText: {\r\n      root: {\r\n        fontSize: 9,\r\n        fontWeight: 'bold',\r\n        color: '#333',\r\n      }\r\n    },\r\n\r\n    MuiFormControlLabel: {\r\n      root: {\r\n        marginLeft: '0 !important'\r\n      },\r\n\r\n      label: {\r\n        fontSize: '12px !important',\r\n        fontWeight: 400\r\n      }\r\n    },\r\n\r\n    MuiFormLabel: {\r\n      root: {\r\n        color: 'rgb(255, 178, 33)',\r\n        textAlign: 'center'\r\n      }\r\n    },\r\n\r\n    MuiPopover: {\r\n      paper: {\r\n        padding: '0 !important'\r\n      }\r\n    },\r\n\r\n    MuiButtonBase: {\r\n      root: {\r\n        background: 'transparent'\r\n      }\r\n    },\r\n\r\n    MuiIconButton: {\r\n      root: {\r\n        color: '#333 !important'\r\n      },\r\n\r\n      label: {\r\n        fontSize: 14,\r\n        fontWeight: 'bold',\r\n        color: '#333'\r\n      }\r\n    },\r\n\r\n    MuiToolbar: {\r\n      root: {\r\n        backgroundColor: 'transparent !important',\r\n        padding: '0 !important',\r\n        paddingLeft: '2vh !important',\r\n        paddingRight: '2vh !important',\r\n        paddingTop: '1vh !important',\r\n        height: 'initial !important',\r\n        minHeight: '0 !important'\r\n      }\r\n    },\r\n\r\n    MuiTabs: {\r\n      indicator: {\r\n        height: 1,\r\n        background: 'rgb(255, 178, 33)'\r\n      },\r\n    },\r\n\r\n    MuiTab: {\r\n      root: {\r\n        minWidth: '0 !important',\r\n        height: 30,\r\n        minHeight: 30,\r\n        textTransform: 'none',\r\n        fontWeight: 400,\r\n        fontSize: 10,\r\n        color: 'black',\r\n        textAlign: 'start',\r\n        '&$selected': {\r\n          color: '#1890ff',\r\n          fontWeight: 'bold',\r\n        },\r\n      },\r\n\r\n      textColorPrimary: {\r\n        color: 'black',\r\n      }\r\n    },\r\n\r\n    MuiStepper: {\r\n      root: {\r\n        background: 'transparent !important',\r\n        border: 'none !important',\r\n        boxShadow: 'none !important',\r\n        padding: '1vh !important',\r\n        paddingBottom: '0 !important',\r\n        boxSizing: 'border-box',\r\n        margin: 0\r\n      }\r\n    },\r\n\r\n    MuiMenuItem: {\r\n      root: {\r\n        fontSize: 16,\r\n        fontWeight: 300,\r\n        color: 'black',\r\n        '&:hover': {\r\n          backgroundColor: 'rgb(54, 54, 57)'\r\n        }\r\n      }\r\n    },\r\n\r\n    MuiStepLabel: {\r\n      label: {\r\n        color: '#333 !important'\r\n      }\r\n    },\r\n\r\n    MuiSwitch: {\r\n      switchBase: {\r\n        color: 'rgb(44, 44, 47)',\r\n        '& + $track': {\r\n          backgroundColor: 'rgb(44, 44, 47)',\r\n        },\r\n\r\n        '&.Mui-checked': {\r\n          color: 'rgb(255, 178, 33) !important',\r\n          '& + $track': {\r\n            backgroundColor: 'rgb(255, 178, 33) !important',\r\n          },\r\n        }\r\n      }\r\n    },\r\n\r\n    MuiTextField: {\r\n      root: {\r\n        width: '100%',\r\n        minHeight: 0,\r\n        color: 'red',\r\n        padding: 0,\r\n        fontSize: 14,\r\n        border: 'none !important'\r\n      }\r\n    },\r\n\r\n    MuiFilledInput: {\r\n      root: {\r\n        transition: 'all .3s'\r\n      },\r\n\r\n      underline: {\r\n        '&&&:before': {\r\n          borderBottom: 'none'\r\n        },\r\n        '&&:after': {\r\n          borderBottom: 'none'\r\n        }\r\n      }\r\n    },\r\n\r\n    MuiInput: {\r\n      input: {\r\n        '&:-webkit-autofill': {\r\n          WebkitBoxShadow: '0 0 0 1000px #ffe7bb inset',\r\n          WebkitTextFillColor: '#333',\r\n        }\r\n      }\r\n    },\r\n\r\n    MuiSnackbarContent: {\r\n      root: {\r\n        paddingTop: '0 !important',\r\n        paddingBottom: '0 !important',\r\n        paddingLeft: '1vh',\r\n        paddingRight: '1vh',\r\n        fontSize: '10px',\r\n        fontWeight: 400,\r\n        border: '1px solid transparent',\r\n        backgroundColor: 'rgb(225, 0, 80)',\r\n        borderRadius: 0\r\n      }\r\n    },\r\n\r\n    MuiInputLabel: {\r\n      root: {\r\n        color: 'black',\r\n        fontSize: 12,\r\n        lineHeight: '23px',\r\n        zIndex: 100,\r\n        marginLeft: '1vh',\r\n        pointerEvents: 'none',\r\n\r\n        '&$focused': { \r\n          marginLeft: 0,\r\n          lineHeight: '23px !important'\r\n        },\r\n\r\n        '&$error': { \r\n          marginLeft: 0,\r\n        },\r\n\r\n        '&.Mui-disabled': {\r\n          color: 'black',\r\n          fontSize: 12,\r\n          lineHeight: '0',\r\n          opacity: 0.7\r\n        },\r\n      },\r\n    },\r\n\r\n    MuiSelect: {\r\n      icon: {\r\n        color: '#333',\r\n        marginRight: '1.5vh'\r\n      }\r\n    },\r\n\r\n    MuiInputBase: {\r\n      inputAdornedEnd: {\r\n        paddingLeft: '1vh'\r\n      },\r\n\r\n      input: {\r\n        '&::placeholder': {\r\n          color: 'black !important',\r\n          opacity: '1 !important',\r\n        },\r\n        paddingLeft: '1vh !important',\r\n        paddingRight: '1vh !important',\r\n\r\n        '&::selection' : {\r\n          backgroundColor: 'rgba(#750afc, .7)'\r\n        },\r\n      },\r\n\r\n      root: {\r\n        minHeight: 0,\r\n        background: `none`,\r\n        border: 'none',\r\n        fontSize: 25,\r\n        fontWeight: 300,\r\n        color: 'black',\r\n        textTransform: 'none',\r\n        transition: 'all .3s',\r\n        paddingBottom: 3,\r\n\r\n        '&:hover' : {\r\n          border: 'none',\r\n          background: `none`,\r\n        },\r\n\r\n        '&.Mui-focused': {\r\n          border: 'none',\r\n          background: `none`,\r\n        },\r\n\r\n        '&.Mui-disabled': {\r\n          background: `none`,\r\n          border: '1px solid rgba(255, 255, 255, .1)',\r\n          opacity: .7,\r\n        },\r\n\r\n        '&.Mui-error': {\r\n          color: '#ff003c',\r\n          border: '1px solid rgba(252, 10, 24, .1)',\r\n          background: `none`\r\n        },\r\n      },\r\n    },\r\n\r\n    MuiButton: {\r\n      text: {\r\n        textTransform: 'none',\r\n        fontSize: 14,\r\n        fontWeight: 'bold',\r\n        alignSelf: 'center',\r\n\r\n        ['@media (max-width: 767px)']: { \r\n          alignSelf: 'center !important',\r\n        }\r\n      },\r\n\r\n      outlined: {\r\n        textTransform: 'none',\r\n        fontSize: 14,\r\n        paddingTop: '1px',\r\n        paddingBottom: '1px',\r\n        paddingLeft: '6px',\r\n        paddingRight: '6px',\r\n        borderRadius: 'none !important',\r\n\r\n        ['@media (max-width: 767px)']: { \r\n          fontSize: 14\r\n        },\r\n\r\n        '&.Mui-disabled': {\r\n          color: 'inherit'\r\n        },\r\n      },\r\n\r\n      contained: {\r\n        backgroundColor: 'rgb(255, 178, 33)',\r\n        border: '2px solid rgb(255, 178, 33)',\r\n        borderRadius: 'none !important',\r\n        fontWeight: 500,\r\n        fontSize: 14,\r\n        textTransform: 'none',\r\n        color: 'black !important',\r\n        boxShadow: 'none !important',\r\n        padding: '0',\r\n        transition: 'all .3s',\r\n        margin: 0,\r\n\r\n        '&:hover' : {\r\n          backgroundColor: 'rgb(255, 178, 33) !important',\r\n          boxShadow: '0 0 5px rgb(255, 178, 33), 0 0 5px rgb(255, 178, 33) !important'\r\n        },\r\n\r\n        '&.Mui-disabled': {\r\n          backgroundColor: '#ffe7bb !important',\r\n          border: '2px solid #ffe7bb',\r\n          color: '#666 !important'\r\n        },\r\n\r\n        ['@media (max-width: 767px)']: {\r\n          fontSize: 14\r\n        }\r\n      }\r\n    },\r\n  },\r\n});","import {atom, selector} from 'recoil';\r\n\r\nexport const navigationAtom = atom({\r\n  key: 'navigationAtom',\r\n  default: {\r\n    index: 0,\r\n    account: {\r\n      id: 1,\r\n      name: 'Robson Cezario',\r\n      bankMoney: 7000,\r\n      money: 500\r\n    },\r\n    withdrawInput: 0,\r\n    isAsyncRequesting: false\r\n  } \r\n});","import {atom} from 'recoil';\r\n\r\nexport const bottomNavigationAtom = atom({\r\n  key: 'bottomNavigationAtom',\r\n  default: {\r\n    index: 0\r\n  } \r\n});","import React, {useEffect} from 'react';\r\nimport { \r\n  Button,\r\n  Typography,\r\n  withStyles\r\n} from '@material-ui/core';\r\nimport { useRecoilState } from 'recoil';\r\nimport * as atoms from '../../navigation/atoms';\r\n\r\nimport * as bottomAtoms from '../../bottomNavigation/atoms';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    width: '100%'\r\n  } as React.CSSProperties,\r\n\r\n  bank: {\r\n    width: '7.5vh',\r\n    height: '7.5vh'\r\n  } as React.CSSProperties,\r\n\r\n  moneyContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column'\r\n  } as React.CSSProperties,\r\n\r\n  row: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  icon: {\r\n    width: '2vh',\r\n    height: '2vh'\r\n  } as React.CSSProperties,\r\n\r\n  spacer: {\r\n    marginTop: '-1vh'\r\n  } as React.CSSProperties,\r\n\r\n  amount: {\r\n  } as React.CSSProperties,\r\n\r\n  money: {\r\n    color: '#9f9f91 !important'\r\n  } as React.CSSProperties,\r\n\r\n  chevron: {\r\n    marginTop: '-1.5vh',\r\n    fontSize: '2vh'\r\n  } as React.CSSProperties,\r\n\r\n  button: {\r\n    width: '3vh  !important',\r\n    height: '3vh !important',\r\n    padding: '0 !important'\r\n  } as React.CSSProperties\r\n}\r\n\r\nconst LogoutButton = withStyles({\r\n  root: {\r\n    minWidth: '4vh',\r\n    maxWidth: '4vh',\r\n    width: '4vh  !important',\r\n    height: '4vh !important',\r\n    padding: '0 !important',\r\n    borderRadius: '50% !important',\r\n    border: 'none !important',\r\n    backgroundColor: 'rgb(255, 178, 33)',\r\n    color: '#333'\r\n  },\r\n\r\n  label: {\r\n    color: '#333',\r\n    '&:hover': {\r\n      color: 'black !important'\r\n    }\r\n  }\r\n})(Button);\r\n\r\nconst Header = () => {\r\n  const [navigation, setNavigation] = useRecoilState(atoms.navigationAtom);\r\n  const [bottomNavigation, setBottomNavigation] = useRecoilState(bottomAtoms.bottomNavigationAtom);\r\n\r\n  const handleClose = () => {\r\n    //document.onkeydown = null;\r\n    if(bottomNavigation.index === 0) {\r\n      setNavigation(prevState => ({ \r\n        ...prevState,\r\n        index: -1\r\n      })); \r\n    } else {\r\n      setBottomNavigation(prevState => ({ \r\n        ...prevState,\r\n        index: 0\r\n      })); \r\n    }\r\n  };\r\n\r\n  const keyDown = (event: any) => {\r\n    if(event.keyCode === 27 || event.keyCode === 69) {\r\n      //handleClose();\r\n    }\r\n  }\r\n\r\n  const handleKeyPress = () => {\r\n    document.onkeydown = keyDown;\r\n  }\r\n\r\n  useEffect(handleKeyPress, []);\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <img style={styles.bank} \r\n            src={process.env.PUBLIC_URL + '/media/ui/cda.png'} />\r\n\r\n      <div style={styles.moneyContainer}>\r\n        <Typography \r\n          variant='body2' \r\n          component='div'>\r\n            Olá, {navigation.account.name}\r\n        </Typography>\r\n\r\n        <Typography \r\n          variant='caption' \r\n          component='div'>\r\n            Dinheiro da carteira {new Intl.NumberFormat('en-US', { \r\n              style: 'currency', \r\n              currency: 'USD'\r\n            }).format(navigation.account.money)}\r\n        </Typography>\r\n\r\n        <Typography \r\n          variant='caption' \r\n          component='div'\r\n          style={styles.spacer}>\r\n            Saldo bancário {new Intl.NumberFormat('en-US', { \r\n              style: 'currency', \r\n              currency: 'USD'\r\n            }).format(navigation.account.bankMoney)}\r\n        </Typography>\r\n      </div>\r\n\r\n      <LogoutButton onClick={handleClose}\r\n            variant='contained'\r\n            color='primary'> {bottomNavigation.index === 0 ? '✖' : '🡨'}\r\n      </LogoutButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React, {useEffect, useState} from 'react';\r\nimport { \r\n  Button,\r\n  Typography,\r\n  withStyles\r\n} from '@material-ui/core';\r\nimport { useRecoilState } from 'recoil';\r\nimport * as atoms from '../../bottomNavigation/atoms';\r\n\r\nconst styles = {\r\n  container: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: '10vh',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    boxSizing: 'border-box',\r\n    padding: '1vh'\r\n  } as React.CSSProperties,\r\n\r\n  icon: {\r\n    width: '6vh',\r\n    height: '6vh'\r\n  } as React.CSSProperties,\r\n\r\n  endAligner: {\r\n    marginTop: 'auto'\r\n  } as React.CSSProperties,\r\n\r\n  dark: {\r\n    filter: 'brightness(0)'\r\n  } as React.CSSProperties\r\n}\r\n\r\nconst TheButton = withStyles({\r\n  root: {\r\n    minWidth: '12.5vh',\r\n    maxWidth: '12.5vh',\r\n    width: '12.5vh  !important',\r\n    height: '12.5vh !important',\r\n    padding: '0 !important',\r\n    borderRadius: '50% !important',\r\n    border: 'none !important',\r\n    backgroundColor: '#ffe7bb'\r\n  },\r\n\r\n  label: {\r\n    color: 'black !important',\r\n    fontWeight: 'bold',\r\n\r\n    '&:hover': {\r\n      color: 'black !important'\r\n    }\r\n  }\r\n})(Button);\r\n\r\nconst HoveredButton = withStyles({\r\n  root: {\r\n    minWidth: '12.5vh',\r\n    maxWidth: '12.5vh',\r\n    width: '12.5vh  !important',\r\n    height: '12.5vh !important',\r\n    padding: '0 !important',\r\n    borderRadius: '50% !important',\r\n    border: 'none !important',\r\n    backgroundColor: 'rgb(255, 178, 33)'\r\n  }\r\n})(Button);\r\n\r\nconst ActionButton = (props: any) => {\r\n  const [navigation, setNavigation] = useRecoilState(atoms.bottomNavigationAtom);\r\n  const [isHover, setHover] = useState<boolean>(false);\r\n\r\n  const handleTabIndex = () => {\r\n    setNavigation(prevState => ({ \r\n      ...prevState,\r\n      index: props.index\r\n    })); \r\n    setHover(false);\r\n  };\r\n\r\n  const handleOnMouseEnter = () => {\r\n    setHover(true);\r\n  };\r\n\r\n  const handleOnMouseLeave = () => {\r\n    setHover(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {navigation.index === props.index && (\r\n        <HoveredButton \r\n            onClick={handleTabIndex}\r\n            onMouseEnter={handleOnMouseEnter}\r\n            onMouseLeave={handleOnMouseLeave}\r\n            variant='contained'\r\n            color='primary'>\r\n          <div style={styles.container}>\r\n            <img style={{...styles.icon, ...styles.dark}} \r\n                src={process.env.PUBLIC_URL + '/media/ui/' + props.icon} /> \r\n\r\n            <Typography \r\n              variant='body2' \r\n              component='div'\r\n              style={{...styles.endAligner, ...styles.dark}}>\r\n              {props.name}\r\n            </Typography>\r\n          </div>  \r\n        </HoveredButton>\r\n      )}\r\n\r\n      {navigation.index !== props.index && (\r\n        <TheButton \r\n            onClick={handleTabIndex}\r\n            onMouseEnter={handleOnMouseEnter}\r\n            onMouseLeave={handleOnMouseLeave}\r\n            variant='contained'\r\n            color='primary'>\r\n          <div style={styles.container}>\r\n            <img style={isHover ? {...styles.icon, ...styles.dark} : styles.icon} \r\n                src={process.env.PUBLIC_URL + '/media/ui/' + props.icon} /> \r\n\r\n            <Typography \r\n              variant='body2' \r\n              component='div'\r\n              style={isHover ? {...styles.endAligner, ...styles.dark} : styles.endAligner}>\r\n              {props.name}\r\n            </Typography>\r\n          </div>  \r\n        </TheButton>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ActionButton;","import React, { useEffect } from 'react';\r\nimport ActionButton from '../components/ActionButton';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '65vh'\r\n  } as React.CSSProperties,\r\n\r\n  wrapper: {\r\n    marginLeft: '1vh'\r\n  } as React.CSSProperties\r\n}\r\n\r\nconst BottomNavigation = () => {\r\n  const buttonList = [\r\n  {\r\n    name: 'Inicío',\r\n    icon: 'home.svg'\r\n  },\r\n\r\n  {\r\n    name: 'Transferencia',\r\n    icon: 'transfer.svg'\r\n  },\r\n\r\n  {\r\n    name: 'Depositar',\r\n    icon: 'deposit.svg'\r\n  },\r\n\r\n  {\r\n    name: 'Sacar',\r\n    icon: 'withdraw.svg'\r\n  },\r\n\r\n  {\r\n    name: 'Extrato',\r\n    icon: 'bill.svg'\r\n  }];\r\n  \r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      {buttonList.map((b, index) => (\r\n        <>\r\n          {index === 1 &&\r\n            <ActionButton\r\n              name={b.name}\r\n              icon={b.icon}\r\n              index={index} />\r\n          }\r\n\r\n          {index > 1 &&\r\n            <div style={styles.wrapper}>\r\n              <ActionButton\r\n                name={b.name}\r\n                icon={b.icon}\r\n                index={index} />\r\n            </div>\r\n          }\r\n        </>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BottomNavigation;","import React from 'react';\r\n\r\nconst useStyles = (props: any) => ({\r\n  container: {\r\n    position: 'relative'\r\n  }  as React.CSSProperties,\r\n\r\n  loader: {\r\n    width: props.size,\r\n    height: props.size,\r\n    borderRadius: '50%',\r\n    border: `${props.stroke}px solid transparent`,\r\n    borderLeftColor: props.color,\r\n    borderLeftWidth: props.stroke,\r\n    borderRightColor: props.color,\r\n    borderRightWidth: props.stroke,\r\n  } as React.CSSProperties\r\n})\r\n\r\nconst Loader = (props: any) => {\r\n  const styles = useStyles(props);\r\n\r\n  return (\r\n      <div style={styles.loader}\r\n           className='loader'></div>\r\n  );\r\n};  \r\n\r\nexport default Loader;","import React from 'react';\r\nimport { \r\n  Button,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Loader from '../Loader';\r\n\r\nimport * as atoms from '../../navigation/atoms';\r\nimport { useRecoilValue } from 'recoil';\r\n\r\nconst SubmitButtonWithSelector = (props: any) => {\r\n  const {isAsyncRequesting} = useRecoilValue(atoms.navigationAtom);\r\n\r\n  return (\r\n    <Button onClick={props?.onClick}   \r\n            variant='contained'\r\n            disabled={props.isDisabled === true || isAsyncRequesting === true}\r\n            fullWidth={props?.fullWidth}\r\n            style={props?.style}>\r\n      {isAsyncRequesting && (\r\n        <Loader stroke={1}\r\n                size={10}\r\n                color={'#bfbfb1'} />\r\n      )}\r\n      {props.label}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default SubmitButtonWithSelector;","import { DateRange } from \"@material-ui/pickers/src/DateRangePicker/RangeTypes\";\r\n\r\nexport class BankService {\r\n  static getDetails = async (userId: number) => {\r\n    const response = await fetch(`http://localhost:5000/fivem/users/${userId}`, {\r\n      method: 'GET',\r\n      headers: {'Content-Type': 'application/json'}\r\n    });\r\n\r\n    const result = await response.json();\r\n\r\n    return result;\r\n  }\r\n\r\n  static deposit = async (userId: number, amount: number) => {\r\n    const response = await fetch('http://localhost:5000/fivem/users/deposit', {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        Id: userId,\r\n        Amount: amount\r\n      })\r\n    });\r\n\r\n    const result = await response.json();\r\n    return result;\r\n  }\r\n\r\n  static withdraw = async (userId: number, amount: number) => {\r\n    const response = await fetch('http://localhost:5000/fivem/users/withdraw', {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        Id: userId,\r\n        Amount: amount\r\n      })\r\n    });\r\n\r\n    const result = await response.json();\r\n    return result;\r\n  }\r\n\r\n  static transfer = async (userId: number, targetId: number, amount: number) => {\r\n    const response = await fetch('http://localhost:5000/fivem/users/transfer', {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        Id: userId,\r\n        TargetId: targetId,\r\n        Amount: amount\r\n      })\r\n    });\r\n\r\n    const result = await response.json();\r\n    return result;\r\n  }\r\n\r\n  static getBalance = async (userId: number, page: number, pageSize: number = 10, selectedDate?: DateRange) => {\r\n    const startAt = selectedDate && selectedDate[0] && Math.floor(selectedDate[0]!.getTime() / 1000);\r\n    const endAt = selectedDate && selectedDate[1] && Math.floor(selectedDate[1]!.getTime() / 1000);\r\n\r\n    const response = await fetch('http://localhost:5000/fivem/users/balance', {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        Id: userId,\r\n        CurrentPage: page,\r\n        PageSize: pageSize,\r\n        StartAt: startAt,\r\n        EndAt: endAt\r\n      })\r\n    });\r\n    const result = await response.json();\r\n\r\n    return result;\r\n  }\r\n}","import React, {useState} from 'react';\r\nimport { \r\n  Typography,\r\n  TextField,\r\n  withStyles\r\n} from '@material-ui/core';\r\nimport NumberFormat from 'react-number-format';\r\nimport { useRecoilState } from 'recoil';\r\nimport * as atoms from '../../navigation/atoms';\r\nimport SubmitButtonWithSelector from '../../components/SubmitButtonWithSelector';\r\nimport { BankService } from '../../services/service';\r\n\r\nconst styles = {\r\n  container: {\r\n    width: '100%',\r\n    height: '65vh',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column'\r\n  } as React.CSSProperties,\r\n\r\n  buttonContainer: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    boxSizing: 'border-box',\r\n    padding: '1vh'\r\n  } as React.CSSProperties,\r\n\r\n  icon: {\r\n    width: '3vh',\r\n    height: '3vh'\r\n  } as React.CSSProperties,\r\n\r\n  withDescription: {\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start',\r\n    flexDirection: 'column'\r\n  } as React.CSSProperties,\r\n\r\n  wrapper: {\r\n    marginTop: '1vh',\r\n    width: '30vw'\r\n  } as React.CSSProperties\r\n}\r\n\r\ninterface NumberFormatCustomProps {\r\n  inputRef: (instance: NumberFormat | null) => void;\r\n  onChange: (event: { target: { name: string; value: string } }) => void;\r\n  name: string;\r\n}\r\n\r\nfunction NumberFormatCustom(props: NumberFormatCustomProps) {\r\n  const {inputRef, onChange, ...other} = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      isNumericString\r\n      prefix=\"$\"\r\n    />\r\n  );\r\n}\r\n\r\nconst WithdrawScreen = () => {\r\n  const [data, setAccount] = useRecoilState(atoms.navigationAtom);\r\n  const [amount, setAmount] = useState(data.account.bankMoney.toString());\r\n\r\n  const isDisabled = !(data.account.bankMoney >= parseInt(amount) &&   \r\n                     parseInt(amount) >= 1);\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAmount(event.target.value as string);\r\n  };\r\n\r\n  const handleWithdraw = () => {\r\n    const value = parseInt(amount);\r\n\r\n    setAccount(prevState => ({ \r\n      ...prevState,\r\n      account: {\r\n        ...prevState.account, \r\n        ...{\r\n          bankMoney: data.account.bankMoney - value,\r\n          money: data.account.money + value\r\n        }\r\n      },\r\n      isAsyncRequesting: true\r\n    }));\r\n\r\n    async function withdraw() {\r\n      await BankService.withdraw(data.account.id, value);\r\n\r\n      setAccount(prevState => ({ \r\n        ...prevState,\r\n        isAsyncRequesting: false\r\n      }));\r\n    }\r\n\r\n    withdraw();\r\n  }\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <div style={styles.buttonContainer}>\r\n        <div style={styles.withDescription}>\r\n          <Typography \r\n            variant='subtitle2' \r\n            component='div'>\r\n            Quanto você gostaria de sacar?\r\n          </Typography>\r\n\r\n          <Typography \r\n            variant='body2' \r\n            component='div'>\r\n            Você tem {new Intl.NumberFormat('en-US', { \r\n              style: 'currency', \r\n              currency: 'USD'\r\n            }).format(data.account.bankMoney)} disponível\r\n          </Typography>\r\n\r\n          <TextField\r\n            label=\"\"\r\n            value={amount}\r\n            onChange={handleChange}\r\n            autoFocus={true}\r\n            InputProps={{\r\n              inputComponent: NumberFormatCustom as any,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>  \r\n\r\n      <div style={styles.wrapper}>\r\n        <SubmitButtonWithSelector\r\n          label='Sacar ➝'\r\n          isDisabled={isDisabled}\r\n          onClick={handleWithdraw}\r\n          fullWidth={true} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WithdrawScreen;","import React, {useState} from 'react';\r\nimport { \r\n  Typography,\r\n  TextField,\r\n  withStyles\r\n} from '@material-ui/core';\r\nimport NumberFormat from 'react-number-format';\r\nimport { useRecoilState } from 'recoil';\r\nimport * as atoms from '../../navigation/atoms';\r\nimport SubmitButtonWithSelector from '../../components/SubmitButtonWithSelector';\r\nimport { BankService } from '../../services/service';\r\n\r\nconst styles = {\r\n  container: {\r\n    width: '100%',\r\n    height: '65vh',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column'\r\n  } as React.CSSProperties,\r\n\r\n  buttonContainer: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    boxSizing: 'border-box',\r\n    padding: '1vh'\r\n  } as React.CSSProperties,\r\n\r\n  icon: {\r\n    width: '3vh',\r\n    height: '3vh'\r\n  } as React.CSSProperties,\r\n\r\n  withDescription: {\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start',\r\n    flexDirection: 'column'\r\n  } as React.CSSProperties,\r\n\r\n  wrapper: {\r\n    marginTop: '1vh',\r\n    width: '30vw'\r\n  } as React.CSSProperties\r\n}\r\n\r\ninterface NumberFormatCustomProps {\r\n  inputRef: (instance: NumberFormat | null) => void;\r\n  onChange: (event: { target: { name: string; value: string } }) => void;\r\n  name: string;\r\n}\r\n\r\nfunction NumberFormatCustom(props: NumberFormatCustomProps) {\r\n  const {inputRef, onChange, ...other} = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      isNumericString\r\n      prefix=\"$\"\r\n    />\r\n  );\r\n}\r\n\r\nconst DepositScreen = () => {\r\n  const [data, setAccount] = useRecoilState(atoms.navigationAtom);\r\n  const [amount, setAmount] = useState(data.account.money.toString());\r\n\r\n  const isDisabled = !(data.account.money >= parseInt(amount) &&   \r\n                     parseInt(amount) >= 1);\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAmount(event.target.value as string);\r\n  };\r\n\r\n  const handleDeposit = () => {\r\n    const value = parseInt(amount);\r\n\r\n    setAccount(prevState => ({ \r\n      ...prevState,\r\n      account: {\r\n        ...prevState.account, \r\n        ...{\r\n          money: data.account.money - value,\r\n          bankMoney: data.account.bankMoney + value\r\n        }\r\n      },\r\n      isAsyncRequesting: true\r\n    }));\r\n\r\n    async function deposit() {\r\n      await BankService.deposit(data.account.id, value);\r\n\r\n      setAccount(prevState => ({ \r\n        ...prevState,\r\n        isAsyncRequesting: false\r\n      }));\r\n    }\r\n\r\n    deposit();\r\n  }\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <div style={styles.buttonContainer}>\r\n        <div style={styles.withDescription}>\r\n          <Typography \r\n            variant='subtitle2' \r\n            component='div'>\r\n            Quanto você gostaria de depositar?\r\n          </Typography>\r\n\r\n          <Typography \r\n            variant='body2' \r\n            component='div'>\r\n            Você tem {new Intl.NumberFormat('en-US', { \r\n              style: 'currency', \r\n              currency: 'USD'\r\n            }).format(data.account.money)} em mãos\r\n          </Typography>\r\n\r\n          <TextField\r\n            label=\"\"\r\n            value={amount}\r\n            onChange={handleChange}\r\n            autoFocus={true}\r\n            InputProps={{\r\n              inputComponent: NumberFormatCustom as any,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>  \r\n\r\n      <div style={styles.wrapper}>\r\n        <SubmitButtonWithSelector\r\n            label='Depositar ➝'\r\n            isDisabled={isDisabled}\r\n            isAsyncRequesting={data.isAsyncRequesting}\r\n            onClick={handleDeposit}\r\n            fullWidth={true} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DepositScreen;","import React, {useState} from 'react';\r\nimport { \r\n  Typography,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport NumberFormat from 'react-number-format';\r\nimport { useRecoilState } from 'recoil';\r\nimport * as atoms from '../../navigation/atoms';\r\nimport SubmitButtonWithSelector from '../../components/SubmitButtonWithSelector';\r\nimport { BankService } from '../../services/service';\r\n\r\nconst styles = {\r\n  container: {\r\n    width: '100%',\r\n    height: '65vh',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column'\r\n  } as React.CSSProperties,\r\n\r\n  buttonContainer: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    boxSizing: 'border-box',\r\n    padding: '1vh'\r\n  } as React.CSSProperties,\r\n\r\n  icon: {\r\n    width: '3vh',\r\n    height: '3vh'\r\n  } as React.CSSProperties,\r\n\r\n  withDescription: {\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start',\r\n    flexDirection: 'column'\r\n  } as React.CSSProperties,\r\n\r\n  wrapper: {\r\n    marginTop: '1vh',\r\n    width: '30vw'\r\n  } as React.CSSProperties\r\n}\r\n\r\ninterface NumberFormatCustomProps {\r\n  inputRef: (instance: NumberFormat | null) => void;\r\n  onChange: (event: { target: { name: string; value: string } }) => void;\r\n  name: string;\r\n}\r\n\r\nfunction NumberFormatCustom(props: NumberFormatCustomProps) {\r\n  const {inputRef, onChange, ...other} = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      isNumericString\r\n      prefix=\"$\"\r\n    />\r\n  );\r\n}\r\n\r\nconst TransferScreen = () => {\r\n  const [data, setAccount] = useRecoilState(atoms.navigationAtom);\r\n  const [amount, setAmount] = useState(data.account.bankMoney.toString());\r\n  const [playerId, setPlayerId] = useState<string | null>(null);\r\n\r\n  const isDisabled = !(data.account.bankMoney >= parseInt(amount) &&   \r\n                     parseInt(amount) >= 1) ||\r\n                     !playerId ||\r\n                     parseInt(playerId) === data.account.id ||\r\n                     (parseInt(playerId as string) > 10000) ||\r\n                     (parseInt(playerId as string) < 1);\r\n\r\n  const handleChangePlayerId = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPlayerId(event.target.value as string);\r\n  };\r\n\r\n  const handleOnInput = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    event.target.value = (event.target.value || ' ').replace(/\\D+/g, '').trim()\r\n  };\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAmount(event.target.value as string);\r\n  };\r\n\r\n  const handleTransfer = () => {\r\n    const value = parseInt(amount);\r\n\r\n    setAccount(prevState => ({ \r\n      ...prevState,\r\n      account: {\r\n        ...prevState.account, \r\n        ...{\r\n          bankMoney: data.account.bankMoney - value\r\n        }\r\n      },\r\n      isAsyncRequesting: true\r\n    }));\r\n\r\n    async function transfer() {\r\n      const result = await BankService.transfer(data.account.id, parseInt(playerId as string), value);\r\n\r\n      console.log(result);\r\n\r\n      if(result.status === 400) {\r\n        setAccount(prevState => ({ \r\n          ...prevState,\r\n          account: {\r\n            ...prevState.account, \r\n            ...{\r\n              bankMoney: data.account.bankMoney\r\n            }\r\n          },\r\n          isAsyncRequesting: false\r\n        }));\r\n      } else {\r\n        setAccount(prevState => ({ \r\n          ...prevState,\r\n          isAsyncRequesting: false\r\n        }));\r\n      }\r\n    }\r\n\r\n    transfer();\r\n  }\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <div style={styles.buttonContainer}>\r\n        <div style={styles.withDescription}>\r\n          <Typography \r\n            variant='subtitle2' \r\n            component='div'>\r\n            Para quem gostaria de transferir?\r\n          </Typography>\r\n\r\n          <TextField\r\n            label=\"ID do personagem\"\r\n            value={playerId}\r\n            onChange={handleChangePlayerId}\r\n            onInput={handleOnInput}\r\n            autoFocus={true}\r\n          />\r\n\r\n          <Typography \r\n            variant='subtitle2' \r\n            component='div'>\r\n            Quanto você gostaria de transferir?\r\n          </Typography>\r\n\r\n          <Typography \r\n            variant='body2' \r\n            component='div'>\r\n            Você tem {new Intl.NumberFormat('en-US', { \r\n              style: 'currency', \r\n              currency: 'USD'\r\n            }).format(data.account.bankMoney)} disponível\r\n          </Typography>\r\n\r\n          <TextField\r\n            label=\"\"\r\n            value={amount}\r\n            onChange={handleChange}\r\n            InputProps={{\r\n              inputComponent: NumberFormatCustom as any,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>  \r\n\r\n      <div style={styles.wrapper}>\r\n        <SubmitButtonWithSelector\r\n          label='Transferir ➝'\r\n          isDisabled={isDisabled}\r\n          onClick={handleTransfer}\r\n          fullWidth={true} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransferScreen;","import React, {\r\n  useState, \r\n  useEffect\r\n} from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport { \r\n  TextField,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport { \r\n  DateRangePicker, \r\n  DateRange, \r\n  LocalizationProvider \r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@material-ui/pickers/adapter/date-fns\"; \r\nimport ptbrLocale from \"date-fns/locale/pt-BR\";\r\n\r\nimport { useRecoilState } from 'recoil';\r\nimport * as atoms from '../../navigation/atoms';\r\nimport { BankService } from '../../services/service';\r\nimport { Balance } from '../../models/Balance';\r\nimport Loader from '../../components/Loader';\r\nimport { User } from '../../models/User';\r\n\r\n\r\nconst styles = {\r\n  container: {\r\n    width: '100%',\r\n    height: '65vh',\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start',\r\n    flexDirection: 'column'\r\n  } as React.CSSProperties,\r\n\r\n  pickerContainer: {\r\n    width: '50%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    alignSelf: 'flex-end',\r\n    padding: '1vh'\r\n  } as React.CSSProperties,\r\n\r\n  table: {\r\n    marginTop: '5vh'\r\n  } as React.CSSProperties,\r\n\r\n  dateContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  } as React.CSSProperties,\r\n\r\n  dateSpacer: {\r\n    marginLeft: '.5vh',\r\n    marginRight: '.5vh',\r\n    whiteSpace: 'nowrap'\r\n  } as React.CSSProperties\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    height: '50vh',\r\n  },\r\n});\r\n\r\nconst columns: any[] = [\r\n  { \r\n    id: 'amount', \r\n    label: 'Quantia', \r\n    minWidth: '15vw',\r\n    format: (value: number) => new Intl.NumberFormat('en-US', { \r\n      style: 'currency', \r\n      currency: 'USD'\r\n    }).format(value)\r\n  },\r\n\r\n  {\r\n    id: 'target', \r\n    label: 'Para quem', \r\n    minWidth: '20vw',\r\n    format: (value: any) => {\r\n      if(value === null || value === undefined) {\r\n        return '';\r\n      }\r\n\r\n      return value.name;\r\n    }\r\n  },\r\n  {\r\n    id: 'type', \r\n    label: 'Tipo', \r\n    minWidth: '10vw',\r\n    format: (value: number) => {\r\n      switch(value) {\r\n        case 1: \r\n          return 'Depósito';\r\n        case 2: \r\n          return 'Saque';\r\n        case 3: \r\n          return 'Envio';\r\n        case 4: \r\n          return 'Recebido';\r\n      }\r\n    }\r\n  },\r\n\r\n  { \r\n    id: 'createdAt', \r\n    label: 'Quando', \r\n    minWidth: '15vw',\r\n    format: (value: string) => {\r\n      const date = new Date(value);\r\n\r\n      return new Intl.DateTimeFormat('pt-BR', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n        hour: 'numeric',\r\n        minute: 'numeric'\r\n      }).format(date)\r\n        .replaceAll('.','');\r\n    }\r\n  },\r\n];\r\n\r\ninterface IResponse {\r\n  isAsyncRequesting: boolean;\r\n  pageData?: IPage;\r\n}\r\n\r\ninterface IPage {\r\n  currentPage: number;\r\n  pageSize: number;\r\n  totalPages: number;\r\n  totalItems: number;\r\n  itemList: Array<Balance>;\r\n}\r\n\r\nconst BillsScreen = () => {\r\n  const [{account}, setAccount] = useRecoilState(atoms.navigationAtom);\r\n  const [data, setData] = useState<IResponse | null>({\r\n    pageData: undefined,\r\n    isAsyncRequesting: true\r\n  });\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [selectedDate, handleDateChange] = React.useState<DateRange>([null, null]);\r\n\r\n  const onPageChange = () => {\r\n    async function receiptSubscriber() {\r\n      if(!data?.isAsyncRequesting) {\r\n        setData(prevState => ({ \r\n          ...prevState,\r\n          isAsyncRequesting: true \r\n        }));\r\n      }\r\n\r\n      const pageData = await BankService.getBalance(account.id, page, rowsPerPage, selectedDate);\r\n\r\n      setData({\r\n        pageData: pageData,\r\n        isAsyncRequesting: false \r\n      });\r\n    }\r\n\r\n    receiptSubscriber();\r\n  }\r\n\r\n  useEffect(onPageChange, [page, rowsPerPage, selectedDate]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <div style={styles.pickerContainer}>\r\n        <LocalizationProvider dateAdapter={DateFnsUtils} locale={ptbrLocale}>\r\n          <DateRangePicker\r\n            startText=\"Entre\"\r\n            endText=\"Até\"\r\n            value={selectedDate}\r\n            onChange={date => handleDateChange(date)}\r\n            renderInput={(startProps, endProps) => (\r\n              <div style={styles.dateContainer}>\r\n                <Typography \r\n                  variant='body2' \r\n                  component='div'\r\n                  style={styles.dateSpacer}>\r\n                  Filtrar por data\r\n                </Typography>\r\n\r\n                <TextField {...startProps} />\r\n                <Typography \r\n                  variant='body2' \r\n                  component='div'\r\n                  style={styles.dateSpacer}>\r\n                  até\r\n                </Typography>\r\n\r\n                <TextField {...endProps} />\r\n              </div>\r\n            )}\r\n          />\r\n        </LocalizationProvider>\r\n      </div>  \r\n\r\n      <div style={styles.table}>\r\n        {data!.isAsyncRequesting === true && (\r\n          <Loader stroke={1}\r\n            size={15}\r\n            color={'rgb(255, 178, 33)'} /> \r\n        )}\r\n\r\n        {data!.isAsyncRequesting === false && (\r\n          <>\r\n            <TableContainer className={classes.container}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((column) => (\r\n                      <TableCell\r\n                        key={column.id}\r\n                        align={column.align}\r\n                        style={{minWidth: column.minWidth}}\r\n                      >\r\n                        {column.label}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {(data?.pageData?.itemList ?? []).map((row) => {\r\n                    return (\r\n                      <TableRow hover key={row.id}>\r\n                        {columns.map((column) => {\r\n                          const value = (row as any)[column.id];\r\n\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {column.format && value ? column.format(value) : value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n   \r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 25, 100]}\r\n              component=\"div\"\r\n              count={data?.pageData?.totalItems ?? 0}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              labelRowsPerPage='Linhas por página'\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </>\r\n        )}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BillsScreen;","import React from 'react';\r\nimport { \r\n  Paper,\r\n  Typography \r\n} from '@material-ui/core';\r\nimport { useRecoilValue } from 'recoil';\r\n\r\nimport Header from '../../components/Header';\r\nimport BottomNavigation from '../../bottomNavigation';\r\n\r\nimport * as atoms from '../../bottomNavigation/atoms';\r\nimport WithdrawScreen from '../Withdraw';\r\nimport DepositScreen from '../Deposit';\r\nimport TransferScreen from '../Transfer';\r\nimport BillsScreen from '../Bills';\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    position: 'absolute', \r\n    left: '50%', \r\n    top: '50%',\r\n    transform: 'translate(-50%, -50%)'\r\n  } as React.CSSProperties,\r\n\r\n  spacer: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingBottom: '3vh'\r\n  } as React.CSSProperties,\r\n\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start',\r\n    flexDirection: 'column',\r\n    width: '70vw',\r\n    padding: '2vh'\r\n  } as React.CSSProperties\r\n}\r\n\r\nconst HomeScreen = () => {\r\n  const {index} = useRecoilValue(atoms.bottomNavigationAtom);\r\n\r\n  const NavigationController = () => {\r\n    switch(index) {\r\n      case 0: \r\n        return (<BottomNavigation />);\r\n      case 1:\r\n        return (<TransferScreen />)\r\n      case 2: \r\n        return (<DepositScreen />);\r\n      case 3: \r\n        return (<WithdrawScreen />);\r\n      case 4: \r\n        return (<BillsScreen />)\r\n      default: \r\n        return (<></>);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={styles.wrapper}>\r\n      <Paper style={styles.container}>\r\n        <Header />\r\n\r\n        <div style={styles.spacer}>\r\n          <NavigationController />\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;","import React, { useEffect } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport HomeScreen from '../screens/Home';\r\nimport { BankService } from '../services/service';\r\n\r\nimport * as atoms from './atoms';\r\n\r\nconst Navigation = () => {\r\n  const [navigation, setNavigation] = useRecoilState(atoms.navigationAtom);\r\n\r\n  const fetchDetails = () => {\r\n    async function receiptSubscriber() {\r\n      const result = await BankService.getDetails(1);\r\n\r\n      setNavigation(prevState => ({ \r\n        ...prevState,\r\n        account: result\r\n      })); \r\n    }\r\n\r\n    receiptSubscriber();\r\n  }\r\n\r\n  useEffect(fetchDetails, []);\r\n\r\n  switch(navigation.index) {\r\n    case 0: \r\n      return (<HomeScreen />);\r\n    default: \r\n      return (<></>);\r\n  }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { RecoilRoot } from 'recoil';\r\n\r\nimport dark from './theme/dark';\r\nimport Navigation from './navigation/navigation';\r\n\r\nconst App = () => {\r\n  return (\r\n    <RecoilRoot>\r\n      <MuiThemeProvider theme={dark}>\r\n        <Navigation />\r\n      </MuiThemeProvider>\r\n    </RecoilRoot>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}